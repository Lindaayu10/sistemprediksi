[
  {
    "Id": "530463",
    "ThreadId": "236959",
    "Html": "\r\n<p>I am impressed with all the work on this project and all the functionality.</p>\r\n<p>So, I'm very thankful for it.</p>\r\n<p>However, I find it difficult to use because the object/class model is not typical of that used in most other projects I've worked on.&nbsp; A lot of it is borrowed/inherited, I believe, from original Perl non-Excel2007 version.</p>\r\n<p>I have tried to read thoroughly the documentation but think I have some suggestions that would make it easier for newcomers.</p>\r\n<p>I would like to specifically find any of these combinations:</p>\r\n<ul>\r\n<li>getStyleByColumnAndRow()-&gt;setStyleFromArray() or </li><li>getCellByColumnAndRow()-&gt;setStyleFromArray()or </li><li>getStyleByRange(fromcolumn=1,fromrow=1,tocolumn=100,torow=1000)-&gt;setStyleFromArray()\r\n</li></ul>\r\n<p>....but there's no way to confirm if such a thing exists without trial and error.&nbsp; It's not in the documentation.</p>\r\n<p>I have a dataset coming from a JSON source of arbitrary width using dynamic columns easily exceeding a count of 26.</p>\r\n<p>I cannot statically assign specific data elements to static columns and refer to them by a letter.</p>\r\n<p>I want to convert my data into an Excel-compatible spreadsheet and it would be very cumbersome to write/find/integrate code just to map the numeric column number to A-Z,&nbsp; AA-AZ, BA-BZ,... ZA-ZZ, AAA-ZZZ,... in order to concatenate that with the row\r\n number and feed that to getCellValue/setCellValue/getStyle/setStyle/getHyperlink/setHyperlink/getComment/setComment.&nbsp; I would like to see the &quot;ByColumnAndRow&quot; equivalents.</p>\r\n<p>I would like to see, in the documentation, an alphabetized/itemized function reference and perhaps a picture of the object model</p>\r\n<p>&nbsp;</p>\r\n<p>Please.</p>\r\n<p>Any help appreciated.</p>\r\n",
    "PostedDate": "2010-12-02T20:26:52.527-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "531068",
    "ThreadId": "236959",
    "Html": "\r\n<p>It might help you to know that PHP's &#43;&#43; incrementor works on characters as well as numbers, and 'Z' will be incremented to 'AA' in the manner of Perl; so it is easy&nbsp;to use this feature in loops. e.g</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>$startColumn = <span style=\"color:#a31515\">'A'</span>;\r\n$endColumn = <span style=\"color:#a31515\">'XFD'</span>;\r\n$endColumn&#43;&#43;;\r\n<span style=\"color:blue\">for</span>($column = $startColumn; $column != $endColumn; $colum&#43;&#43;) {\r\n   <span style=\"color:blue\">echo</span> $column,<span style=\"color:#a31515\">' '</span>;\r\n}\r\n</pre>\r\n</div>\r\n<p>You just need to be a bit careful when testing for the end condition, hence my incrementing the end column prior to the loop, then testing for !=</p>\r\n<p>&nbsp;</p>\r\n<p>There is also full PHPDocumentor API documentation in the production downloads that details all classes and their methods, found in /Documentation/API/; and I am in the process of writing much more comprehensive user documentation... though I'm sure that\r\n you can appreciate writing this level of detail is a mammoth task.</p>\r\n",
    "PostedDate": "2010-12-04T03:11:02.293-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "533708",
    "ThreadId": "236959",
    "Html": "\r\n<p>That does help. &nbsp;It should be workable.</p>\r\n<p>I will be pulling data from another array so, I'd probably just use that array's index as the iterator and let it control the &quot;for&quot; loop bounds.</p>\r\n<p>The main drawback is that I'd still carry a temporary &quot;character&quot; variable that I'd remember to initialize before the loop and increment at the end within the loop. &nbsp;Much easier than building an elaborate function to do it, though.</p>\r\n<p>I'm very curious how localization (language, character set, encoding, collation sequence) would affect this style of character incrementation. &nbsp;Would this break it?</p>\r\n<p>I would prefer the reliability of having the &quot;ByColumnAndRow&quot; methods.</p>\r\n<p>I do understand the effort required for good documentation. &nbsp;So very few people are interested in it and so few are good at it. &nbsp;The people qualified to do it usually would rather do code and their bosses would want them to code as well. &nbsp;I\r\n will look for more of that documentation. &nbsp;Didn't know it was out there and didn't find a link to it. &nbsp;&lt;&lt;EDIT: I don't seem to have access to it. ??? &nbsp;http://phpexcel.codeplex.com/Documentation/API ???&gt;&gt;&lt;&lt;EDIT2: DUNHH!!! I\r\n was supposed to download and look at the html documentation files extracted from within. &nbsp;Functions/Methods I'm looking for still aren't there, though. :*( &gt;&gt;</p>\r\n<p>Thanks.&nbsp;</p>\r\n",
    "PostedDate": "2010-12-09T17:29:49.183-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "534135",
    "ThreadId": "236959",
    "Html": "\r\n<blockquote style=\"border:solid .1em #ccc; font-style:italic; margin:.25em 1em 0 1em; padding:0 .25em 0 .25em\">\r\n<strong>complexed wrote:</strong><br>\r\n<p>I will be pulling data from another array so, I'd probably just use that array's index as the iterator and let it control the &quot;for&quot; loop bounds.</p>\r\n<p>The main drawback is that I'd still carry a temporary &quot;character&quot; variable that I'd remember to initialize before the loop and increment at the end within the loop. &nbsp;Much easier than building an elaborate function to do it, though.</p>\r\n</blockquote>\r\n<p>You can always use the PHPExcel_Cell::stringFromColumnIndex($index) method (using the array's index) where 0 returns 'A', 1 returns'B', 25, returns'Z', 26 returns'AA', etc.</p>\r\n<p>&nbsp;</p>\r\n<blockquote style=\"border:solid .1em #ccc; font-style:italic; margin:.25em 1em 0 1em; padding:0 .25em 0 .25em\">\r\n<strong>complexed wrote:</strong><br>\r\n<p>I'm very curious how localization (language, character set, encoding, collation sequence) would affect this style of character incrementation. &nbsp;Would this break it?</p>\r\n</blockquote>\r\n<p>&nbsp;Character incrementing using the &#43;&#43; operator only works with ASCII characters A-Z and a-z, and is case sensitive. It's a very useful quirk of PHP when working with Excel column names (pity the -- decrementor operator doesn't work with strings); and\r\n I use it a lot in my own code.</p>\r\n<p>&nbsp;</p>\r\n<blockquote style=\"border:solid .1em #ccc; font-style:italic; margin:.25em 1em 0 1em; padding:0 .25em 0 .25em\">\r\n<strong>complexed wrote:</strong><br>\r\n<p>I would prefer the reliability of having the &quot;ByColumnAndRow&quot; methods.</p>\r\n</blockquote>\r\n<p>The duplicateStyle() method might be of some use when you want to replicate a style across a whole series of cells. Set the style for a single cell (or create a style object manually). e.g.</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>$objPHPExcel-&gt;getActiveSheet()-&gt;duplicateStyle(getStyleByColumnAndRow($pColumn = 0, $pRow = 1), $pRange = <span style=\"color:#a31515\">'L3:N2048'</span>);\r\n</pre>\r\n</div>\r\n<p>or you can set individual style elements across a range:</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>$objPHPExcel-&gt;getActiveSheet()-&gt;getStyle(<span style=\"color:#a31515\">'L3:N2048'</span>)-&gt;getNumberFormat()-&gt;setFormatCode(<span style=\"color:#a31515\">'dd-mmm-yyyy hh:mm:ss'</span>);</pre>\r\n<pre>\r\n</pre>\r\n</div>\r\n<blockquote style=\"border:solid .1em #ccc; font-style:italic; margin:.25em 1em 0 1em; padding:0 .25em 0 .25em\">\r\n<strong>complexed wrote:</strong><br>\r\n<p>I do understand the effort required for good documentation. &nbsp;So very few people are interested in it and so few are good at it. &nbsp;The people qualified to do it usually would rather do code and their bosses would want them to code as well. &nbsp;I\r\n will look for more of that documentation. &nbsp;Didn't know it was out there and didn't find a link to it. &nbsp;&lt;&lt;EDIT: I don't seem to have access to it. ??? &nbsp;http://phpexcel.codeplex.com/Documentation/API ???&gt;&gt;&lt;&lt;EDIT2: DUNHH!!! I\r\n was supposed to download and look at the html documentation files extracted from within. &nbsp;Functions/Methods I'm looking for still aren't there, though. :*( &gt;&gt;</p>\r\n</blockquote>\r\n<p>&nbsp;Yes, the API documentation isn't here online on&nbsp;codeplex, but is included in the production downloads because it's built dynamically using PHPDocumentor as part of the release process.</p>\r\n<p>The latest download also includes a couple of new sets of documents: the Functionality Cross-Reference.xls file, which I'll be building up slowly; and PHPExcel User Documentation &ndash; Reading Spreadsheet Files.doc with the corresponding set of Examples.\r\n It's my intention to building this into a comprehensive set of documented, worked examples covering most of the functionality of the library... but you're right - like most developers, I'd far rather be developing than documenting. Now that the 1.7.5 release\r\n is available, I'll try to devote some time to expanding this documentation before turning my focus to the code for the 1.7.6 release. I'll look at including a class diagram in that documentation for the next release; and one of these days I'll find the time\r\n to start a blog, including scripted examples of PHPExcel recipes.</p>\r\n",
    "PostedDate": "2010-12-10T13:41:49.827-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "534217",
    "ThreadId": "236959",
    "Html": "\r\n<p>Gee. &nbsp;That pretty much answers all my questions.</p>\r\n<p>Thanks for your time, effort and mostly patience.</p>\r\n<p>Keep up the excellent work.</p>\r\n",
    "PostedDate": "2010-12-10T16:21:34.083-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]