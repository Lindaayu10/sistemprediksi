[
  {
    "Id": "1340405",
    "ThreadId": "577302",
    "Html": "Hi there,<br />\n<br />\nWe are in the process of switching our office code at work from LibreOffice (trough a com connection) to PHPExcel. We load existing xls and ods files as templates, and fill it with data. The xls/ods export part works great (after fiddling around a bit in low memory scenarios). One problem that persists for month now tho is the conversion to pdf files.<br />\n<br />\nPlainly - non of the PDF renderer work. They output garbage in various ways, with no help in sight. Neither the last official release of PHPExcel nor the current github code change this much.<br />\n<br />\nSo I began to write my own converter which works directly with TCPDF (inspired by how this was done before the change to the html sub-step). However, this works only &quot;okay-ish&quot;. Sizes are always a few mm off (not critical, but it bugs me a lot - personally). This could be either a rounding problem (I am aware of the column width problematics), or me using the wrong formula. I wil come to this later.<br />\nSecondly, I struggle with page fitting and scaling. There are 4 values (fitWidth, fitHeight, fitPage and scale) in PHPExcel that reflect different states, but I can't seem to get it right (sizing is always noticeably off). The only scenario that works is with no fitting and 100% scale, or simply width fitting.<br />\n<br />\nAs for how I calculate sizes:<br />\nI use TCPDF in &quot;mm&quot; mode (as pt and px only produced garbage). Page Margins are easily calculated via a multiplication with 25.4, and are precise. As for column widths: I calculate the size of the letter &quot;0&quot; via PHPExcel_Shared_Font::getTextWidthPixelsExact in the default font, and multiply this by the width PHPExcel gives me. This result is then multiplied with 25.4, and divided trough 72 (PDI conversion?). As I stated, this results in &quot;okay-ish&quot; result, e.g. with a table which is around 4mm to wide (24 columns).<br />\n<br />\nAs for page fitting: I take the width of the actual page (e.h. 297mm for a A4 landscape page), and subtract the margin. This value it than divided trough the width sum of all columns (calculated to mm as in above formula). This scale is then applied to all cells. This creates a nice width-fitting. PHPExcel still outputs a page scale tho (e.g. 71), and I'm not sure what to do with it. There are scenarios where it is needed, and some where it is not. From my understanding of a graphic I found on the net this scale should only be used if fitPage is false, but I couldn't confirm this (as it is sometimes needed with fitPage true).<br />\n<br />\nSo bottom line: I hit a dead end, and don't know how to proceed. Also, I'm under a lot of pressure from work. Any suggestions? :/<br />\n<br />\nSo long,<br />\nKernle<br />\n",
    "PostedDate": "2015-01-09T09:17:36.34-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]