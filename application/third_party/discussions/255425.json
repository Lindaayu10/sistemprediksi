[
  {
    "Id": "603544",
    "ThreadId": "255425",
    "Html": "\r\n<p>Hi all a a big thumb up for your work, this tool is A M A Z I N G</p>\r\n<p>but i'm not able to get working the getCalculatedValue method, i can only read simple values from cell.</p>\r\n<p>I always get this error:</p>\r\n<p><strong>Fatal error</strong>: Uncaught exception 'Exception' with message 'Matrix!U2 -&gt; Formula Error: Unexpected ,' in \\Classes\\PHPExcel\\Cell.php:284 Stack trace: #0 \\updatedb.php(86): PHPExcel_Cell-&gt;getCalculatedValue() #1 {main} thrown in\r\n<strong>C:\\Inetpub\\wwwroot\\RO\\Classes\\PHPExcel\\Cell.php</strong> on line <strong>\r\n284</strong></p>\r\n<p>I'm using version 1.7.6 production</p>\r\n<p>i thought that the problem could be for the vlookup function i used in the cell, but even with simple formulas the error is the same</p>\r\n<p>am i missing something? in documentation i can't find anything useful (obviously I am the problem :))</p>\r\n<p>Thank you so much</p>\r\n<p>bye</p>\r\n",
    "PostedDate": "2011-04-27T06:16:37.073-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "604724",
    "ThreadId": "255425",
    "Html": "<p>Without knowing any details, this is almost impossible to answer. While the calculation engine isn't perfect, it can handle most formulae.</p>\n<p>When debugging formulae, there's a simple function that I use to display the parser stack, and a detailed log of every step within the evaluation.</p>\n<div style=\"background-color: white; color: black;\">\n<pre>$sheet = $objPHPExcel-&gt;getActiveSheet();\r\nPHPExcel_Calculation::getInstance()-&gt;writeDebugLog = true;\r\n\r\n<span style=\"color: blue;\">function</span> testFormula($sheet,$cell) {\r\n   $formulaValue = $sheet-&gt;getCell($cell)-&gt;getValue();\r\n   <span style=\"color: blue;\">echo</span> <span style=\"color: #a31515;\">'&lt;b&gt;'</span>.$cell.<span style=\"color: #a31515;\">' Value is &lt;/b&gt;'</span>.$formulaValue.<span style=\"color: #a31515;\">\"&lt;br /&gt;\\n\"</span>;\r\n   $expectedValue = $sheet-&gt;getCell($cell)-&gt;getOldCalculatedValue();\r\n   <span style=\"color: blue;\">echo</span> <span style=\"color: #a31515;\">'&lt;b&gt;'</span>.$cell.<span style=\"color: #a31515;\">' Expected Value is &lt;/b&gt;'</span>.$expectedValue.<span style=\"color: #a31515;\">\"&lt;br /&gt;\\n\"</span>;\r\n\r\n   $calculate = false;\r\n   <span style=\"color: blue;\">try</span> {\r\n      $tokens = PHPExcel_Calculation::getInstance()-&gt;parseFormula($formulaValue,$sheet-&gt;getCell($cell));\r\n      <span style=\"color: blue;\">echo</span> <span style=\"color: #a31515;\">'&lt;b&gt;Parser Stack :-&lt;/b&gt;&lt;pre&gt;'</span>;\r\n      print_r($tokens);\r\n      <span style=\"color: blue;\">echo</span> <span style=\"color: #a31515;\">'&lt;/pre&gt;'</span>;\r\n      $calculate = true;\r\n   } <span style=\"color: blue;\">catch</span> (Exception $e) {\r\n      <span style=\"color: blue;\">echo</span> <span style=\"color: #a31515;\">\"PARSER ERROR: \"</span>.$e-&gt;getMessage().<span style=\"color: #a31515;\">\"&lt;br /&gt;\\n\"</span>;\r\n      <span style=\"color: blue;\">echo</span> <span style=\"color: #a31515;\">'&lt;b&gt;Parser Stack :-&lt;/b&gt;&lt;pre&gt;'</span>;\r\n      print_r($tokens);\r\n      <span style=\"color: blue;\">echo</span> <span style=\"color: #a31515;\">'&lt;/pre&gt;'</span>;\r\n   }\r\n   <span style=\"color: blue;\">if</span> ($calculate) {\r\n      <span style=\"color: blue;\">try</span> {\r\n         $cellValue = $sheet-&gt;getCell($cell)-&gt;getCalculatedValue();\r\n         <span style=\"color: blue;\">echo</span> <span style=\"color: #a31515;\">'&lt;b&gt;'</span>.$cell.<span style=\"color: #a31515;\">' Calculated Value is &lt;/b&gt;'</span>.$cellValue.<span style=\"color: #a31515;\">\"&lt;br /&gt;\\n\"</span>;\r\n         <span style=\"color: blue;\">echo</span> <span style=\"color: #a31515;\">'&lt;h3&gt;Evaluation Log:&lt;/h3&gt;&lt;pre&gt;'</span>;\r\n         print_r(PHPExcel_Calculation::getInstance()-&gt;debugLog);\r\n         <span style=\"color: blue;\">echo</span> <span style=\"color: #a31515;\">'&lt;/pre&gt;'</span>;\r\n      } <span style=\"color: blue;\">catch</span> (Exception $e) {\r\n         <span style=\"color: blue;\">echo</span> <span style=\"color: #a31515;\">\"CALCULATION ENGINE ERROR: \"</span>.$e-&gt;getMessage().<span style=\"color: #a31515;\">\"&lt;br /&gt;\\n\"</span>;\r\n         <span style=\"color: blue;\">echo</span> <span style=\"color: #a31515;\">'&lt;h3&gt;Evaluation Log:&lt;/h3&gt;&lt;pre&gt;'</span>;\r\n         print_r(PHPExcel_Calculation::getInstance()-&gt;debugLog);\r\n         <span style=\"color: blue;\">echo</span> <span style=\"color: #a31515;\">'&lt;/pre&gt;'</span>;\r\n      }\r\n   }\r\n}\r\n\r\ntestFormula($sheet,<span style=\"color: #a31515;\">'A5'</span>);\r\n</pre>\n</div>\n<p>to test the formula in cell A5 of $sheet.</p>\n<p>&nbsp;The diagnostics returned from this might help identify what your problem is.</p>",
    "PostedDate": "2011-04-29T03:38:26.037-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "870918",
    "ThreadId": "255425",
    "Html": "\r\n<div style=\"color:black; background-color:white\">or you can try this one too ;)<br>\r\n<br>\r\n<pre><span style=\"color:blue\"><span style=\"white-space:pre\">\t</span>function</span> getCellValue($sheet, $cell)\n\t\t{\n\t\t$getCellType = $sheet-&gt;getCellByColumnAndRow($cell[0], $cell[1])-&gt;getDataType();\n\n\t\t<span style=\"color:blue\">if</span>($getCellType == PHPExcel_Cell_DataType::TYPE_FORMULA)\n\t\t\t{\n\t\t\t<span style=\"color:blue\">try</span>\n\t\t\t\t{\n\t\t\t\t$value = $sheet-&gt;getCellByColumnAndRow($cell[0], $cell[1])-&gt;getOldCalculatedValue();\n\t\t\t\t}\n\t\t\t<span style=\"color:blue\">catch</span>(Exception $e)\n\t\t\t\t{\n\t\t\t\t$value = <span style=\"color:#a31515\">''</span>;\n\t\t\t\t}\n\t\t\t}\n\t\t<span style=\"color:blue\">else</span>\n\t\t\t{\n\t\t\t$value = $sheet-&gt;getCellByColumnAndRow($cell[0], $cell[1])-&gt;getValue();\n\t\t\t}\n\t\t\t\n\t\t$value = trim($value); <span style=\"color:green\">// Strip whitespace (or other characters) from the beginning and end of a string</span>\n\t\t$value = addslashes($value); <span style=\"color:green\">// Quote string with slashes</span>\n\t\t$value = iconv(<span style=\"color:#a31515\">&quot;UTF-8&quot;</span>, <span style=\"color:#a31515\">&quot;ISO-8859-1&quot;</span>, $value); <span style=\"color:green\">// Performs a character set conversion on the string from UTF-8 to ISO-8859-1</span>\n\t\t$value = preg_replace(<span style=\"color:#a31515\">'/[^(\\x20-\\x7F)]*/'</span>,<span style=\"color:#a31515\">''</span>, $value); <span style=\"color:green\">// Remove non ASCII characters from a string</span>\n\t\t$value = preg_replace(<span style=\"color:#a31515\">'/\\s&#43;/'</span>, <span style=\"color:#a31515\">' '</span>, $value); <span style=\"color:green\">// Replace all sequences of two or more spaces, tabs, and/or line breaks with a single space</span>\n\t\t\n\t\t<span style=\"color:blue\">return</span> $value;\n\t\t}\t\n</pre>\r\n</div>\r\n",
    "PostedDate": "2012-07-17T10:10:50.94-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]