[
  {
    "Id": "132137",
    "ThreadId": "39813",
    "Html": "<em><strong>Symptom:</strong></em><br>\r\nPHPExcel uses large amounts of memory and large spreadsheets are slow to process.<br>\r\n<br>\r\n<em><strong>Reason:</strong></em><br>\r\nInefficient use of shared styles, shared fonts, shared number formats etc.<br>\r\n<br>\r\n<em><strong>Idea for solution not breaking API:</strong></em><br>\r\n<ol>\r\n    <li>Make it possible in PHPExcel to specify which cells are currently selected in the sheet.</li>\r\n    <li>Introduce something like <code>PHPExcel_StyleTool</code> (think of this as the style toolbar in Excel)</li>\r\n    <li>Modify various methods including <code>getStyle()</code></li>\r\n    <li>Use shared styles throughout PHPExcel</li>\r\n</ol>\r\n<br>\r\n1)<br>\r\n<code>$objWorksheet-&gt;setCellSelection('A1:C3');</code><br>\r\n<br>\r\nNote, we already have method to set the single active cell <code>setSelectedCell('A1')</code>, but the above is not the same.<br>\r\n<br>\r\n2)<br>\r\n<code>\r\nclass PHPExcel_StyleTool {<br>\r\n&nbsp;&nbsp;&nbsp; // basically same methods as PHPExcel_style, this is the key point<br>\r\n<br>\r\n&nbsp;&nbsp; &nbsp;function getFont() {<br>\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return PHPExcel_StyleTool_Font;<br>\r\n&nbsp;&nbsp; &nbsp;}<br>\r\n<br>\r\n&nbsp;&nbsp; &nbsp;function getFill() {<br>\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return PHPExcel_StyleTool_Fill;<br>\r\n&nbsp;&nbsp; &nbsp;}<br>\r\n&nbsp;&nbsp;&nbsp; ...<br>\r\n}<br>\r\n</code><br>\r\ntogether with similar classes<br>\r\n<br>\r\n<code>\r\nPHPExcel_StyleTool_Borders<br>\r\nPHPExcel_StyleTool_Font <br>\r\nPHPExcel_StyleTool_Fill<br>\r\netc.<br>\r\n</code>\r\n<br>\r\nNow, <code>PHPExcel_StyleTool</code> could work like this:<br>\r\n<br>\r\n<code>PHPExcel_StyleTool-&gt;getFont()</code><br>\r\n<ul>\r\n    <li>returns <code>PHPExcel_StyleTool_Font</code> (think of this as the font section in the style toolbar in Excel)</li>\r\n</ul>\r\n&nbsp;&nbsp; &nbsp;<br>\r\n<code>PHPExcel_StyleTool-&gt;getFont()-&gt;getName()</code><br>\r\n<ul>\r\n    <li>returns what one would see in Excel in the style toolbar, namely the font name of the active cell</li>\r\n</ul>\r\n&nbsp;&nbsp; &nbsp;<br>\r\n<code>PHPExcel_StyleTool-&gt;getFont()-&gt;setName('Times New Roman')</code><br>\r\n<ul>\r\n    <li>set the font name for all cells in the current selection (just like in Excel)</li>\r\n    <li>this will usually spawn the creation of one new <code>PHPExcel_Style</code> object, one new <code>PHPExcel_Font</code> object etc. shared by the selected cells</li>\r\n    <li>at this point, some logic takes place to detect which new objects need to be created / removed, <code>PHPExcel_Style</code>, <code>PHPExcel_Style_Font</code> etc</li>\r\n</ul>\r\n<br>\r\n3)<br>\r\nCritical modification to <code>getStyle()</code> method. Instead of returning <code>PHPExcel_Style</code>, now let it return <code>PHPExcel_StyleTool</code><br>\r\n<br>\r\n<code>\r\nfunction getStyle($cell) {<br>\r\n&nbsp;&nbsp; &nbsp;$this-&gt;setSelectedCell($cell); // set 'A1' as the active cell<br>\r\n<br>\r\n&nbsp;&nbsp; &nbsp;return PHPExcel_StyleTool;<br>\r\n}\r\n</code><br>\r\n<br>\r\n4)<br>\r\nUpdate readers so they result in PHPExcel objects using shared styles so memory consumption is reduced. Writers should also speed up.<br>\r\n<br>\r\nRelated threads:<br>\r\n<a href=\"http://www.codeplex.com/PHPExcel/Thread/View.aspx?ThreadId=25879\">http://www.codeplex.com/PHPExcel/Thread/View.aspx?ThreadId=25879</a><br>\r\n<a href=\"http://www.codeplex.com/PHPExcel/WorkItem/View.aspx?WorkItemId=6370\">http://www.codeplex.com/PHPExcel/WorkItem/View.aspx?WorkItemId=6370</a><br>\r\n<a href=\"http://www.codeplex.com/PHPExcel/WorkItem/View.aspx?WorkItemId=6857\">http://www.codeplex.com/PHPExcel/WorkItem/View.aspx?WorkItemId=6857</a><br>\r\n<br>\r\n<br>\r\n<br>\r\n",
    "PostedDate": "2008-11-12T14:56:55.817-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]