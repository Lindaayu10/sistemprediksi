[
  {
    "Id": "492987",
    "ThreadId": "227081",
    "Html": "<div id=\"ctl00_ctl00_MasterContent_Content_PostRepeater_ctl16_BodyDiv\">\r\n<p>I am attempting to use Named Ranges for Data Validation to work around the 255 char limit in formulas.<br>The generated excel file has UNPOPULATED (empty) drop downs (with no errors reported writing out or opening the xls)<br>I get the same result writing both excel5 and excel2007.<br><br>I am using PHPExcel @version 1.7.4, 2010-08-26 to generate&nbsp; and excel2010Beta to open the files.</p>\r\n<p>I have tried a number of different values for &lt;SheetName&gt;: Sheet, Sheet0, Sheet1.&nbsp; All fail to populate dropdown<br>I have also tried using setCellValueByColumnAndRow(0, 1, 'item1') etc, fails to populated dropdown<br><br>Am I doing something incorrectly?&nbsp; Any advice would be greatly appreciated.</p>\r\n<p>Sample code follows:<br><br>&nbsp;&nbsp;&nbsp; require_once 'lib/phpexcel/PHPExcel.php';<br>&nbsp;&nbsp;&nbsp; $objPHPExcel = new PHPExcel();<br>&nbsp;&nbsp;&nbsp; $objPHPExcel-&gt;setActiveSheetIndex(0);<br><br>&nbsp;&nbsp;&nbsp; $objPHPExcel-&gt;getActiveSheet()-&gt;setCellValue(&quot;A1&quot;, &quot;item1&quot;);<br>&nbsp;&nbsp;&nbsp; $objPHPExcel-&gt;getActiveSheet()-&gt;setCellValue(&quot;A2&quot;, &quot;item2&quot;);<br>&nbsp;&nbsp;&nbsp; $objPHPExcel-&gt;getActiveSheet()-&gt;setCellValue(&quot;A3&quot;, &quot;item3&quot;);<br><br>&nbsp;&nbsp;&nbsp; $objValidation = $objPHPExcel-&gt;getActiveSheet()-&gt;getCell(&quot;B1&quot;)-&gt;getDataValidation();<br>&nbsp;&nbsp;&nbsp; $objValidation-&gt;setType( PHPExcel_Cell_DataValidation::TYPE_LIST );<br>&nbsp;&nbsp;&nbsp; $objValidation-&gt;setErrorStyle( PHPExcel_Cell_DataValidation::STYLE_INFORMATION );<br>&nbsp;&nbsp;&nbsp; $objValidation-&gt;setAllowBlank(false);<br>&nbsp;&nbsp;&nbsp; $objValidation-&gt;setShowInputMessage(true);<br>&nbsp;&nbsp;&nbsp; $objValidation-&gt;setShowErrorMessage(true);<br>&nbsp;&nbsp;&nbsp; $objValidation-&gt;setShowDropDown(true);<br>&nbsp;&nbsp;&nbsp; $objValidation-&gt;setErrorTitle('Input error');<br>&nbsp;&nbsp;&nbsp; $objValidation-&gt;setError('Value is not in list.');<br>&nbsp;&nbsp;&nbsp; $objValidation-&gt;setPromptTitle('Pick from list');<br>&nbsp;&nbsp;&nbsp; $objValidation-&gt;setPrompt('Please pick a value from the drop-down list.');<br>&nbsp;&nbsp;&nbsp; //Using a comma separated list here works, but using a range comes back empty<br>&nbsp;&nbsp;&nbsp; $objValidation-&gt;setFormula1('Sheet!$A$1:$A$3');<br><br>&nbsp;&nbsp;&nbsp; //// Export as Excel5: fails to populate dropdown<br>&nbsp;&nbsp;&nbsp; //header('Content-Type: application/vnd.ms-excel');<br>&nbsp;&nbsp;&nbsp; //header('Content-Disposition: attachment;filename=&quot;dropdown_test.xls&quot;');<br>&nbsp;&nbsp;&nbsp; //header('Cache-Control: max-age=0');<br>&nbsp;&nbsp;&nbsp; //$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');<br>&nbsp;&nbsp;&nbsp; //$objWriter-&gt;save('php://output');<br>&nbsp;&nbsp;&nbsp; //exit;<br><br>&nbsp;&nbsp;&nbsp; // Export as Excel2007: fails to populate dropdown<br>&nbsp;&nbsp;&nbsp; header('Content-Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');<br>&nbsp;&nbsp;&nbsp; header('Content-Disposition: attachment;filename=&quot;dropdown_test.xlsx&quot;');<br>&nbsp;&nbsp;&nbsp; header('Cache-Control: max-age=0');<br>&nbsp;&nbsp;&nbsp; $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');<br>&nbsp;&nbsp;&nbsp; $objWriter-&gt;save('php://output');<br>&nbsp;&nbsp;&nbsp; exit;ï»¿</p>\r\n<p>TIA</p>\r\n<p>Note: this is a repost from thread: http://phpexcel.codeplex.com/Thread/View.aspx?ThreadId=80422</p>\r\n</div>",
    "PostedDate": "2010-09-13T13:27:57.81-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "493448",
    "ThreadId": "227081",
    "Html": "<p>&nbsp;I also tried setting the sheet name explicitly and then using that name in setFormula1, but I am still received a blank dropdown.</p>\r\n<p>Can anyone see why my code is not working?&nbsp; Does anyone have working sample code that uses a range for data validation?</p>\r\n<p>I am running php v5.2.9 via xampp on Windows 7 if that matters.</p>\r\n<p>Please let me know if I should be providing any additional information, or if I should be posting elsewhere.</p>\r\n<p>Any assistance would be greatly appreciated,</p>\r\n<p>Tim</p>",
    "PostedDate": "2010-09-14T11:32:56.84-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "494689",
    "ThreadId": "227081",
    "Html": "<p>Your example code works correctly if the correct worksheet title is used in the formula. The default title for the worksheet created when you instantiate a new PHPExcel object is 'Worksheet' and using a formula of&nbsp;&nbsp;$objValidation-&gt;setFormula1('Worksheet!$A$1:$A$3'); does produce the correct dropdown. Likewise, explicitly naming the worksheet using $objPHPExcel-&gt;getActiveSheet()-&gt;setTitle('Test Worksheet #1'); and then setting the formula as $objValidation-&gt;setFormula1('\\'Test Worksheet #1\\'!$A$1:$A$3'); also works correctly. Note that worksheet names are case-sensitive.</p>",
    "PostedDate": "2010-09-16T15:30:40.107-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "494698",
    "ThreadId": "227081",
    "Html": "<p>Thank you for the feedback.&nbsp; I have tested and confirmed&nbsp; you are correct: my problem was the incorrect sheet name.</p>\r\n<p>The source of my misunderstanding stemmed from the &quot;PHPExcel developer documentation.doc&quot;, which refers to the name &quot;Sheet!&quot; rather than &quot;Worksheet!&quot;, leading me to erroneously conclude the default name is 'Sheet'&nbsp; (although I'm sure if I had read the entire manual I'd have spotted the cause of my problem).&nbsp;&nbsp; From the doc Section 4.6.27 (pg 27):</p>\r\n<ul>\r\n<li>&quot;<span style=\"font-size:14pt;color:black\"><span style=\"font:7pt 'Times New Roman'\"> </span></span>Therefore it is normally a better idea to type the item values directly in some cell range, say A1:A3, and instead use, say, $objValidation-&gt;setFormula1('Sheet!$A$1:$A$3');&quot;</li>\r\n</ul>\r\n<p>Thanks again for you time and focus,</p>\r\n<p>Tim</p>\r\n<div></div>\r\n<p>&nbsp;</p>",
    "PostedDate": "2010-09-16T15:52:07.93-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]