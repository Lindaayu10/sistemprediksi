[
  {
    "Id": "1441956",
    "ThreadId": "644227",
    "Html": "Hello,\r<br />\n<br />\nI'm having a small issue while converting an XLS file containing special characters to CSV file using PHPExcel classes.\r<br />\n<br />\nAs exemple the name &quot;Kévin&quot; gives &quot;KÃ©vin&quot; in the CSV generated file.\r<br />\n<br />\nHere is my current PHP code using PHPExcel : <br />\n<pre><code>$excel_readers = array(\n        'Excel5' , \n        'Excel2003XML' , \n        'Excel2007'\n        );\n\n        require_once('classes/PHPExcel.php');\n\n        $reader = PHPExcel_IOFactory::createReader('Excel5');\n        $reader-&gt;setReadDataOnly(true);\n\n        $path = $_FILES['file']['tmp_name'];\n        $excel = $reader-&gt;load($path);\n\n        $writer = PHPExcel_IOFactory::createWriter($excel, 'CSV');\n        $writer-&gt;save('temp/absences.csv');\n\n        echo 'File saved to csv format';</code></pre>\n\nAny help would me much appreciate.<br />\n",
    "PostedDate": "2015-08-26T02:11:23.183-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1441968",
    "ThreadId": "644227",
    "Html": "The spreadsheet content will be saved in the CSV file encoded as UTF-8\r<br />\n<br />\nOptionally, you can tell the CSV Writer to write a BOM as well<br />\n<pre><code>$writer-&gt;setUseBOM(true);</code></pre>\n\nBut it's up to the applications reading that file to treat it correctly as UTF-8 data. Applications like MS Excel itself should handle it properly, but text editors like notepad won't recognise the UTF-8 data.<br />\n",
    "PostedDate": "2015-08-26T04:19:16.64-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1442261",
    "ThreadId": "644227",
    "Html": "[sorry - wrong post]<br />\n",
    "PostedDate": "2015-08-28T02:45:36.587-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]