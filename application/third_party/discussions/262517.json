[
  {
    "Id": "631914",
    "ThreadId": "262517",
    "Html": "<p>Hi,&nbsp;</p>\n<p>We're currently migrating our project to more powerful hardware&nbsp;and also decided to use this opportunity to switch to PHP 5.3 from 5.2 we were using before.</p>\n<p>However, in the process of testing we found out, that our script generating XLS documents are now executing several times slower, despite added hardware power. In the new setup we have two identical application servers, so we decided to downgrade one of them back to PHP 5.2 and compare script performance to check if it has anything to do with PHP version. Here is what we've found out.</p>\n<pre>Test program we used:</pre>\n<p>&nbsp;</p>\n<pre><div style=\"color: black; background-color: white;\"><pre>&lt;?\n    $objReader = PHPExcel_IOFactory::createReader(<span style=\"color: #a31515;\">'Excel5'</span>);\n    $config = PaConfig::getInstance();\n    $objPHPExcel = $objReader-&gt;load($config -&gt; PATH_ROOT.<span style=\"color: #a31515;\">\"templates/xls/Affiliates_overview_template_level3.xls\"</span>);\n    $objPHPExcel-&gt;getProperties()-&gt;setCreator(<span style=\"color: #a31515;\">\"Maarten Balliauw\"</span>)\n        -&gt;setLastModifiedBy(<span style=\"color: #a31515;\">\"Maarten Balliauw\"</span>)\n        -&gt;setTitle(<span style=\"color: #a31515;\">\"Office 2007 XLSX  Document\"</span>)\n        -&gt;setSubject(<span style=\"color: #a31515;\">\"Office 2007 XLSX  Document\"</span>)\n        -&gt;setDescription(<span style=\"color: #a31515;\">\" Document for Office 2007 XLSX, generated using PHP classes.\"</span>)\n        -&gt;setKeywords(<span style=\"color: #a31515;\">\"office 2007 openxml php\"</span>)\n        -&gt;setCategory(<span style=\"color: #a31515;\">\"php result file\"</span>);\n        $i=0;\n        $copy_sheet = $objPHPExcel-&gt;setActiveSheetIndex(1)-&gt;copy();\n        <span style=\"color: blue;\">for</span>($i=0; $i&lt;=200; $i++){\n$start = PaDebug::getMicrotime();            \nprint_r(<span style=\"color: #a31515;\">\"$i Start $start \\n\"</span>);             \n\n$clone_start = PaDebug::getMicrotime();            \n                $<span style=\"color: blue;\">new</span> = <span style=\"color: blue;\">clone</span> $copy_sheet;\n$clone_stop = PaDebug::getMicrotime();            \nprint_r(<span style=\"color: #a31515;\">\"Clone time \"</span>.($clone_stop - $clone_start).<span style=\"color: #a31515;\">\"\\n\"</span>);             \n                \n$sheet_add_start = PaDebug::getMicrotime();            \n                $objPHPExcel-&gt;addSheet($<span style=\"color: blue;\">new</span>, $i);\n$sheet_add_stop = PaDebug::getMicrotime();            \nprint_r(<span style=\"color: #a31515;\">\"Add Sheet time \"</span>.($sheet_add_stop - $sheet_add_start).<span style=\"color: #a31515;\">\"\\n\"</span>);             \n                \n$title_start = PaDebug::getMicrotime();            \n                $objPHPExcel-&gt;setActiveSheetIndex($i)-&gt;setTitle(<span style=\"color: #a31515;\">'aa'</span>.$i);\n$title_stop = PaDebug::getMicrotime();            \nprint_r(<span style=\"color: #a31515;\">\"Title time \"</span>.($title_stop - $title_start).<span style=\"color: #a31515;\">\"\\n\"</span>);             \n                \n$sheet_start = PaDebug::getMicrotime();            \n                <span style=\"color: blue;\">for</span> ($l = <span style=\"color: #a31515;\">'a'</span>; $l&lt;<span style=\"color: #a31515;\">'z'</span>; $l++ ){\n                    <span style=\"color: blue;\">for</span>($j=1;$j&lt;1000;$j++){\n                        $objPHPExcel-&gt;setActiveSheetIndex($i)-&gt;setCellValue(<span style=\"color: #a31515;\">\"$l$j\"</span>,<span style=\"color: #a31515;\">\"$l$j\"</span>);\n                    }\n                }\n$sheet_stop = PaDebug::getMicrotime();            \nprint_r(<span style=\"color: #a31515;\">\"Sheet time \"</span>.($sheet_stop - $sheet_start).<span style=\"color: #a31515;\">\"\\n\"</span>);             \n                \n$stop = PaDebug::getMicrotime();            \n<span style=\"color: blue;\">echo</span> <span style=\"color: #a31515;\">\"Memory \"</span>.memory_get_usage() . <span style=\"color: #a31515;\">\"\\n\\n\"</span> ;       \nprint_r(<span style=\"color: #a31515;\">\"Total =&gt;\"</span>.($stop - $start).<span style=\"color: #a31515;\">\" \\n\\n\"</span>);            \n        }\n        $objPHPExcel-&gt;removeSheetByIndex($i + 1);\n    <span style=\"color: blue;\">echo</span> memory_get_usage() . <span style=\"color: #a31515;\">\"\\n\\n\"</span> ; \n\n?&gt;\n</pre>\n</div>\n</pre>\n<pre><br /></pre>\n<p>&nbsp;</p>\n<p>Here are results for 1st, 15th and 50th iteration.</p>\n<p>PHP 5.3</p>\n<pre>0 Start 1308839210.6213\nClone time 0.002007007598877\nAdd Sheet time 2.0980834960938E-5\nTitle time 0.0013830661773682\nSheet time 1.5038568973541\nMemory 54125384\nTotal =&gt;1.5073959827423</pre>\n<p>...</p>\n<pre>15 Start 1308839282.4225\nClone time 0.0011379718780518\nAdd Sheet time 2.0980834960938E-5\nTitle time 9.4289009571075\nSheet time 1.9287619590759\nMemory 688489944\n\nTotal =&gt;11.358916044235\n</pre>\n<p>...</p>\n<pre>50 Start 1308840881.9705\nClone time 0.0011529922485352\nAdd Sheet time 4.0054321289062E-5\nTitle time 93.7625041008\nSheet time 2.9350831508636\nMemory 2195938312\n\nTotal =&gt;96.698873996735\n</pre>\n<p>&nbsp;</p>\n<p>PHP 5.2</p>\n<pre>0 Start 1308842497.0769\nClone time 0.0019261837005615\nAdd Sheet time 2.2172927856445E-5\nTitle time 0.0014350414276123\nSheet time 1.698254108429\nMemory 52373176\n\nTotal =&gt;1.701817035675\n</pre>\n<p>...</p>\n<pre>15 Start 1308842530.3258\nClone time 0.0011360645294189\nAdd Sheet time 1.5020370483398E-5\nTitle time 1.310131072998\nSheet time 1.5795361995697\nMemory 663614720\n\nTotal =&gt;2.8910360336304\n</pre>\n<p>...</p>\n<pre>50 Start 1308842683.5281\nClone time 0.0011169910430908\nAdd Sheet time 2.3841857910156E-5\nTitle time 4.3564808368683\nSheet time 1.5907838344574\nMemory 2110293104\n\nTotal =&gt;5.9486320018768\n</pre>\n<p>&nbsp;</p>\n<p>As you can see, memory usage and sheet manipulation times are close, but first operation on a newly created sheet under 5.3 slows down drasticaly the more sheets document contains.&nbsp;</p>\n<p>Could you please look into it and advice on what we could do to fix or avoid this problem. Perhaps there is other approach to copying sheets within document or some optimization tips we could use.</p>\n<p>Thanks in advance</p>",
    "PostedDate": "2011-06-23T08:43:36.84-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]