[
  {
    "Id": "1254681",
    "ThreadId": "548136",
    "Html": "Hi,\r<br />\n<br />\ni want to create around 130 xls files (xlsx is no option), mostly with one or two sheets but some have 6 or more sheets\r<br />\ni wrote a PHPExcel script and its working just fine - the only problem i have that the script takes 300 mb (for files with one sheet) till 2 gb (for files with 10+ sheets) of memory through the Apache webserver\r<br />\nthat alone wouldn't be a problem because the machine has 8GB of memory, but after one file is created the PHPExcel-script or the Apache don't erase the data from the memory - its just stays there\r<br />\nso after 5-15 created files the memory is full and the script breaks up\r<br />\n<br />\nhow can i prevent this?\r<br />\n<br />\ni tried unset of the variables in the PHPExcel script - no success\r<br />\ni tried PHPExcel_CachedObjectStorageFactory::cache_to_discISAM - no success\r<br />\n<br />\ndoes somebody has other ideas?\r<br />\n<br />\ni'm running a CentOS 6.5 with PHP 5.3.3 and Apache 2.2.15<br />\n",
    "PostedDate": "2014-06-10T01:22:05.363-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1254687",
    "ThreadId": "548136",
    "Html": "As described in section 4.3 of the developer documentation (entitled <code>Clearing a Workbook from memory</code>), you can't simply <code>unset()</code> a workbook, <br />\n<blockquote>\nThe PHPExcel object contains cyclic references (e.g. the workbook is linked to the worksheets, and the worksheets are linked to their parent workbook) which cause problems when PHP tries to clear the objects from memory when they are unset(), or at the end of a function when they are in local scope. The result of this is “memory leaks”, which can easily use a large amount of PHP’s limited memory.<br />\nThis can only be resolved manually: if you need to unset a workbook, then you also need to “break” these cyclic references before doing so. PHPExcel provides the disconnectWorksheets() method for this purpose.<br />\n</blockquote>\nSo you have to call <br />\n<div style=\"color:Black;background-color:White;\"><pre>\r\n$objPHPExcel-&gt;disconnectWorksheets();\n<span style=\"color:Blue;\">unset</span>($objPHPExcel);\r\n</pre></div>But you shouldn't really be running scripts that call for large amounts of memory and take a long time to execute through a web request; I'd strongly recommend doing this as a CLI task<br />\n",
    "PostedDate": "2014-06-10T01:37:10.68-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1254765",
    "ThreadId": "548136",
    "Html": "thanks for your quick reply\r<br />\ni will use the terminal from now on\r<br />\n<br />\nand many thanks for your great work!<br />\n",
    "PostedDate": "2014-06-10T05:20:50.743-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1257910",
    "ThreadId": "548136",
    "Html": "Where in the code do you place the steps to manually unset a workbook when you want to send the output to the user's browser?\r<br />\n<br />\nI have tried after the $objWriter-&gt;save('php://output'); statement, but the apache process still has the memory after the spreadsheet is saved.<br />\n",
    "PostedDate": "2014-06-19T07:39:04.593-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]