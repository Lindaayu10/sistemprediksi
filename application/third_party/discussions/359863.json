[
  {
    "Id": "849919",
    "ThreadId": "359863",
    "Html": "\r\n<p>Hi everyone,</p>\r\n<p>How would I turn this array into a styled PHPExcel sheet so I can view it on that page (under the &lt;HR&gt;)</p>\r\n<p><a href=\"https://www.thewebrary.com/presentations.php?file=493\">https://www.thewebrary.com/presentations.php?file=493</a></p>\r\n<p>The excel file is full of color, borders, etc to see what PHPExcel can pick up on and display. Shouldnt PHPExcel automatically pick up the styles? Why does it even bother to return it as a array? I really could use some insight because I'm lost.&nbsp;</p>\r\n<p>Thanks for your time,</p>\r\n<p>Marc</p>\r\n",
    "PostedDate": "2012-06-16T18:36:00.107-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "849978",
    "ThreadId": "359863",
    "Html": "\r\n<p>PHPExcel does pick up the styles automatically. But PHPexcel is not a solution to everything you or anybody else might want to do with Excel files... it's a toolkit that provides a comprehensive set of tools allowing you to build your own solution. It'd\r\n purpose is to abstract the complexity of the various spreadsheet file formats.</p>\r\n<p>The file you're running is simply displaying the raw data as an array. Why does it return it as an array, because many people want to be able to access the data from Excel, not simply to display it on screen, but perhaps to load it into a database, or change\r\n some of the cell values, or to save it in a different format.</p>\r\n<p>Load your excel file and then use the HTML Writer to generate a pretty html page of data from that workbook with all its formatting.</p>\r\n",
    "PostedDate": "2012-06-17T02:44:49.07-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "850609",
    "ThreadId": "359863",
    "Html": "\r\n<p>Do you know of a PHP solution? Otherwise with PHPExcel could I convert the new xlsx 2007&#43; to old 2005 or whatever year so phpexcel 1.7.7 can read it?</p>\r\n",
    "PostedDate": "2012-06-18T16:35:17.667-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "850708",
    "ThreadId": "359863",
    "Html": "<p>The solution is what I said: to use the appropriate Reader for your Excel file (Excel2007 or Excel5), then use the HTML Writer to render that as HTML.</p>\r\n<p>Once you've included the PHPExcel library, it's basically just three lines of code:</p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre>$objPHPExcel = PHPExcel_IOFactory::load(<span style=\"color: #a31515;\">\"myTestFile.xlsx\"</span>);\r\n$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, <span style=\"color: #a31515;\">'HTML'</span>);\r\n$objWriter-&gt;save(<span style=\"color: #a31515;\">'php://output'</span>);\r\n</pre>\r\n</div>",
    "PostedDate": "2012-06-18T23:44:28.023-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "851099",
    "ThreadId": "359863",
    "Html": "<p>Wow worked like a charm!! Thanks for the help!</p>\r\n<p>Also can PHPPowerpoint and/or PHPWord display files like this? Or only write them..</p>",
    "PostedDate": "2012-06-19T12:38:51.813-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "851390",
    "ThreadId": "359863",
    "Html": "<p>At the moment PHPPowerPoint and PHPWord can only write files, and only a limited set of formats (.pptx, .odp and .docx). The intention with pulling everything under the same ownership in github is to extend reader and writer capabilities of PHPPowerPoint and PHPWord, and so that components common to the 3 office applications can be more easily shared and integrated.</p>",
    "PostedDate": "2012-06-20T00:59:35.853-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]