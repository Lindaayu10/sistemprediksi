[
  {
    "Id": "278054",
    "ThreadId": "81064",
    "Html": "<p>Have read every thread (I think) on this, am brand new to PhpExcel, and my mind is reeling.&nbsp; I have a spreadsheet with exhaustive formulas, and would like to like to know the cleanest way of loading the spreadsheet, changing a couple of values, and get the calculated result.&nbsp; It seems I can do this with the Excel2007 Reader, but want to know if I'm assuming correctly before i embark on the learning curve of using this beautiful code that you've provided.</p>\r\n<p>Apologies if this is an eyeroller - I HAVE been reading up on it, but am feeling,well, a bit overwhelmed with the endless possibilities.</p>\r\n<p>Thanks in advance,</p>",
    "PostedDate": "2010-01-16T19:01:47.47-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "278056",
    "ThreadId": "81064",
    "Html": "<p>This may get you started</p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre><span style=\"color:Blue\">require_once</span> <span style=\"color:#A31515\">'Classes/PHPExcel.php'</span>;\r\n<span style=\"color:Blue\">require_once</span> <span style=\"color:#A31515\">'Classes/PHPExcel/IOFactory.php'</span>;\r\n\r\n<span style=\"color:Green\">// read some workbook</span>\r\n$excel = PHPExcel_IOFactory::load(<span style=\"color:#A31515\">'read.xlsx'</span>);\r\n\r\n$worksheet = $excel-&gt;getActiveSheet();\r\n\r\n<span style=\"color:Green\">// do stuff, e.g.</span>\r\n$worksheet-&gt;getCell(<span style=\"color:#A31515\">'A1'</span>)-&gt;setValue(100);\r\n\r\n<span style=\"color:Green\">// retrieve some calculated value and dump it, e.g.</span>\r\nvar_dump($worksheet-&gt;getCell(<span style=\"color:#A31515\">'B1'</span>)-&gt;getCalculatedValue());\r\n\r\n<span style=\"color:Green\">// save the workbook</span>\r\n$writer = PHPExcel_IOFactory::createWriter($excel, <span style=\"color:#A31515\">'Excel2007'</span>);\r\n$writer-&gt;save(<span style=\"color:#A31515\">'write.xlsx'</span>);\r\n</pre>\r\n</div>\r\n<p>&nbsp;</p>",
    "PostedDate": "2010-01-16T19:31:10.897-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "278058",
    "ThreadId": "81064",
    "Html": "<p>Wow, and thanks for that quick reply!.&nbsp;</p>\r\n<p>Mind is reeling now with possibilities!&nbsp; Pondering ways of efficiently and completely replacing all our pricing code by loading a single spreadsheet!&nbsp;</p>\r\n<p>Thanks again! :)</p>",
    "PostedDate": "2010-01-16T19:48:40.907-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "278287",
    "ThreadId": "81064",
    "Html": "<p>I'm working on doing this very thing for an online quoting application right now.&nbsp; I don't want to scare you off as this solution has a lot of potential and no other competitive options (short of .net and office on a windows server), but I have to warn you that it might not be as easy as it seems.&nbsp; Depending on how the pricing spreadsheet is organized it might work great, or you might have to make some revisions.&nbsp;</p>\r\n<p>The pricing sheets that I received from the client had a lot of Hlookup and Vlookups that were defined pretty inefficiently (referencing a whole block of cells rather than just the necessary lookup and result fields) which caused a massive explosion of calculations object creation.&nbsp; Many of the PHPExcel calculation functions are not yet optimized and will calculate cells that don't necessarily need to be calculated (e.g. calculating all hlookup/vlookup referenced cells, calculating both the true and false answers before checking whether the conditional is true or false, etc).</p>\r\n<p>You will want to use the following line to disabled any calculation caching or many calculated values requests will come back wrong.</p>\r\n<p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre>PHPExcel_Calculation::getInstance()-&gt;setCalculationCacheEnabled(false);\r\n</pre>\r\n</div>\r\n</p>\r\n<p>The following two functions are useful for debugging:</p>\r\n<p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre><span style=\"color:Green\">/**\r\n     * Create an HTML table representation of a PHP Excel worksheet\r\n     * @param PHPExcel_Worksheet $objWorksheet\r\n     * @return string An HTML table representation of the worksheet\r\n     */</span>\r\n    <span style=\"color:Blue\">public</span> <span style=\"color:Blue\">static</span> <span style=\"color:Blue\">function</span> dumpPHPExcelSheetToHTML(PHPExcel_Worksheet $objWorksheet) {\r\n        $output.=<span style=\"color:#A31515\">'&lt;table border=&quot;1&quot;&gt;'</span> . <span style=\"color:#A31515\">&quot;\\n&quot;</span>;\r\n        <span style=\"color:Blue\">foreach</span> ($objWorksheet-&gt;getRowIterator() <span style=\"color:Blue\">as</span> $row) {\r\n            $output.= <span style=\"color:#A31515\">'&lt;tr&gt;'</span> . <span style=\"color:#A31515\">&quot;\\n&quot;</span>;\r\n\r\n            $cellIterator = $row-&gt;getCellIterator();\r\n            $cellIterator-&gt;setIterateOnlyExistingCells(false); <span style=\"color:Green\">// This loops all cells,</span>\r\n            <span style=\"color:Green\">// even if it is not set.</span>\r\n            <span style=\"color:Green\">// By default, only cells</span>\r\n            <span style=\"color:Green\">// that are set will be</span>\r\n            <span style=\"color:Green\">// iterated.</span>\r\n            <span style=\"color:Blue\">foreach</span> ($cellIterator <span style=\"color:Blue\">as</span> $cell) {\r\n                $output.= <span style=\"color:#A31515\">'&lt;td&gt;'</span> . $cell-&gt;getValue() . <span style=\"color:#A31515\">'&lt;/td&gt;'</span> . <span style=\"color:#A31515\">&quot;\\n&quot;</span>;\r\n            }\r\n\r\n            $output.= <span style=\"color:#A31515\">'&lt;/tr&gt;'</span> . <span style=\"color:#A31515\">&quot;\\n&quot;</span>;\r\n        }\r\n        $output.= <span style=\"color:#A31515\">'&lt;/table&gt;'</span> . <span style=\"color:#A31515\">&quot;\\n&quot;</span>;\r\n        <span style=\"color:Blue\">return</span> $output;\r\n    }\r\n\r\n    <span style=\"color:Green\">/*\r\n     * Dumps the cell value, calculated value and processing\r\n     * stack for a PHPExcel cell.\r\n     *\r\n     * @param PHPExcel_Worksheet $sheet\r\n     * @param string $cell   e.g. 'A1', 'C3', etc.\r\n    */</span>\r\n    <span style=\"color:Blue\">public</span> <span style=\"color:Blue\">static</span> <span style=\"color:Blue\">function</span> debugPHPExcelCell(PHPExcel_Worksheet $sheet, $cell) {\r\n        <span style=\"color:Green\">//$sheet = $objPHPExcel-&gt;getActiveSheet();</span>\r\n        PHPExcel_Calculation::getInstance()-&gt;writeDebugLog = true;\r\n\r\n        $cellValue = $sheet-&gt;getCell($cell)-&gt;getValue();\r\n        <span style=\"color:Blue\">echo</span> <span style=\"color:#A31515\">'&lt;b&gt;'</span>.$cell.<span style=\"color:#A31515\">' Value is &lt;/b&gt;'</span>.$cellValue.<span style=\"color:#A31515\">&quot;&lt;br /&gt;\\n&quot;</span>;\r\n\r\n        <span style=\"color:Blue\">echo</span> <span style=\"color:#A31515\">'&lt;b&gt;Parser Stack :-&lt;/b&gt;&lt;pre&gt;'</span>;\r\n        $tokens = PHPExcel_Calculation::getInstance()-&gt;parseFormula($cellValue);\r\n        print_r($tokens);\r\n        <span style=\"color:Blue\">echo</span> <span style=\"color:#A31515\">'&lt;/pre&gt;'</span>;\r\n\r\n        $cellValue = $sheet-&gt;getCell($cell)-&gt;getCalculatedValue();\r\n        <span style=\"color:Blue\">echo</span> <span style=\"color:#A31515\">'&lt;b&gt;'</span>.$cell.<span style=\"color:#A31515\">' Calculated Value is &lt;/b&gt;'</span>.$cellValue.<span style=\"color:#A31515\">&quot;&lt;br /&gt;\\n&quot;</span>;\r\n\r\n        <span style=\"color:Blue\">echo</span> <span style=\"color:#A31515\">'&lt;h3&gt;Evaluation Log:&lt;/h3&gt;&lt;pre&gt;'</span>;\r\n        print_r(PHPExcel_Calculation::getInstance()-&gt;debugLog);\r\n        <span style=\"color:Blue\">echo</span> <span style=\"color:#A31515\">'&lt;/pre&gt;'</span>;\r\n    }\r\n</pre>\r\n</div>\r\n</p>",
    "PostedDate": "2010-01-17T16:54:25.137-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]