[
  {
    "Id": "1490907",
    "ThreadId": "660604",
    "Html": "I am trying to use PHPExcel to export reports. I have it setup so that it will pull from my MSSQL DB just fine, but it doesn't add any of the data, just garbage. <br />\n<br />\nI've commented out the parts where it should be adding the data and it is still just posting garbage into the file.<br />\n<br />\nI am doing this using PHP, so I don't know what's going on. I am not even able to open the file as is I have to change the extension from .xlsx to .xls. then I can open it. When I go to the file's info page, none of the set values from the PHP file are set in the Excel file. I have this:<br />\n<div style=\"color:Black;background-color:White;\"><pre>\r\n$objPHPExcel-&gt;getProperties()-&gt;setCreator(<span style=\"color:#A31515;\">&quot;Mike in IT&quot;</span>)\n                             -&gt;setLastModifiedBy(<span style=\"color:#A31515;\">&quot;Mike in IT&quot;</span>)\n                             -&gt;setTitle($TableName)\n                             -&gt;setSubject($TableName)\n                             -&gt;setDescription(<span style=\"color:#A31515;\">&quot;Report for &quot;</span> .$TableName. <span style=\"color:#A31515;\">&quot; using PHPExcel, generated using PHP classes.&quot;</span>)\n                             -&gt;setKeywords(<span style=\"color:#A31515;\">&quot;office PHPExcel php &quot;</span> . $TableName)\n                             -&gt;setCategory(<span style=\"color:#A31515;\">&quot;Report Export File&quot;</span>);\n\r\n</pre></div>Which should set the info properties, but isn't.<br />\n<br />\nHere's the whole file that I'm using for creating the Excel sheet, this is a modification of the 01simple-download-xlsx.php<br />\n<div style=\"color:Black;background-color:White;\"><pre>\r\n&lt;?php\n<span style=\"color:Blue;\">include</span> <span style=\"color:#A31515;\">&#39;Helper/PageName.php&#39;</span>;              <span style=\"color:Green;\">//Pulls the Page name and Table name and returns the $SQLTableName, $TableName, $Title and $HeadingDesc</span>\n<span style=\"color:Blue;\">include</span> <span style=\"color:#A31515;\">&#39;DBConn.php&#39;</span>;                       <span style=\"color:Green;\">//DB connection info</span>\n\n$headings = <span style=\"color:Blue;\">array</span>();                        <span style=\"color:Green;\">//Create the empty array for use later and so that it won&#39;t throw an error if not assinged later</span>\n$hsql = <span style=\"color:#A31515;\">&quot;select Headings from TableHeadings where TableName = &#39;$TableName&#39; order by Id&quot;</span>;    <span style=\"color:Green;\">//Get all the column headers from the TableHeadings table in SQL</span>\n\n$getHeadings = $conn-&gt;query($hsql);\n$rHeadings = $getHeadings-&gt;fetchALL(PDO::FETCH_ASSOC);\n$CountHeadings = count($rHeadings);         <span style=\"color:Green;\">//Count how many columns that there will be</span>\n$tsqlHeadings = <span style=\"color:#A31515;\">&#39;&#39;</span>;\n$ColumnHeader = <span style=\"color:Blue;\">array</span>();\n<span style=\"color:Blue;\">for</span> ($row = 0; $row &lt; $CountHeadings; $row++)\n{\n    $headings[$row] = $rHeadings[$row][<span style=\"color:#A31515;\">&quot;Headings&quot;</span>];     <span style=\"color:Green;\">//fill the array of column headings for use in creating the DataTable</span>\n}\n\n<span style=\"color:Blue;\">foreach</span>($headings <span style=\"color:Blue;\">as</span> $index =&gt; $columnName)\n{\n    $ColumnHeader[] = <span style=\"color:Blue;\">array</span>(<span style=\"color:#A31515;\">&#39;db&#39;</span>=&gt;$columnName,<span style=\"color:#A31515;\">&#39;dt&#39;</span>=&gt;$index);    <span style=\"color:Green;\">//creates the array for creating the DataTable column headers when sent to the FilterSort.class</span>\n}\n<span style=\"color:Green;\">// Error reporting</span>\nerror_reporting(E_ALL);\nini_set(<span style=\"color:#A31515;\">&#39;display_errors&#39;</span>, TRUE);\nini_set(<span style=\"color:#A31515;\">&#39;display_startup_errors&#39;</span>, TRUE);\n\n<span style=\"color:Blue;\">if</span> (PHP_SAPI == <span style=\"color:#A31515;\">&#39;cli&#39;</span>)\n    <span style=\"color:Blue;\">die</span>(<span style=\"color:#A31515;\">&#39;This example should only be run from a Web Browser&#39;</span>);\n\n<span style=\"color:Green;\">// Include PHPExcel </span>\n<span style=\"color:Blue;\">require_once</span> dirname(<span style=\"color:Blue;\">__FILE__</span>) . <span style=\"color:#A31515;\">&#39;./Classes/PHPExcel.php&#39;</span>;\n\n\n<span style=\"color:Green;\">// Create new PHPExcel object</span>\n$objPHPExcel = <span style=\"color:Blue;\">new</span> PHPExcel();\n\n<span style=\"color:Green;\">// Set document properties</span>\n$objPHPExcel-&gt;getProperties()-&gt;setCreator(<span style=\"color:#A31515;\">&quot;Mke in IT&quot;</span>)\n                             -&gt;setLastModifiedBy(<span style=\"color:#A31515;\">&quot;Mke in IT&quot;</span>)\n                             -&gt;setTitle($TableName)\n                             -&gt;setSubject($TableName)\n                             -&gt;setDescription(<span style=\"color:#A31515;\">&quot;Report for &quot;</span> .$TableName. <span style=\"color:#A31515;\">&quot; using PHPExcel, generated using PHP classes.&quot;</span>)\n                             -&gt;setKeywords(<span style=\"color:#A31515;\">&quot;office PHPExcel php &quot;</span> . $TableName)\n                             -&gt;setCategory(<span style=\"color:#A31515;\">&quot;Report Export File&quot;</span>);\n\n\n<span style=\"color:Green;\">// Add some data</span>\n$ColumnArray = <span style=\"color:Blue;\">array</span>(<span style=\"color:#A31515;\">&#39;A&#39;</span>,<span style=\"color:#A31515;\">&#39;B&#39;</span>,<span style=\"color:#A31515;\">&#39;C&#39;</span>,<span style=\"color:#A31515;\">&#39;D&#39;</span>,<span style=\"color:#A31515;\">&#39;E&#39;</span>,<span style=\"color:#A31515;\">&#39;F&#39;</span>,<span style=\"color:#A31515;\">&#39;G&#39;</span>,<span style=\"color:#A31515;\">&#39;H&#39;</span>,<span style=\"color:#A31515;\">&#39;I&#39;</span>,<span style=\"color:#A31515;\">&#39;J&#39;</span>,<span style=\"color:#A31515;\">&#39;K&#39;</span>,<span style=\"color:#A31515;\">&#39;L&#39;</span>,<span style=\"color:#A31515;\">&#39;M&#39;</span>,<span style=\"color:#A31515;\">&#39;N&#39;</span>,<span style=\"color:#A31515;\">&#39;O&#39;</span>,<span style=\"color:#A31515;\">&#39;P&#39;</span>,<span style=\"color:#A31515;\">&#39;Q&#39;</span>,<span style=\"color:#A31515;\">&#39;R&#39;</span>,<span style=\"color:#A31515;\">&#39;S&#39;</span>,<span style=\"color:#A31515;\">&#39;T&#39;</span>,<span style=\"color:#A31515;\">&#39;U&#39;</span>,<span style=\"color:#A31515;\">&#39;V&#39;</span>,<span style=\"color:#A31515;\">&#39;W&#39;</span>,<span style=\"color:#A31515;\">&#39;X&#39;</span>,<span style=\"color:#A31515;\">&#39;Y&#39;</span>,<span style=\"color:#A31515;\">&#39;Z&#39;</span>,<span style=\"color:#A31515;\">&#39;AA&#39;</span>,<span style=\"color:#A31515;\">&#39;AB&#39;</span>,<span style=\"color:#A31515;\">&#39;AC&#39;</span>,<span style=\"color:#A31515;\">&#39;AD&#39;</span>,<span style=\"color:#A31515;\">&#39;AE&#39;</span>,<span style=\"color:#A31515;\">&#39;AF&#39;</span>,<span style=\"color:#A31515;\">&#39;AG&#39;</span>,<span style=\"color:#A31515;\">&#39;AH&#39;</span>,<span style=\"color:#A31515;\">&#39;AI&#39;</span>,<span style=\"color:#A31515;\">&#39;AJ&#39;</span>,<span style=\"color:#A31515;\">&#39;AK&#39;</span>,<span style=\"color:#A31515;\">&#39;AL&#39;</span>,<span style=\"color:#A31515;\">&#39;AM&#39;</span>,<span style=\"color:#A31515;\">&#39;AN&#39;</span>,<span style=\"color:#A31515;\">&#39;AO&#39;</span>,<span style=\"color:#A31515;\">&#39;AP&#39;</span>,<span style=\"color:#A31515;\">&#39;AQ&#39;</span>,<span style=\"color:#A31515;\">&#39;AR&#39;</span>,<span style=\"color:#A31515;\">&#39;AS&#39;</span>,<span style=\"color:#A31515;\">&#39;AT&#39;</span>,<span style=\"color:#A31515;\">&#39;AU&#39;</span>,<span style=\"color:#A31515;\">&#39;AV&#39;</span>,<span style=\"color:#A31515;\">&#39;AW&#39;</span>,<span style=\"color:#A31515;\">&#39;AX&#39;</span>,<span style=\"color:#A31515;\">&#39;AY&#39;</span>,<span style=\"color:#A31515;\">&#39;AZ&#39;</span>);\n$HeadingArray = $headings;\n\n$primaryKey = <span style=\"color:#A31515;\">&#39;id&#39;</span>;\n$table = $SQLTableName;                  \n$request = $_POST;\n$dataArray  = <span style=\"color:Blue;\">array</span>();\n<span style=\"color:Blue;\">require</span>(<span style=\"color:#A31515;\">&#39;FilterSort.class.php&#39;</span>);\n$dataArraystr = json_encode(FilterSort::complex($request,$sqlConnect,$table,$primaryKey,$ColumnHeader));\n\n$dataArraystr = str_replace(<span style=\"color:#A31515;\">&#39;{&quot;draw&quot;:0,&quot;recordsTotal&quot;:76,&quot;recordsFiltered&quot;:76,&quot;data&quot;:[[&quot;&#39;</span>,<span style=\"color:#A31515;\">&#39;&quot;,&quot;&#39;</span>,$dataArraystr);\n$dataArraystr = str_replace(<span style=\"color:#A31515;\">&#39;\\r&#39;</span>,<span style=\"color:#A31515;\">&#39;&#39;</span>,$dataArraystr);\n$dataArraystr = str_replace(<span style=\"color:#A31515;\">&#39;\\n&#39;</span>,<span style=\"color:#A31515;\">&#39;&#39;</span>,$dataArraystr);\n$dataArraystr = str_replace(<span style=\"color:#A31515;\">&#39;\\t&#39;</span>,<span style=\"color:#A31515;\">&#39;&#39;</span>,$dataArraystr);\n$dataArraystr = str_replace(<span style=\"color:#A31515;\">&#39;\\&quot;&#39;</span>,<span style=\"color:#A31515;\">&#39;&#39;</span>,$dataArraystr);\n$dataArraystr = str_replace(<span style=\"color:#A31515;\">&#39;&quot;]]}&#39;</span>,<span style=\"color:#A31515;\">&#39;&#39;</span>,$dataArraystr);\n$dataArraystr = str_replace(<span style=\"color:#A31515;\">&#39;&lt;\\/div&gt;&#39;</span>,<span style=\"color:#A31515;\">&#39;&#39;</span>,$dataArraystr);\n$dataArraystr = str_replace(<span style=\"color:#A31515;\">&#39;Format([OPEN_FOR_SALES_ACT],&#39;</span>,<span style=\"color:#A31515;\">&#39;Format([OPEN_FOR_SALES_ACT],1)&#39;</span>,$dataArraystr);\n$dataArraystr = str_replace(<span style=\"color:#A31515;\">&#39;&quot;],[&quot;&#39;</span>,<span style=\"color:#A31515;\">&#39;::&#39;</span>,$dataArraystr);\n$dataArraystr = explode(<span style=\"color:#A31515;\">&#39;::&#39;</span>,$dataArraystr);\n\n<span style=\"color:Blue;\">foreach</span>($dataArraystr <span style=\"color:Blue;\">as</span> $ArrayStr)\n{\n    $dataArray[] = explode(<span style=\"color:#A31515;\">&#39;&quot;,&quot;&#39;</span>,$ArrayStr);\n}\n\n<span style=\"color:Green;\">//$objPHPExcel-&gt;getActiveSheet()-&gt;fromArray($dataArray, NULL, &#39;A2&#39;);</span>\n<span style=\"color:Green;\">//$objPHPExcel-&gt;getActiveSheet()-&gt;fromArray($HeadingArray, NULL, &#39;A1&#39;);</span>\n<span style=\"color:Green;\">//$objPHPExcel-&gt;getActiveSheet()-&gt;fromArray($_POST,NULL,&#39;G2&#39;);</span>\n<span style=\"color:Green;\">//$objPHPExcel-&gt;getActiveSheet()-&gt;setCellValue(&#39;F2&#39;,&#39;POST&#39;);</span>\n\n$CountOfArray = count($HeadingArray);\n\n<span style=\"color:Green;\">// Set title row bold</span>\n$objPHPExcel-&gt;getActiveSheet()-&gt;getStyle(<span style=\"color:#A31515;\">&#39;A1:&#39;</span> .$ColumnArray[$CountOfArray-1]. <span style=\"color:#A31515;\">&#39;1&#39;</span>)-&gt;getFont()-&gt;setBold(true);\n\n<span style=\"color:Green;\">// Set autofilter</span>\n<span style=\"color:Green;\">// Always include the complete filter range!</span>\n<span style=\"color:Green;\">// Excel does support setting only the caption</span>\n<span style=\"color:Green;\">// row, but that&#39;s not a best practise...</span>\n$objPHPExcel-&gt;getActiveSheet()-&gt;setAutoFilter($objPHPExcel-&gt;getActiveSheet()-&gt;calculateWorksheetDimension());\n\n<span style=\"color:Green;\">// Rename worksheet</span>\n$objPHPExcel-&gt;getActiveSheet()-&gt;setTitle(<span style=\"color:#A31515;\">&#39;SimpleTest&#39;</span>);\n\n\n<span style=\"color:Green;\">// Set active sheet index to the first sheet, so Excel opens this as the first sheet</span>\n$objPHPExcel-&gt;setActiveSheetIndex(0);\n\n\n<span style=\"color:Green;\">// Redirect output to a client’s web browser (Excel2007)</span>\nheader(<span style=\"color:#A31515;\">&#39;Content-Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet&#39;</span>);\nheader(<span style=\"color:#A31515;\">&#39;Content-Disposition: attachment;filename=&quot;ExportAllToExcelTest.xlsx&quot;&#39;</span>);\nheader(<span style=\"color:#A31515;\">&#39;Cache-Control: max-age=0&#39;</span>);\n<span style=\"color:Green;\">// If you&#39;re serving to IE 9, then the following may be needed</span>\nheader(<span style=\"color:#A31515;\">&#39;Cache-Control: max-age=1&#39;</span>);\n\n<span style=\"color:Green;\">// If you&#39;re serving to IE over SSL, then the following may be needed</span>\nheader (<span style=\"color:#A31515;\">&#39;Expires: Mon, 26 Jul 1997 05:00:00 GMT&#39;</span>); <span style=\"color:Green;\">// Date in the past</span>\nheader (<span style=\"color:#A31515;\">&#39;Last-Modified: &#39;</span>.gmdate(<span style=\"color:#A31515;\">&#39;D, d M Y H:i:s&#39;</span>).<span style=\"color:#A31515;\">&#39; GMT&#39;</span>); <span style=\"color:Green;\">// always modified</span>\nheader (<span style=\"color:#A31515;\">&#39;Cache-Control: cache, must-revalidate&#39;</span>); <span style=\"color:Green;\">// HTTP/1.1</span>\nheader (<span style=\"color:#A31515;\">&#39;Pragma: public&#39;</span>); <span style=\"color:Green;\">// HTTP/1.0</span>\n\n$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, <span style=\"color:#A31515;\">&#39;Excel2007&#39;</span>);\n$objWriter-&gt;save(<span style=\"color:#A31515;\">&#39;php://output&#39;</span>);\n\n?&gt;\r\n</pre></div>Here is a sample of what the garbage looks like:<br />\n<pre><code>PK\u0003\u0004\u0014\bBW*JG’D²X\u0001ð\u0004\u0013[Content_Types].xml­”MNÃ0\u0010…÷œ&quot;ò\u0016%nY „švAa    •(\u00070ö¤±êØ–gúw{&amp;i\u000b\b‰@ÕnbEö{ßøyìÑdÛ¸l\n    mð¥\u0018\u0016\u0003‘×ÁX¿(ÅÛü)¿\u0013\u0019’òF¹à¡\u0014;@1\u0019_æ»\b˜±Øc)j¢x/%ê\u001a\u001a…Eˆày¦\n©QÄ¿i!£ÒKµy3\u0018ÜJ\u001d&lt;§œZ\u000f1\u001e½0?Y\u0003ÙL%zV  \ncäÖIb7Ø‡\u0005û‰ìa/lÙ¥P1:«\u0015qáríÍ\u000fj\u001eªÊj0A¯\u001a–\u0014Íuë&quot;\u0005&quot;í\u001càÙ(Œ  ”Á\u001a€\u001aWìMä)Tjå({Ü²û&gt;ó\u0004\u000eOã\u001dÂ,XÙ­ÁÚÆ&gt;Bÿ†~×­Ï\f‚õÓ¤6ÜJ=¡oBZ¾‡°¼tìíX4Êú¾Cgñ,…ˆ’Qg\u0017mr\u0006L\u001eÙ\u0012\u0012Ù¯cïeëàtø±\n£{£´…1F^Ê ·2²\u0007Ðlå‡$–±½-}ûy‡±\u0005ºÒÃŽ–¥OŸ„vûy\u001aÕ;‡Ø‹Ó°.JPìŒØÞµ\u001a^ê§Õ\u0003¨˜ÈY\u001aÅ±†3GØWw»g\u001e)åšØõ&gt;ª\fqQC—’DŒ¦ã‰b!ž]þi$L”ò3´èÉ\fÔ2nÊò\u001eÃo\u0006T\u000b¦:Z    \náh· ê³ç[ØÒ4½áƒ˜·‰]ºÐ\u0002yNì,Û•\u000f¹&gt;¤&gt;\u000f£j \n-'  \nVÌ)‡#’÷EF\u0003^6ÚÜnô÷´8q&quot;K‰ÐHàë&gt;_\u0019×„Öÿ¹¢eÆÍ&lt;â‡„áUdøvÁÅ \nTŸPK\u0003\u0004\u0014\bBW*J„$±Vé¹\u0002\u001axl/_rels/workbook.xml.rels­’ÁjÃ0\u0010Dïý    </code></pre>\n\n",
    "PostedDate": "2017-01-10T06:43:55.637-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1491058",
    "ThreadId": "660604",
    "Html": "I figured out part of it. I have a white space character of some kind at the beginning of the file, that is what is causing the garbage printing. I was able to remove some of it, all that I could find actually, but it was still printing the garbage. I ended up changing the end of my code to account for it like this:<br />\n<div style=\"color:Black;background-color:White;\"><pre>\r\n$objWriter = <span style=\"color:Blue;\">new</span> PHPExcel_Writer_Excel2007($objPHPExcel);\nob_clean();\n$objWriter-&gt;save(<span style=\"color:#A31515;\">&#39;php://output&#39;</span>);\r\n</pre></div>This has cleared up the garbage printing, but I still can't figure out where else I need to look for the white space characters or if that is even the problem any long<br />\n",
    "PostedDate": "2017-01-12T10:55:26.18-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": "2017-01-12T10:58:56.997-08:00"
  }
]