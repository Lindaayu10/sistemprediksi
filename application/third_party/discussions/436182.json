[
  {
    "Id": "1013365",
    "ThreadId": "436182",
    "Html": "I'm using PHP 5.3.10 and PHPExcel 1.7.8 along with XDebug to try to figure out what's going on here.<br />\n<br />\nI'm trying to parse XLS files uploaded to my web app &quot;A&quot; that are created/generated by someone else's web app &quot;B&quot;. (B offers no API...)<br />\n<br />\nWhat I'm seeing when I step through with XDebug is that:<br />\n<ol>\n<li>.xls file is identified as Excel (BIFF) Spreadsheet and class</li>\n<li>The PHPExcel_Reader_Excel5::canRead($pFilename) is called</li>\n<li>PHPExcel_Shared_OLERead::read($sFilename) is called</li>\n<li>It's not an OLE file, inside trycatch, so PHPExcel_Reader_Excel5 can't read it</li>\n<li>IOFactory::createReaderForFile checks every other format, then PHPExcel_Reader_HTML is the only one that can read it</li>\n<li>\nPHPExcel_Reader_HTML fails inside $dom-&gt;loadHTMLFile because of a broken &lt;td&gt; tag! The actual error thrown is WARNING: DOMDocument::loadHTMLFile(): Unexpected end tag : td in /path/to/my/xls/file.xls<br />\n</li>\n</ol>\nWhat I found out is that by changing line 458 of PHPExcel/Reader/HTML.php from...<br />\n<pre><code>$loaded = $dom-&gt;loadHTMLFile($pFilename);</code></pre>\n\n...to...<br />\n<pre><code>$loaded = @$dom-&gt;loadHTMLFile($pFilename);</code></pre>\n\n...the class is able to continue. I know, typically, error suppression is the worst way to deal with any code problems, but for this case it actually allowed the class to return data. Maybe this will help someone in the future. I should mention this is a warning, not a fatal error, however using the settings with my framework (Kohana 3.x) warnings are show stoppers.<br />\n<br />\nThe code maintainers may want to try catch this part: $dom-&gt;loadHTMLFile($pFilename), because ultimately it just does fopen &amp; fread later on down anyway.<br />\n<br />\nAlso, lines 472-473 of PHPExcel/Reader/HTML.php include debugging output that should be commented out or removed:<br />\n<pre><code>echo '&lt;hr /&gt;';\nvar_dump($this-&gt;_dataArray);</code></pre>\n\nand, internally, the private function _processDomElement method of the PHPExcel_Reader_HTML class has tons of echo statements inside of it, rendering it much less useful for parsing this particular type of file as library code within another application. I've added a <br />\n<pre><code>public $suppressOutput = true;</code></pre>\n\nto that class, and preceded all echo statements in the class with<br />\n<pre><code>if( ! $this-&gt;suppressOutput ) echo ...</code></pre>\n\nso that I can get the return array from parsing my HTML Excel file without printing anything to the OB.<br />\n<br />\nI can submit a patch if you like.<br />\n",
    "PostedDate": "2013-03-11T10:09:27.417-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]