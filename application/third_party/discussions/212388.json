[
  {
    "Id": "441916",
    "ThreadId": "212388",
    "Html": "<p>Hi,</p>\r\n<p>Using PHPExcel 1.7.2 I have to export &quot;big&quot; amount of data (Up to 3 sheets of each about 8000 rows of up to 14 columns each).&nbsp; My current memory_limit is set to 128M and do not seem enough.&nbsp;</p>\r\n<p>Here is how I do something like the following (a little bit simplified to avoid overhead):</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:black;background-color:white\">\r\n<pre>$objPHPExcel = <span style=\"color:blue\">new</span> PHPExcel();<br><br><span style=\"color:green\">// for each sheet I do the following</span><br><br>$currentSheet = $objPHPExcel-&gt;createSheet();<br>$currentSheet-&gt;setTitle(<span style=\"color:#a31515\">'My title'</span>);<br><span style=\"color:green\">// then I set the headers for all columns</span><br>$currentSheet-&gt;SetCellValue($col++.<span style=\"color:#a31515\">'1'</span>, <span style=\"color:#a31515\">'id'</span>);<br>$currentSheet-&gt;SetCellValue($col++.<span style=\"color:#a31515\">'1'</span>, <span style=\"color:#a31515\">'name'</span>);<br><span style=\"color:green\">// etc...</span><br><span style=\"color:green\">// then I loop through resources fetched from DB into $resource_list</span><br>$row = 2;<br>  <span style=\"color:blue\">foreach</span> ( $resource_list <span style=\"color:blue\">as</span> $res ) {<br>    $col = <span style=\"color:#a31515\">'A'</span>;<br>    <span style=\"color:blue\">foreach</span> ( $res AS $data ) {<br>      <span style=\"color:blue\">if</span> ( !<span style=\"color:blue\">empty</span>($data) ) {<br>        $currentSheet-&gt;SetCellValue($col . $row, $data);<br>      }<br>      $col++;<br>    }<br><br>    $row++;<br>  }<br><br><span style=\"color:green\">// end of the loop done to fill in all the sheets (up to 3 sheets)</span><br><br><span style=\"color:green\">// then I adjust size of all columns on each sheet (assuming sheetIndex is the index of latest sheet)</span><br>    <span style=\"color:blue\">for</span> ($sheet = 0; $sheet &lt; $sheetIndex; $sheet++ ) {<br>      $objPHPExcel-&gt;setActiveSheetIndex($sheet);<br>      <span style=\"color:green\">// sets size of colums depending on their content</span><br>      $highestColumn = $objPHPExcel-&gt;getActiveSheet()-&gt;getHighestColumn(); <span style=\"color:green\">//e.g., 'G'</span><br>      $highestColumnIndex = PHPExcel_Cell::columnIndexFromString($highestColumn); <span style=\"color:green\">//e.g., 6</span><br><br>      <span style=\"color:blue\">for</span> ($col = 0; $col &lt; $highestColumnIndex; $col++) {<br>        $objPHPExcel-&gt;getActiveSheet()-&gt;getColumnDimension(PHPExcel_Cell::stringFromColumnIndex($col))-&gt;setAutoSize(true);<br>      }<br>    }<br><br><span style=\"color:green\">// finally...</span><br><span style=\"color:green\">// I set back first page as active sheet</span><br>$objPHPExcel-&gt;setActiveSheetIndex(0);<br><br><span style=\"color:green\">// and I start the download of the file</span><br>header(<span style=\"color:#a31515\">&quot;Cache-Control: no-cache, must-revalidate&quot;</span>); <span style=\"color:green\">// HTTP/1.1</span><br>header(<span style=\"color:#a31515\">&quot;Expires: Sat, 26 Jul 1997 05:00:00 GMT&quot;</span>);<br><br>header(<span style=\"color:#a31515\">&quot;Pragma: public&quot;</span>);<br>header(<span style=\"color:#a31515\">&quot;Expires: 0&quot;</span>);<br><br>header(<span style=\"color:#a31515\">'Content-Type: application/vnd.ms-excel'</span>);<br>header(<span style=\"color:#a31515\">'Content-Disposition: attachment;filename=&quot;filename</span><span style=\"color:#a31515\">.xls&quot;'</span>);<br><br>header(<span style=\"color:#a31515\">&quot;Cache-Control: max-age=0, must-revalidate, post-check=0, pre-check=0&quot;</span>);<br><br>$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, <span style=\"color:#a31515\">'Excel5'</span>);<br>$objWriter-&gt;save(<span style=\"color:#a31515\">'php://output'</span>);</pre>\r\n</div>\r\n<div style=\"color:black;background-color:white\"><br><br><br><br>I'm not sure it's the best way to create excel sheets with PHPExcel but I'm currently stuck with this problem so any help or hint will be appreciated.<br><br>Alternatively I was thinking about using a batch process to write up the file by iterations of 1000 rows before starting the download of the &quot;concatenated&quot; file.  <br>Is this a a good solution ?  Is it possible to add 1000 rows to an existing sheet without loading it (as it will not help resource usage...)</div>\r\n<div style=\"color:black;background-color:white\">Thanks for any help :)</div>\r\n<div style=\"color:black;background-color:white\">Regards,</div>\r\n<div style=\"color:black;background-color:white\">Seb</div>\r\n<p>&nbsp;</p>",
    "PostedDate": "2010-05-12T02:13:34.983-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "443115",
    "ThreadId": "212388",
    "Html": "<p>The next release (which should be coming to a download near you early next week) includes a number of features to reduce the memory footprint, including cell caching. This allows PHPExcel to work with much larger workbooks, because the cell objects themselves can be configured to be held on disk or APC or as smaller serialized values rather than taking up all the php memory</p>",
    "PostedDate": "2010-05-14T16:14:31.723-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]