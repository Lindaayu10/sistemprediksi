[
  {
    "Id": "1140960",
    "ThreadId": "476954",
    "Html": "I'm using PHPExcel 1.7.9 with PHP 5.3.5 and I'm encountering something odd when iterating an Excel file created with Excel 2010.  I have a column of data that contains simple whole numbers (formatted as general) but the returned value by calling $cell-&gt;getCalculatedValue() gives me a period instead of the number.\r<br />\n<br />\nI've tried formatting the cells differently (text and number) and get the same result.  Other cells come through just fine.  I've confirmed that I'm indeed looking at the correct column with $cell-&gt;getColumn() as well.\r<br />\n<br />\nHas anyone ever seen this before?  I can share a version of my spreadsheet and code if that helps.<br />\n",
    "PostedDate": "2013-12-23T11:15:45.05-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1140984",
    "ThreadId": "476954",
    "Html": "If you want to retrieve the value as it appears when viewing it in Excel then you need to use getFormattedValue() instead of getCalculatedValue().<br />\ngetCalculatedValue() ignores any styling/formatting code the spreadsheet has.<br />\n<br />\nHowever, this doesn't explain why it is returning a '.' value. That might be a different issue.<br />\n<br />\n-- Christopher Mullins<br />\n",
    "PostedDate": "2013-12-23T12:42:11.923-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1142343",
    "ThreadId": "476954",
    "Html": "Thank you for the suggestion.  I tried getFormattedValue() and it returns a period as well.  I've put together a much simpler spreadsheet with two columns that illustrate the error.  Row 1 has header labels.  Column A has numeric values (1-5) and column B has a reference formula to column A of =IF(A2&gt;0,&quot;.&quot;,&quot;&quot;).  Nothing too fancy, but the reference in column B is what seems to be doing this.\r<br />\n<br />\nI believe the error comes about as I'm trying to structure each row of data into an array that is indexed to the header row 1.  In other words, I want something that starts with:<br />\n<pre><code>      A       B\n1     foo     bar\n2     4       =IF(A2&gt;0,&quot;.&quot;,&quot;&quot;)\n3     0       =IF(A2&gt;0,&quot;.&quot;,&quot;&quot;)</code></pre>\n\nTo look like the following structure on a per row basis (starting at row #2)<br />\n<pre><code>Array\n(\n    [foo] =&gt; 4\n    [bar] =&gt; .\n)</code></pre>\n\nI didn't see a code sample or handy method to do this, so I wrote up the following myself to iterate the cells and create a $header_row array:<br />\n<pre><code>$objReader = PHPExcel_IOFactory::createReader('Excel2007');\n$objPHPExcel = $objReader-&gt;load($_FILES[&quot;data_file&quot;][&quot;tmp_name&quot;]);\n\n$header_row = array();\n$dates = array('dob', 'dop', 'dot', 'letter date', 'allocdate', 'deadline', 'resent date');\n$worksheet = $objPHPExcel-&gt;getSheetByName('DistDataTemplate');\n\nforeach ($worksheet-&gt;getRowIterator() as $row) \n{\n    $line = array();\n\n    $cellIterator = $row-&gt;getCellIterator();\n    $cellIterator-&gt;setIterateOnlyExistingCells(false); // Loop all cells, even if it is not set\n    foreach ($cellIterator as $cell) \n    {\n        if (!is_null($cell)) \n        {\n            // set up header row\n            if ($row-&gt;getRowIndex() == 1)\n            {\n                $header_row[$cell-&gt;getColumn()] = strtolower($cell-&gt;getFormattedValue());  // [A] =&gt; ssn\n            } else\n            {\n                $cell_value = $cell-&gt;getCalculatedValue();\n\n                // convert Excel dates into Unix dates\n                if (in_array($header_row[$cell-&gt;getColumn()], $dates) &amp;&amp; PHPExcel_Shared_Date::isDateTime($cell))\n                     $cell_value = PHPExcel_Shared_Date::ExcelToPHP($cell-&gt;getCalculatedValue());\n\n                $line[$header_row[$cell-&gt;getColumn()]] = $cell_value;\n            }\n        }\n    }\n\n    // submit line of data to the API\n    if ($row-&gt;getRowIndex() &gt; 1 &amp;&amp; $row-&gt;getRowIndex() &lt; 11)\n    {\n        // do stuff here...\n    }\n}</code></pre>\n\nThe above seems to correctly work, but I believe the problem is that once the reference is made to A2 in the formula in B2, the cell coordinate gets set to A2.  I turned on debugging output in Cell.php (along with my printing of the $line array) and get this:<br />\n<pre><code>Worksheet - DistDataTemplate\nRow number - 1\nCell A1 value is a s with a value of foo Cell value for A1 is not a formula: Returning data value of foo\nCell B1 value is a s with a value of bar Cell value for B1 is not a formula: Returning data value of bar\nCell C1 value is a null with a value of Cell value for C1 is not a formula: Returning data value of\nRow number - 2\nCell A2 value is a n with a value of 4 Cell value for A2 is not a formula: Returning data value of 4\nCell B2 value is a f with a value of =IF(A2&gt;0,&quot;.&quot;,&quot;&quot;) Cell value for B2 is a formula: Calculating value Cell A2 value is a n with a value of 4 Cell value for A2 is not a formula: Returning data value of 4\nA2 calculation result is . Returning calculated value of . for cell A2 Cell C2 value is a null with a value of Cell value for C2 is not a formula: Returning data value of\n\nArray\n(\n    [foo] =&gt; .\n    [] =&gt; \n)</code></pre>\n\nNotice the <strong>Returning calculated value of . for cell A2</strong> phrase above near the end of the output?  I would expect it to be for B2, not A2.  Maybe it is my code, but it looks like a bug.  I'm happy to help in any way to sort it out.<br />\n",
    "PostedDate": "2013-12-26T07:05:57.19-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]