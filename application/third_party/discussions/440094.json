[
  {
    "Id": "1029668",
    "ThreadId": "440094",
    "Html": "Im using the Sqlite cache option like this :<br />\n<pre><code>// use SQLite3 for caching\n$cacheMethod = PHPExcel_CachedObjectStorageFactory::cache_to_sqlite3;\n$cacheEnabled = PHPExcel_Settings::setCacheStorageMethod($cacheMethod);\nif (!$cacheEnabled)\n{\n    echo &quot;### WARNING - Sqlite3 not enabled ###&quot; . PHP_EOL;\n}\n$objPHPExcel = new PHPExcel();\n</code></pre>\n\nBut when i create a simple (as in no styling or formula's - just plain text - about 20 columns) 10000 line spreadsheet the PHP memory still rises - it seems to me that the <code>:memory:</code> database in Sqlite3 just consumes the PHP process memory - and eventually causes an error (PHP runs out of memory) - Im writing some pretty large tables - Im having to split them up to get them to ouput.<br />\n<br />\nI have tried modifying the PHPExcel Sqlite3 class to use a file for the database - and that works - PHP memory rises to about 12/15mb and the database file grows - this works fine but takes a while ....<br />\n<br />\nDo you have any suggestions on how to avoid using the PHP process memory ? perhaps the database filename could be a setting that you pass to the <code>setCacheStorageMethod</code> function<br />\n",
    "PostedDate": "2013-04-12T08:55:37.233-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1029679",
    "ThreadId": "440094",
    "Html": "SQLite should not use PHP memory for an in-memory database, that's part of the point of SQLite. If it does use PHP memory, then it's not working as described in the SQLite documentation: it should work purely within its own memory space independently of any programming language.\r<br />\n<br />\nOtherwise, I'm afraid I'm completely out of suggestions - I've spent nearly 4 years now working on reducing memory consumption. The latest develop branch and using SQlite (because there is no longer any need to maintain any cell index in memory at all) is about the limits that I believe are achievable; and I'm experimenting with a couple of tweaks to SQLite configuration that should squeeze an extra few milliseconds of performance; but I can't think of anything more that I can do other than drop functionality or rewrite the whole thing as procedural code using pure arrays (which rather negates the purpose of PHPExcel, and has no guarantees that it will make anything better).<br />\n",
    "PostedDate": "2013-04-12T09:17:30.923-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1029683",
    "ThreadId": "440094",
    "Html": "Mark - thanks for your reply - I hope my questions wasn't read as a criticism of PHPExcel - because its an absolutely brilliant library - there is nothing else that is anywhere near it.\r<br />\n<br />\nI have been testing using my Wampserver locally on my laptop - maybe it would be different if I tried a pure Apache / PHP environment it might be different ?\r<br />\n<br />\nI will do some more testing on a serve environment - and i guess the sqlite3 file is an option ... perhaps i could contribute a pull request (or similar for codeplex) with an addition of the setting for file rather than memory.\r<br />\n<br />\nThanks for the hard work that you have put in to PHPExcel - its certainly appreciated by me :-)<br />\n",
    "PostedDate": "2013-04-12T09:22:09.983-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1029731",
    "ThreadId": "440094",
    "Html": "Something isn't working quite right ... when I run a simple Sqlite3 test :<br />\n<pre><code>echo ini_get(&quot;memory_limit&quot;).PHP_EOL;\n$db = new SQLite3(':memory:');\n$db-&gt;exec('CREATE TABLE foo (bar STRING)');\nfor ($index = 1;$index &lt; 1000000; $index++) {\n    $db-&gt;exec(&quot;INSERT INTO foo (bar) VALUES ('This is a test')&quot;);\n}\n// Echo memory usage\necho date('H:i:s') , ' Current memory usage: ' , (memory_get_usage(true) / 1024 / 1024) , &quot; MB&quot; , PHP_EOL;\n// Echo memory peak usage\necho date('H:i:s') , &quot; Peak memory usage: &quot; , (memory_get_peak_usage(true) / 1024 / 1024) , &quot; MB&quot; , PHP_EOL;</code></pre>\n\nMy output is <br />\n<pre><code>10M\n17:09:53 Current memory usage: 0.5 MB\n17:09:53 Peak memory usage: 0.5 MB\n</code></pre>\n\nIf i look at windows task manager I can clearly see <code>php.exe</code> using ~32MB ... so something strange is happening there ....\r<br />\n<br />\nWhen i run <a href=\"https://github.com/PHPOffice/PHPExcel/blob/develop/Examples/06largescale-with-cellcaching-sqlite3.php\" rel=\"nofollow\">your sqlite3 example</a>, slightly modified for loop (on line 93) :<br />\n<pre><code>for ($i = 2; $i &lt;= 50000; $i++) {\n</code></pre>\n\ni get the following output :<br />\n<pre><code>17:34:41 Enable Cell Caching using SQLite3 method\n17:34:41 Create new PHPExcel object\n17:34:41 Set properties\n17:34:41 Add data\n17:34:41 Hide 'Phone' and 'fax' columns\n17:34:41 Set outline levels\n17:34:41 Freeze panes\n17:34:41 Rows to repeat at top\n17:35:43 Write to Excel2007 format\n17:39:46 File written to phptest.xlsx\nCall time to write Workbook was 242.8200 seconds\n17:39:46 Current memory usage: 89.25 MB\n17:39:46 Peak memory usage: 114.5 MB\n17:39:46 Done writing file</code></pre>\n\nand that tallies with the windows task manager ...  do you have any suggestions ?!?!?!<br />\n",
    "PostedDate": "2013-04-12T10:19:28.873-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]