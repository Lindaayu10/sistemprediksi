[
  {
    "Id": "422636",
    "ThreadId": "207038",
    "Html": "<p>Hi,</p>\r\n<p>&nbsp;</p>\r\n<p>What am i facing with:</p>\r\n<p>&nbsp;</p>\r\n<p>CSV file 65536 rows, F (6) columns</p>\r\n<p>Script run time approx. 75 sec, memory used 550MB</p>\r\n<p>&nbsp;</p>\r\n<p>XLSX file 96000+ rows G (7) columns</p>\r\n<p>Script run time approx. 130+ sec memory used 1.2GB+</p>\r\n<p>&nbsp;</p>\r\n<p>If i upload same XLSX file, memory consumption takes all of 1.5GB available memory and 1GB swap space,</p>\r\n<p>In most cases second upload kills apache/system (hangout).</p>\r\n<p>&nbsp;</p>\r\n<p>What i want to do is read CSV/EXCEL and put it into database.</p>\r\n<p>&nbsp;</p>\r\n<p>Here is code, mostly from manual.</p>\r\n<p><span style=\"color:Blue\"></span></p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre>\t\t<br>$objReader = PHPExcel_IOFactory::createReader(<span style=\"color:#A31515\">&quot;CSV&quot;</span>);<br>$objReader-&gt;setDelimiter(<span style=\"color:#A31515\">';'</span>);<br>$objPHPExcel = $objReader-&gt;load(<span style=\"color:#A31515\">&quot;{$filename}&quot;</span>);<br><br>\t<br>$Row = $objPHPExcel-&gt;getActiveSheet(0)-&gt;getHighestRow(); <br>$Column = $objPHPExcel-&gt;getActiveSheet(0)-&gt;getHighestColumn();<br><br><span style=\"color:Blue\">for</span> ($i=1;$i &lt;= $Row; $i++){<div style=\"color:Black;background-color:White\"><pre>    $part = $objPHPExcel-&gt;getActiveSheet(0)-&gt;getCellByColumnAndRow(0, $i)-&gt;getValue();<br>    $what = $objPHPExcel-&gt;getActiveSheet(0)-&gt;getCellByColumnAndRow(1, $i)-&gt;getValue();<br>    $price = $objPHPExcel-&gt;getActiveSheet(0)-&gt;getCellByColumnAndRow(2, $i)-&gt;getValue();<br>    $scurrency = $objPHPExcel-&gt;getActiveSheet(0)-&gt;getCellByColumnAndRow(3, $i)-&gt;getValue();<br>    $ddeliver = $objPHPExcel-&gt;getActiveSheet(0)-&gt;getCellByColumnAndRow(4, $i)-&gt;getValue();<br>    $dprice = $objPHPExcel-&gt;getActiveSheet(0)-&gt;getCellByColumnAndRow(5, $i)-&gt;getValue();<br>    $ves = $objPHPExcel-&gt;getActiveSheet(0)-&gt;getCellByColumnAndRow(6, $i)-&gt;getValue();<br><br>}<br><br>In this loop i put values in database.<br>Code not included.<br><br><br>And for XLSX file<br><br>Just the beginning<br><br>$objReader = PHPExcel_IOFactory::createReader(&quot;Excel2007&quot;);<br>$objReader-&gt;setReadDataOnly(true);<br>$objPHPExcel = $objReader-&gt;load(&quot;{$filename}&quot;);<br><br>Loop code is the same.</pre>\r\n</div>\r\n</pre>\r\n</div>\r\n<p>Am i reading the manual from the wrong side?</p>\r\n<p>Using 1.7.2 PHPExcel, PHP 5.2.6, Apache 2.2.9 Debian Lenny.</p>\r\n<p>Thanks.</p>",
    "PostedDate": "2010-03-23T09:45:29.147-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "422936",
    "ThreadId": "207038",
    "Html": "<p>If you search the threads here, you'll find that we're very aware of the memory usage of PHPExcel, and are working hard on reducing that memory footprint with every release (while still trying to add the new functionality that users are asking for); and in the longer term, we're looking at cacheing the worksheet data so that it isn't all resident in memory. It's already possible to read in selected worksheets rather than the entire workbook using the setLoadSheetsOnly() method of the reader, and to apply a filter using the setReadFilter() method of the reader to restrict the data to a range of cells. Furthermore, with the setReadDataOnly(True) method in the reader, you can instruct PHPExcel to only read in the data for cells rather than all the formatting as well: it's often this formatting information that increases the memory requirements of reading a workbook.</p>\r\n<p>The following thread outlines some of the latest working</p>\r\n<p><a href=\"http://phpexcel.codeplex.com/Thread/View.aspx?ThreadId=203384\">http://phpexcel.codeplex.com/Thread/View.aspx?ThreadId=203384</a></p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2010-03-24T01:53:14.243-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]