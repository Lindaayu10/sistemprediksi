[
  {
    "Id": "494797",
    "ThreadId": "227568",
    "Html": "<p>Hello.</p>\r\n<p>I've been directed here by a colleague who claims these classes should be able to do what I'm after.</p>\r\n<p>I have a working 2003 xls file configured for simple calculations, what I'm trying to do if at all possible is put together a simple PHP script for submitting and returning values to and from this file.</p>\r\n<p>The file has 5 cells, 3 input (B18, E18, H18) and 2 output (K18, N18).</p>\r\n<p>What I'm basically wanting to do here is submit input to the relevant cells via HTML/PHP, crunch the numbers then extract the results and echo them back out.<br><br>In other words, the script would start like this:&nbsp;</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $B18 = $_POST[<span style=\"color:#a31515\">'B18'</span>];</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $E18 = $_POST[<span style=\"color:#a31515\">'E18'</span>];</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  $H18 = $_POST[<span style=\"color:#a31515\">'H18'</span>];</p>\r\n<p>Then each value would be &quot;entered&quot; into it's corresponding cell e.g. $B18--&gt;Cell B18;&nbsp; $E18--&gt;Cell E18;&nbsp; $H18--&gt;Cell H18;&nbsp; the calculation would be performed and then the process reversed with the output e.g. Cell K18--&gt;$K18;&nbsp; Cell N18--&gt;$N18;</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n<div style=\"color:black;background-color:white\">\r\n<pre><span style=\"color:blue\">  echo</span> $K18. <span style=\"color:#a31515\">' '</span> . $N18;\r\n</pre>\r\n</div>\r\n</p>\r\n<p>with any memory or cache being cleared</p>\r\n<p>&nbsp;</p>\r\n<p>I'm not sure how complicated this is or isn't so I'd appreciate any assistance.</p>\r\n<p>Thank you.</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2010-09-16T23:28:38.573-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "494963",
    "ThreadId": "227568",
    "Html": "<p>Two possible solutions:<br>a) Your proposed method with an existing workbook, with the formulae built-in, so you simply populate the data in the input cells from your form, then read and display the calculation results from the formula cells.<br>b) Skip the existing workbook, and execute the formulae directly from PHPExcel.</p>\r\n<p>I've have two versions of a Quadratic Equation solver script, which work using these two methods.</p>\r\n<p><strong>Quadratic1.php</strong></p>\r\n<div style=\"color:black;background-color:white\">\r\n<pre>&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;Quadratic Equation Solver&lt;/title&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n&lt;?php\r\n<span style=\"color:green\">/** Error reporting  **/</span>\r\nerror_reporting(E_ALL);\r\n<span style=\"color:green\">/** Include path  **/</span>\r\nset_include_path(get_include_path() . PATH_SEPARATOR . <span style=\"color:#a31515\">'../Classes/'</span>);\r\n?&gt;\r\n&lt;h1&gt;Quadratic Equation Solver&lt;/h1&gt;\r\n&lt;form action=<span style=\"color:#a31515\">&quot;Quadratic1.php&quot;</span> method=<span style=\"color:#a31515\">&quot;POST&quot;</span>&gt;\r\nEnter the coefficients <span style=\"color:blue\">for</span> the Ax&lt;sup&gt;2&lt;/sup&gt; + Bx + C = 0\r\n&lt;table border=<span style=\"color:#a31515\">&quot;0&quot;</span> cellpadding=<span style=\"color:#a31515\">&quot;0&quot;</span> cellspacing=<span style=\"color:#a31515\">&quot;0&quot;</span>&gt;\r\n &lt;tr&gt;&lt;td&gt;&lt;b&gt;A&amp;nbsp;&lt;/b&gt;&lt;/td&gt;\r\n  &lt;td&gt;&lt;input name=<span style=\"color:#a31515\">&quot;A&quot;</span> type=<span style=\"color:#a31515\">&quot;text&quot;</span> size=<span style=\"color:#a31515\">&quot;8&quot;</span> value=<span style=\"color:#a31515\">&quot;&lt;?php echo (isset($_POST['A'])) ? htmlentities($_POST['A']) : ''; ?&gt;&quot;</span>&gt;&lt;/td&gt;\r\n &lt;/tr&gt;\r\n &lt;tr&gt;&lt;td&gt;&lt;b&gt;B&amp;nbsp;&lt;/b&gt;&lt;/td&gt;\r\n  &lt;td&gt;&lt;input name=<span style=\"color:#a31515\">&quot;B&quot;</span> type=<span style=\"color:#a31515\">&quot;text&quot;</span> size=<span style=\"color:#a31515\">&quot;8&quot;</span> value=<span style=\"color:#a31515\">&quot;&lt;?php echo (isset($_POST['B'])) ? htmlentities($_POST['B']) : ''; ?&gt;&quot;</span>&gt;&lt;/td&gt;\r\n &lt;/tr&gt;\r\n &lt;tr&gt;&lt;td&gt;&lt;b&gt;C&amp;nbsp;&lt;/b&gt;&lt;/td&gt;\r\n  &lt;td&gt;&lt;input name=<span style=\"color:#a31515\">&quot;C&quot;</span> type=<span style=\"color:#a31515\">&quot;text&quot;</span> size=<span style=\"color:#a31515\">&quot;8&quot;</span> value=<span style=\"color:#a31515\">&quot;&lt;?php echo (isset($_POST['C'])) ? htmlentities($_POST['C']) : ''; ?&gt;&quot;</span>&gt;&lt;/td&gt;\r\n &lt;/tr&gt;\r\n&lt;/table&gt;\r\n&lt;input name=<span style=\"color:#a31515\">&quot;submit&quot;</span> type=<span style=\"color:#a31515\">&quot;submit&quot;</span> value=<span style=\"color:#a31515\">&quot;calculate&quot;</span>&gt;&lt;br /&gt;\r\nIf A=0, the equation is not quadratic.\r\n&lt;/form&gt;\r\n&lt;?php\r\n<span style=\"color:green\">/** If the user has submitted the form, then we need to execute a calculation **/</span>\r\n<span style=\"color:blue\">if</span> (<span style=\"color:blue\">isset</span>($_POST[<span style=\"color:#a31515\">'submit'</span>])) {\r\n <span style=\"color:blue\">if</span> ($_POST[<span style=\"color:#a31515\">'A'</span>] == 0) {\r\n  <span style=\"color:blue\">echo</span> <span style=\"color:#a31515\">'The equation is not quadratic'</span>;\r\n } <span style=\"color:blue\">else</span> {\r\n  <span style=\"color:green\">/** So we include PHPExcel to perform the calculations **/</span>\r\n  <span style=\"color:blue\">include</span> <span style=\"color:#a31515\">'PHPExcel/IOFactory.php'</span>;\r\n  <span style=\"color:green\">/** Load the quadratic equation solver worksheet into memory   **/</span>\r\n  $objPHPExcel = PHPExcel_IOFactory::load(<span style=\"color:#a31515\">'./Quadratic.xlsx'</span>);\r\n  <span style=\"color:green\">/** Set our A, B and C values   **/</span>\r\n  $objPHPExcel-&gt;getActiveSheet()-&gt;setCellValue(<span style=\"color:#a31515\">'A1'</span>, $_POST[<span style=\"color:#a31515\">'A'</span>]);\r\n  $objPHPExcel-&gt;getActiveSheet()-&gt;setCellValue(<span style=\"color:#a31515\">'B1'</span>, $_POST[<span style=\"color:#a31515\">'B'</span>]);\r\n  $objPHPExcel-&gt;getActiveSheet()-&gt;setCellValue(<span style=\"color:#a31515\">'C1'</span>, $_POST[<span style=\"color:#a31515\">'C'</span>]);\r\n\r\n  <span style=\"color:green\">/** Calculate and Display the results   **/</span>\r\n  <span style=\"color:blue\">echo</span> <span style=\"color:#a31515\">'&lt;hr /&gt;&lt;b&gt;Roots:&lt;/b&gt;&lt;br /&gt;'</span>;\r\n  $callStartTime = microtime(true);\r\n  <span style=\"color:blue\">echo</span> $objPHPExcel-&gt;getActiveSheet()-&gt;getCell(<span style=\"color:#a31515\">'B5'</span>)-&gt;getCalculatedValue().<span style=\"color:#a31515\">'&lt;br /&gt;'</span>;\r\n  <span style=\"color:blue\">echo</span> $objPHPExcel-&gt;getActiveSheet()-&gt;getCell(<span style=\"color:#a31515\">'B6'</span>)-&gt;getCalculatedValue().<span style=\"color:#a31515\">'&lt;br /&gt;'</span>;\r\n  $callEndTime = microtime(true);\r\n  $callTime = $callEndTime - $callStartTime;\r\n  <span style=\"color:blue\">echo</span> <span style=\"color:#a31515\">'&lt;hr /&gt;Call time for Quadratic Equation Solution was '</span>.sprintf(<span style=\"color:#a31515\">'%.4f'</span>,$callTime).<span style=\"color:#a31515\">' seconds&lt;br /&gt;&lt;hr /&gt;'</span>;\r\n  <span style=\"color:blue\">echo</span> <span style=\"color:#a31515\">' Peak memory usage: '</span>.(memory_get_peak_usage(true) / 1024 / 1024).<span style=\"color:#a31515\">' MB&lt;br /&gt;'</span>;\r\n }\r\n}\r\n?&gt;\r\n&lt;/body&gt;\r\n&lt;html&gt;</pre>\r\n</div>\r\n<p>In the workbook Quadratic.xlsx, A1, B1 and C1 are the cells for the three input values, while cells B5 and B6 contain the formulae for the end result of the calculation&nbsp;</p>\r\n<p><strong>Quadratic2.php</strong></p>\r\n<div style=\"color:black;background-color:white\">\r\n<pre>&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;title&gt;Quadratic Equation Solver&lt;/title&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n&lt;?php\r\n<span style=\"color:green\">/** Error reporting  **/</span>\r\nerror_reporting(E_ALL);\r\n<span style=\"color:green\">/** Include path  **/</span>\r\nset_include_path(get_include_path() . PATH_SEPARATOR . <span style=\"color:#a31515\">'../Classes/'</span>);\r\n?&gt;\r\n&lt;h1&gt;Quadratic Equation Solver&lt;/h1&gt;\r\n&lt;form action=<span style=\"color:#a31515\">&quot;Quadratic2.php&quot;</span> method=<span style=\"color:#a31515\">&quot;POST&quot;</span>&gt;\r\nEnter the coefficients <span style=\"color:blue\">for</span> the Ax&lt;sup&gt;2&lt;/sup&gt; + Bx + C = 0\r\n&lt;table border=<span style=\"color:#a31515\">&quot;0&quot;</span> cellpadding=<span style=\"color:#a31515\">&quot;0&quot;</span> cellspacing=<span style=\"color:#a31515\">&quot;0&quot;</span>&gt;\r\n &lt;tr&gt;&lt;td&gt;&lt;b&gt;A&amp;nbsp;&lt;/b&gt;&lt;/td&gt;\r\n  &lt;td&gt;&lt;input name=<span style=\"color:#a31515\">&quot;A&quot;</span> type=<span style=\"color:#a31515\">&quot;text&quot;</span> size=<span style=\"color:#a31515\">&quot;8&quot;</span> value=<span style=\"color:#a31515\">&quot;&lt;?php echo (isset($_POST['A'])) ? htmlentities($_POST['A']) : ''; ?&gt;&quot;</span>&gt;&lt;/td&gt;\r\n &lt;/tr&gt;\r\n &lt;tr&gt;&lt;td&gt;&lt;b&gt;B&amp;nbsp;&lt;/b&gt;&lt;/td&gt;\r\n  &lt;td&gt;&lt;input name=<span style=\"color:#a31515\">&quot;B&quot;</span> type=<span style=\"color:#a31515\">&quot;text&quot;</span> size=<span style=\"color:#a31515\">&quot;8&quot;</span> value=<span style=\"color:#a31515\">&quot;&lt;?php echo (isset($_POST['B'])) ? htmlentities($_POST['B']) : ''; ?&gt;&quot;</span>&gt;&lt;/td&gt;\r\n &lt;/tr&gt;\r\n &lt;tr&gt;&lt;td&gt;&lt;b&gt;C&amp;nbsp;&lt;/b&gt;&lt;/td&gt;\r\n  &lt;td&gt;&lt;input name=<span style=\"color:#a31515\">&quot;C&quot;</span> type=<span style=\"color:#a31515\">&quot;text&quot;</span> size=<span style=\"color:#a31515\">&quot;8&quot;</span> value=<span style=\"color:#a31515\">&quot;&lt;?php echo (isset($_POST['C'])) ? htmlentities($_POST['C']) : ''; ?&gt;&quot;</span>&gt;&lt;/td&gt;\r\n &lt;/tr&gt;\r\n&lt;/table&gt;\r\n&lt;input name=<span style=\"color:#a31515\">&quot;submit&quot;</span> type=<span style=\"color:#a31515\">&quot;submit&quot;</span> value=<span style=\"color:#a31515\">&quot;calculate&quot;</span>&gt;&lt;br /&gt;\r\nIf A=0, the equation is not quadratic.\r\n&lt;/form&gt;\r\n&lt;?php\r\n<span style=\"color:green\">/** If the user has submitted the form, then we need to execute a calculation **/</span>\r\n<span style=\"color:blue\">if</span> (<span style=\"color:blue\">isset</span>($_POST[<span style=\"color:#a31515\">'submit'</span>])) {\r\n <span style=\"color:blue\">if</span> ($_POST[<span style=\"color:#a31515\">'A'</span>] == 0) {\r\n  <span style=\"color:blue\">echo</span> <span style=\"color:#a31515\">'The equation is not quadratic'</span>;\r\n } <span style=\"color:blue\">else</span> {\r\n  <span style=\"color:green\">/** So we include PHPExcel to perform the calculations **/</span>\r\n  <span style=\"color:blue\">include</span> <span style=\"color:#a31515\">'PHPExcel/Calculation.php'</span>;\r\n  <span style=\"color:green\">/** Calculate and Display the results   **/</span>\r\n  <span style=\"color:blue\">echo</span> <span style=\"color:#a31515\">'&lt;hr /&gt;&lt;b&gt;Roots:&lt;/b&gt;&lt;br /&gt;'</span>;\r\n  $callStartTime = microtime(true);\r\n  $discriminantFormula = <span style=\"color:#a31515\">'=POWER('</span>.$_POST[<span style=\"color:#a31515\">'B'</span>].<span style=\"color:#a31515\">',2) - (4 * '</span>.$_POST[<span style=\"color:#a31515\">'A'</span>].<span style=\"color:#a31515\">' * '</span>.$_POST[<span style=\"color:#a31515\">'C'</span>].<span style=\"color:#a31515\">')'</span>;\r\n  $discriminant = PHPExcel_Calculation::getInstance()-&gt;calculateFormula($discriminantFormula);\r\n  $r1Formula = <span style=\"color:#a31515\">'=IMDIV(IMSUM(-'</span>.$_POST[<span style=\"color:#a31515\">'B'</span>].<span style=\"color:#a31515\">',IMSQRT('</span>.$discriminant.<span style=\"color:#a31515\">')),2 * '</span>.$_POST[<span style=\"color:#a31515\">'A'</span>].<span style=\"color:#a31515\">')'</span>;\r\n  $r2Formula = <span style=\"color:#a31515\">'=IF('</span>.$discriminant.<span style=\"color:#a31515\">'=0,&quot;Only one root&quot;,IMDIV(IMSUB(-'</span>.$_POST[<span style=\"color:#a31515\">'B'</span>].<span style=\"color:#a31515\">',IMSQRT('</span>.$discriminant.<span style=\"color:#a31515\">')),2 * '</span>.$_POST[<span style=\"color:#a31515\">'A'</span>].<span style=\"color:#a31515\">'))'</span>;\r\n  <span style=\"color:blue\">echo</span> PHPExcel_Calculation::getInstance()-&gt;calculateFormula($r1Formula).<span style=\"color:#a31515\">'&lt;br /&gt;'</span>;\r\n  <span style=\"color:blue\">echo</span> PHPExcel_Calculation::getInstance()-&gt;calculateFormula($r2Formula).<span style=\"color:#a31515\">'&lt;br /&gt;'</span>;\r\n  $callEndTime = microtime(true);\r\n  $callTime = $callEndTime - $callStartTime;\r\n  <span style=\"color:blue\">echo</span> <span style=\"color:#a31515\">'&lt;hr /&gt;Call time for Quadratic Equation Solution was '</span>.sprintf(<span style=\"color:#a31515\">'%.4f'</span>,$callTime).<span style=\"color:#a31515\">' seconds&lt;br /&gt;&lt;hr /&gt;'</span>;\r\n  <span style=\"color:blue\">echo</span> <span style=\"color:#a31515\">' Peak memory usage: '</span>.(memory_get_peak_usage(true) / 1024 / 1024).<span style=\"color:#a31515\">' MB&lt;br /&gt;'</span>;\r\n }\r\n}\r\n?&gt;\r\n&lt;/body&gt;\r\n&lt;html&gt;\r\n</pre>\r\n</div>\r\n<p>In this second exanmple, we build the Excel formulae as strings, and feed them directly to the calculation engine without needing to load any workbook: it's faster and uses less memory, but the inclusion of the formulae directly within the PHP make the code more complex</p>\r\n<p>These scripts were written simply as proofs of concept, and neither example validates the input values in any way, though they should in any production-quality system</p>",
    "PostedDate": "2010-09-17T06:39:09.033-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "495315",
    "ThreadId": "227568",
    "Html": "<p>Thanks for the help, I managed to get the first option working great.</p>\r\n<p>Just one more thing: which file would I have to modify to alter the number formatting?</p>\r\n<p>Currently the results are output like this: <strong>1000</strong> or <strong>1000.5</strong> or <strong>1000.508929829</strong> (second output cell only)</p>\r\n<p>I'd like them to be presented like this: <strong>1.000,00</strong> or <strong>1.000,50</strong></p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2010-09-17T22:35:15.523-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "495358",
    "ThreadId": "227568",
    "Html": "<p>If you're using the first option, ie. working from your workbook file, then set cell formatting options in your worksheet and use:</p>\r\n<div style=\"color:black;background-color:white\">\r\n<pre>$cellData = PHPExcel_Style_NumberFormat::toFormattedString(\r\n        $objPHPExcel-&gt;getActiveSheet()-&gt;getCell(<span style=\"color:#a31515\">'B5'</span>)-&gt;getCalculatedValue(),\r\n        $objPHPExcel-&gt;getActiveSheet()-&gt;getCellXfByIndex( $objPHPExcel-&gt;getActiveSheet()-&gt;getCell(<span style=\"color:#a31515\">'B5'</span>)-&gt;getXfIndex() )-&gt;getNumberFormat()-&gt;getFormatCode()\r\n       );\r\n</pre>\r\n</div>\r\n<p>to retrieve the calculated value of the cell (B5 in this example) as a string formatted using the formatting mask defined in the Excel worksheet for that cell</p>\r\n<p>Alternatively, use standard PHP functions (such as numberformat()) to render the value as you want it displayed</p>",
    "PostedDate": "2010-09-18T03:46:21.593-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]