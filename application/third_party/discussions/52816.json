[
  {
    "Id": "177685",
    "ThreadId": "52816",
    "Html": "My understanding is that PHPExcel uses PEAR's Spreadsheet_Excel_Writer for rendering Excel files, but obviously makes major enhancements (ie:  filters, stylistics, etc).  While I love PHPExcel, I need to automate reports that include 60,000+ rows, and this is a huge resource hog.  Even with 20,000 rows, it takes quite a lot of time to write an xlsx file with 11 columns autofiltered (and I have modified the .ini maxmimum memory usage/timeout).  Is there anyway to tone down the time/resources it takes to create a file this large?<div><br></div><div>Additionally, should I assume that the Spreadsheet_Excel_Writer from PEAR will take the same amount of time?</div>",
    "PostedDate": "2009-04-09T10:10:50.233-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "177815",
    "ThreadId": "52816",
    "Html": "We hope to improve performance for next release 1.6.7. I'm not sure how much styling you are using, but this in known to cause high memory usage in PHPExcel. You can check 23sharedstyles.php included in the Tests folder as a possible solution for reducing memory usage if you are using cell styling.<br>\r\n<br>\r\nOnly PHPExcel_Writer_Excel5 is based on PEAR Spreadsheet_Excel_Writer, PHPExcel_Writer_Excel2007 is not. The PEAR Spreadsheet_Excel_Writer writer is usually several times faster than the writers in PHPExcel. This is because it features shared styles. Unfortunately, extra considerations are needed when one wants to introduce shared styles in a library like PHPExcel featuring both readers and writers. This is what is currently being resolved.<br>\r\n<br>\r\n",
    "PostedDate": "2009-04-09T17:48:47.373-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]