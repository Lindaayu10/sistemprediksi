[
  {
    "Id": "456244",
    "ThreadId": "216249",
    "Html": "<p>Hello,</p>\r\n<p>I've had great success so far with PHPExcel 1.7.2, but I ran into an issue. I can export a 2 page Excel or Excel2007 that has data on one page, and an image on the other with no issues. But when I change the output to PDF, I get an empty file. Here is my code:</p>\r\n<p>&nbsp;</p>\r\n<p>\r\n<div style=\"color:black;background-color:white\">\r\n<pre><span style=\"color:blue\">require_once</span>(drupal_get_path(<span style=\"color:#a31515\">'module'</span>, <span style=\"color:#a31515\">'excel_export'</span>) .<span style=\"color:#a31515\">'/classes/PHPExcel.php'</span>);\r\n<span style=\"color:blue\">require_once</span>(drupal_get_path(<span style=\"color:#a31515\">'module'</span>, <span style=\"color:#a31515\">'excel_export'</span>) .<span style=\"color:#a31515\">'/classes/PHPExcel/IOFactory.php'</span>);\r\n\r\n<span style=\"color:blue\">class</span> ExcelExport {\r\n\r\n  <span style=\"color:green\">//Class variables</span>\r\n  <span style=\"color:blue\">var</span> $excel;\r\n  <span style=\"color:blue\">var</span> $columns;\r\n  <span style=\"color:blue\">var</span> $data;\r\n  <span style=\"color:blue\">var</span> $title;\r\n  <span style=\"color:blue\">var</span> $export_type;\r\n  <span style=\"color:blue\">var</span> $active_sheet;\r\n  <span style=\"color:blue\">var</span> $writer_type;\r\n  <span style=\"color:blue\">var</span> $writer;\r\n\r\n  <span style=\"color:green\">/**\r\n  * put your comment there...\r\n  *\r\n  * @param mixed $key\r\n  * @return ExcelExport\r\n  */</span>\r\n  <span style=\"color:blue\">function</span> __construct($export_type = <span style=\"color:#a31515\">''</span>, $filename = <span style=\"color:#a31515\">''</span>) {\r\n    $this-&gt;excel = <span style=\"color:blue\">new</span> PHPExcel();\r\n    <span style=\"color:blue\">if</span>($export_type == <span style=\"color:#a31515\">''</span>) {\r\n      $this-&gt;export_type = variable_get(<span style=\"color:#a31515\">'default_export_type'</span>, <span style=\"color:#a31515\">'xls'</span>);\r\n    } <span style=\"color:blue\">else</span> {\r\n      $this-&gt;export_type = $export_type;\r\n    }\r\n    <span style=\"color:blue\">if</span>($title == <span style=\"color:#a31515\">''</span>) {\r\n      $this-&gt;title = <span style=\"color:#a31515\">'Report'</span>;\r\n    } <span style=\"color:blue\">else</span> {\r\n      $this-&gt;title = $title;\r\n    }\r\n    <span style=\"color:blue\">if</span>($this-&gt;export_type == <span style=\"color:#a31515\">'xlsx'</span>) {\r\n      header(<span style=\"color:#a31515\">'Content-Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'</span>);\r\n      header(<span style=\"color:#a31515\">'Content-Disposition: attachment;filename=&quot;'</span>.$filename.<span style=\"color:#a31515\">'.xlsx&quot;'</span>);\r\n      header(<span style=\"color:#a31515\">'Cache-Control: max-age=0'</span>);\r\n      $this-&gt;writer_type = <span style=\"color:#a31515\">'Excel2007'</span>;\r\n    } <span style=\"color:blue\">else</span> <span style=\"color:blue\">if</span> ($this-&gt;export_type == <span style=\"color:#a31515\">'pdf'</span>) {\r\n      header(<span style=\"color:#a31515\">'Content-Type: application/pdf'</span>);\r\n      header(<span style=\"color:#a31515\">'Content-Disposition: attachment;filename=&quot;'</span>.$filename.<span style=\"color:#a31515\">'.pdf&quot;'</span>);\r\n      header(<span style=\"color:#a31515\">'Cache-Control: max-age=0'</span>);\r\n      $this-&gt;writer_type = <span style=\"color:#a31515\">'PDF'</span>;\r\n    } <span style=\"color:blue\">else</span> {\r\n      header(<span style=\"color:#a31515\">'Content-Type: application/vnd.ms-excel'</span>);\r\n      header(<span style=\"color:#a31515\">'Content-Disposition: attachment;filename=&quot;'</span>.$filename.<span style=\"color:#a31515\">'.xls&quot;'</span>);\r\n      header(<span style=\"color:#a31515\">'Cache-Control: max-age=0'</span>);\r\n      $this-&gt;writer_type = <span style=\"color:#a31515\">'Excel5'</span>;\r\n    }\r\n    $this-&gt;writer = PHPExcel_IOFactory::createWriter($this-&gt;excel, $this-&gt;writer_type);\r\n    $this-&gt;active_sheet = $this-&gt;excel-&gt;setActiveSheetIndex(0);\r\n  }\r\n\r\n  <span style=\"color:green\">/**\r\n  * This adds a worksheet that is of tabular data.\r\n  *\r\n  * @param mixed $columns\r\n  * @param mixed $data\r\n  * @param mixed $title\r\n  * @param mixed $styled\r\n  * @param mixed $sheet\r\n  */</span>\r\n  <span style=\"color:blue\">function</span> add_table($columns = NULL, $data = NULL, $title = <span style=\"color:#a31515\">''</span>, $styled = true, $sheet = 0) {\r\n    <span style=\"color:green\">//Create a new sheet</span>\r\n    $this-&gt;create_new_sheet($sheet, $title);\r\n\r\n    $col = 0;\r\n    $row = 1;\r\n    <span style=\"color:green\">//This adds a title row to the worksheet</span>\r\n    <span style=\"color:blue\">if</span>($styled) {\r\n      $letters = range(<span style=\"color:#a31515\">'A'</span>, <span style=\"color:#a31515\">'Z'</span>);\r\n      $this-&gt;active_sheet-&gt;setCellValueByColumnAndRow($col, $row, $title);\r\n      <span style=\"color:green\">//The 'cells_to_merge' variable looks something like 'A1:J1' as you would see in Excel</span>\r\n      $cells_to_merge = $letters[0].$row.<span style=\"color:#a31515\">':'</span>.$letters[count($columns)-1].$row;\r\n      $this-&gt;active_sheet-&gt;mergeCells($cells_to_merge);\r\n      $style_array = <span style=\"color:blue\">array</span>(\r\n        <span style=\"color:#a31515\">'font'</span> =&gt; <span style=\"color:blue\">array</span>(<span style=\"color:#a31515\">'bold'</span> =&gt; true),\r\n        <span style=\"color:#a31515\">'alignment'</span> =&gt; <span style=\"color:blue\">array</span>(<span style=\"color:#a31515\">'horizontal'</span> =&gt; PHPExcel_Style_Alignment::HORIZONTAL_CENTER)\r\n      );\r\n      $this-&gt;active_sheet-&gt;getStyleByColumnAndRow($col, $row)-&gt;applyFromArray($style_array);\r\n      $row++;\r\n    }\r\n\r\n    $col = 0;\r\n    <span style=\"color:green\">//This adds the header</span>\r\n    <span style=\"color:blue\">foreach</span>($columns <span style=\"color:blue\">as</span> $column) {\r\n      <span style=\"color:blue\">if</span>($styled) {\r\n        $this-&gt;active_sheet-&gt;setCellValueByColumnAndRow($col, $row, $column);\r\n        $style_array = <span style=\"color:blue\">array</span>(\r\n          <span style=\"color:#a31515\">'font'</span> =&gt; <span style=\"color:blue\">array</span>(<span style=\"color:#a31515\">'bold'</span> =&gt; true),\r\n          <span style=\"color:#a31515\">'alignment'</span> =&gt; <span style=\"color:blue\">array</span>(<span style=\"color:#a31515\">'horizontal'</span> =&gt; PHPExcel_Style_Alignment::HORIZONTAL_CENTER)\r\n        );\r\n        $this-&gt;active_sheet-&gt;getStyleByColumnAndRow($col, $row)-&gt;applyFromArray($style_array);\r\n        $this-&gt;active_sheet-&gt;getColumnDimensionByColumn($col)-&gt;setAutoSize(true);\r\n      } <span style=\"color:blue\">else</span> {\r\n        $this-&gt;active_sheet-&gt;setCellValueByColumnAndRow($col, $row, $column);\r\n      }\r\n      $col++;\r\n    }\r\n\r\n    $col = 0;\r\n    $row++;\r\n    <span style=\"color:green\">//This adds the data</span>\r\n    <span style=\"color:blue\">foreach</span>($data <span style=\"color:blue\">as</span> $rows) {\r\n      <span style=\"color:blue\">foreach</span>($rows <span style=\"color:blue\">as</span> $column) {\r\n        $this-&gt;active_sheet-&gt;setCellValueByColumnAndRow($col, $row, $column);\r\n        $col++;\r\n      }\r\n      $col = 0;\r\n      $row++;\r\n    }\r\n  }\r\n\r\n  <span style=\"color:green\">/**\r\n  * This adds a worksheet that contains an image\r\n  *\r\n  * @param mixed $title\r\n  * @param mixed $image_name\r\n  * @param mixed $image_description\r\n  * @param mixed $image_location\r\n  * @param mixed $image_coordinates\r\n  * @param mixed $sheet\r\n  */</span>\r\n  <span style=\"color:blue\">function</span> add_image($title = <span style=\"color:#a31515\">''</span>, $image_name = <span style=\"color:#a31515\">''</span>, $image_description = <span style=\"color:#a31515\">''</span>, $image_location = <span style=\"color:#a31515\">''</span>, $image_coordinates = <span style=\"color:#a31515\">'A1'</span>, $sheet = 0) {\r\n    <span style=\"color:green\">//Create a new sheet</span>\r\n    $this-&gt;create_new_sheet($sheet, $title);\r\n\r\n    $image = <span style=\"color:blue\">new</span> PHPExcel_Worksheet_Drawing();\r\n    $image-&gt;setName($image_name);\r\n    $image-&gt;setDescription($image_description);\r\n    $image-&gt;setPath($image_location);\r\n    $image-&gt;setCoordinates($image_coordinates);\r\n    $image-&gt;setWorksheet($this-&gt;active_sheet);\r\n  }\r\n\r\n  <span style=\"color:green\">/**\r\n  * This function starts the export that pushes the data to the user as a download\r\n  *\r\n  */</span>\r\n  <span style=\"color:blue\">function</span> download() {\r\n    $this-&gt;active_sheet = $this-&gt;excel-&gt;setActiveSheetIndex(0);\r\n    <span style=\"color:blue\">if</span>($this-&gt;export_type == <span style=\"color:#a31515\">'pdf'</span>) {\r\n      $this-&gt;active_sheet-&gt;getPageSetup()-&gt;setOrientation(PHPExcel_Worksheet_PageSetup::ORIENTATION_LANDSCAPE);\r\n      $this-&gt;active_sheet-&gt;getPageSetup()-&gt;setFitToWidth(1);\r\n      $this-&gt;active_sheet-&gt;getPageSetup()-&gt;setFitToHeight(1);\r\n      $this-&gt;writer-&gt;writeAllSheets();\r\n    }\r\n    $this-&gt;writer-&gt;save(<span style=\"color:#a31515\">'php://output'</span>);\r\n    <span style=\"color:blue\">exit</span>;\r\n  }\r\n\r\n  <span style=\"color:green\">/**\r\n  * By default, a workbook has a single worksheet, to which we can append more worksheets.\r\n  * To dynamically add worksheets, we need to keep track of how many worksheets we have, and\r\n  * make sure that we make the lastest addition, the active worksheet.\r\n  */</span>\r\n  <span style=\"color:blue\">function</span> create_new_sheet($sheet, $title) {\r\n    <span style=\"color:blue\">if</span>($this-&gt;excel-&gt;getSheetCount()-1 &lt; $sheet) {\r\n      $this-&gt;excel-&gt;createSheet($sheet);\r\n    }\r\n    $this-&gt;active_sheet = $this-&gt;excel-&gt;setActiveSheetIndex($sheet);\r\n    $this-&gt;active_sheet-&gt;setTitle($title);\r\n  }\r\n\r\n  <span style=\"color:green\">/**\r\n  * Default destruct function\r\n  *\r\n  */</span>\r\n  <span style=\"color:blue\">function</span> __destruct() {\r\n\r\n  }\r\n}\r\n</pre>\r\n</div>\r\n</p>\r\n<p>To run this code I used:</p>\r\n<p>\r\n<div style=\"color:black;background-color:white\">\r\n<pre>$excel = <span style=\"color:blue\">new</span> ExcelExport(<span style=\"color:#a31515\">'pdf'</span>, <span style=\"color:#a31515\">'Task Type Report'</span>);\r\n  $excel-&gt;add_table($header, $rows, <span style=\"color:#a31515\">'Task Type Report Data'</span>, true, 0);\r\n  <span style=\"color:blue\">if</span>($chart_image_name != <span style=\"color:#a31515\">''</span>) {\r\n    $excel-&gt;add_image(<span style=\"color:#a31515\">'Task Type Report Graph'</span>, <span style=\"color:#a31515\">'Graph'</span>, <span style=\"color:#a31515\">'Task Type Report'</span>, $image_location, <span style=\"color:#a31515\">'A1'</span>, 1);\r\n  }\r\n  $excel-&gt;download();\r\n</pre>\r\n<pre><br></pre>\r\n<pre>Please advise.</pre>\r\n</div>\r\n</p>",
    "PostedDate": "2010-06-16T09:04:08.403-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "458959",
    "ThreadId": "216249",
    "Html": "<p>- Have you tried storing the PDF on disk somewhere?</p>\r\n<p>- 1.7.3c fixes a lot, can you try with the latest version?</p>",
    "PostedDate": "2010-06-23T07:02:42.44-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "458969",
    "ThreadId": "216249",
    "Html": "<blockquote style=\"border:solid .1em #ccc;font-style:italic;margin:.25em 1em 0 1em;padding:0 .25em 0 .25em\"><strong>maartenba wrote:</strong><br>\r\n<p>- Have you tried storing the PDF on disk somewhere?</p>\r\n<p>- 1.7.3c fixes a lot, can you try with the latest version?</p>\r\n</blockquote>\r\n<p>Hello Maarten,</p>\r\n<p>I am using the snapshot I downloaded from Friday (which I assume is 1.7.3c, since the version number is listed as &quot;@version &nbsp; &nbsp;##VERSION##, ##DATE##&quot;), and the PDF output still doesn't work. When I receive the download it is less than 200 bytes in size, and Adobe complains that it is corrupt.</p>\r\n<p>I haven't tried storing the file on the server&nbsp;file system&nbsp;since that functionality is not appropriate for the system we are building. Would saving to disk effect whether the export works or not?</p>\r\n<p>&nbsp;</p>\r\n<p>Here is my updated code:</p>\r\n<p>\r\n<div style=\"color:black;background-color:white\">\r\n<pre><span style=\"color:blue\">require_once</span>(drupal_get_path(<span style=\"color:#a31515\">'module'</span>, <span style=\"color:#a31515\">'excel_export'</span>) .<span style=\"color:#a31515\">'/classes/PHPExcel.php'</span>);\r\n<span style=\"color:blue\">require_once</span>(drupal_get_path(<span style=\"color:#a31515\">'module'</span>, <span style=\"color:#a31515\">'excel_export'</span>) .<span style=\"color:#a31515\">'/classes/PHPExcel/IOFactory.php'</span>);\r\n\r\n<span style=\"color:blue\">class</span> ExcelExport {\r\n\r\n  <span style=\"color:green\">//Class variables</span>\r\n  <span style=\"color:blue\">var</span> $excel;\r\n  <span style=\"color:blue\">var</span> $columns;\r\n  <span style=\"color:blue\">var</span> $data;\r\n  <span style=\"color:blue\">var</span> $title;\r\n  <span style=\"color:blue\">var</span> $export_type;\r\n  <span style=\"color:blue\">var</span> $active_sheet;\r\n  <span style=\"color:blue\">var</span> $writer_type;\r\n  <span style=\"color:blue\">var</span> $writer;\r\n  <span style=\"color:blue\">var</span> $default_row_height;\r\n\r\n  <span style=\"color:green\">/**\r\n  * put your comment there...\r\n  *\r\n  * @param mixed $key\r\n  * @return ExcelExport\r\n  */</span>\r\n  <span style=\"color:blue\">function</span> __construct($export_type = <span style=\"color:#a31515\">''</span>, $filename = <span style=\"color:#a31515\">''</span>) {\r\n    $this-&gt;excel = <span style=\"color:blue\">new</span> PHPExcel();\r\n    <span style=\"color:blue\">if</span>($export_type == <span style=\"color:#a31515\">''</span>) {\r\n      $this-&gt;export_type = variable_get(<span style=\"color:#a31515\">'default_export_type'</span>, <span style=\"color:#a31515\">'xls'</span>);\r\n    } <span style=\"color:blue\">else</span> {\r\n      $this-&gt;export_type = $export_type;\r\n    }\r\n    <span style=\"color:blue\">if</span>($title == <span style=\"color:#a31515\">''</span>) {\r\n      $this-&gt;title = <span style=\"color:#a31515\">'Report'</span>;\r\n    } <span style=\"color:blue\">else</span> {\r\n      $this-&gt;title = $title;\r\n    }\r\n    $this-&gt;default_row_height = 15;\r\n    <span style=\"color:blue\">if</span>($this-&gt;export_type == <span style=\"color:#a31515\">'xlsx'</span>) {\r\n      header(<span style=\"color:#a31515\">'Content-Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'</span>);\r\n      header(<span style=\"color:#a31515\">'Content-Disposition: attachment;filename=&quot;'</span>.$filename.<span style=\"color:#a31515\">'.xlsx&quot;'</span>);\r\n      header(<span style=\"color:#a31515\">'Cache-Control: max-age=0'</span>);\r\n      $this-&gt;writer_type = <span style=\"color:#a31515\">'Excel2007'</span>;\r\n    } <span style=\"color:blue\">else</span> <span style=\"color:blue\">if</span> ($this-&gt;export_type == <span style=\"color:#a31515\">'pdf'</span>) {\r\n      header(<span style=\"color:#a31515\">'Content-Type: application/pdf'</span>);\r\n      header(<span style=\"color:#a31515\">'Content-Disposition: attachment;filename=&quot;'</span>.$filename.<span style=\"color:#a31515\">'.pdf&quot;'</span>);\r\n      header(<span style=\"color:#a31515\">'Cache-Control: max-age=0'</span>);\r\n      $this-&gt;writer_type = <span style=\"color:#a31515\">'PDF'</span>;\r\n    } <span style=\"color:blue\">else</span> {\r\n      header(<span style=\"color:#a31515\">'Content-Type: application/vnd.ms-excel'</span>);\r\n      header(<span style=\"color:#a31515\">'Content-Disposition: attachment;filename=&quot;'</span>.$filename.<span style=\"color:#a31515\">'.xls&quot;'</span>);\r\n      header(<span style=\"color:#a31515\">'Cache-Control: max-age=0'</span>);\r\n      $this-&gt;writer_type = <span style=\"color:#a31515\">'Excel5'</span>;\r\n    }\r\n    $this-&gt;writer = PHPExcel_IOFactory::createWriter($this-&gt;excel, $this-&gt;writer_type);\r\n    $this-&gt;active_sheet = $this-&gt;excel-&gt;setActiveSheetIndex(0);\r\n    $this-&gt;active_sheet-&gt;getDefaultRowDimension()-&gt;setRowHeight($this-&gt;default_row_height);\r\n  }\r\n\r\n  <span style=\"color:green\">/**\r\n  * This adds a worksheet that is of tabular data.\r\n  *\r\n  * @param mixed $columns\r\n  * @param mixed $data\r\n  * @param mixed $title\r\n  * @param mixed $styled\r\n  * @param mixed $sheet\r\n  */</span>\r\n  <span style=\"color:blue\">function</span> add_table($columns = NULL, $data = NULL, $title = <span style=\"color:#a31515\">''</span>, $styled = true, $sheet = 0) {\r\n    <span style=\"color:green\">//Create a new sheet</span>\r\n    $this-&gt;create_new_sheet($sheet, $title);\r\n\r\n    $col = 0;\r\n    $row = 1;\r\n    <span style=\"color:green\">//This adds a title row to the worksheet</span>\r\n    <span style=\"color:blue\">if</span>($styled) {\r\n      $letters = range(<span style=\"color:#a31515\">'A'</span>, <span style=\"color:#a31515\">'Z'</span>);\r\n      $this-&gt;active_sheet-&gt;setCellValueByColumnAndRow($col, $row, $title);\r\n      <span style=\"color:green\">//The 'cells_to_merge' variable looks something like 'A1:J1' as you would see in Excel</span>\r\n      $cells_to_merge = $letters[0].$row.<span style=\"color:#a31515\">':'</span>.$letters[count($columns)-1].$row;\r\n      $this-&gt;active_sheet-&gt;mergeCells($cells_to_merge);\r\n      $style_array = <span style=\"color:blue\">array</span>(\r\n        <span style=\"color:#a31515\">'font'</span> =&gt; <span style=\"color:blue\">array</span>(<span style=\"color:#a31515\">'bold'</span> =&gt; true),\r\n        <span style=\"color:#a31515\">'alignment'</span> =&gt; <span style=\"color:blue\">array</span>(<span style=\"color:#a31515\">'horizontal'</span> =&gt; PHPExcel_Style_Alignment::HORIZONTAL_CENTER)\r\n      );\r\n      $this-&gt;active_sheet-&gt;getStyleByColumnAndRow($col, $row)-&gt;applyFromArray($style_array);\r\n      $row++;\r\n    }\r\n\r\n    $col = 0;\r\n    <span style=\"color:green\">//This adds the header</span>\r\n    <span style=\"color:blue\">foreach</span>($columns <span style=\"color:blue\">as</span> $column) {\r\n      <span style=\"color:blue\">if</span>($styled) {\r\n        $this-&gt;active_sheet-&gt;setCellValueByColumnAndRow($col, $row, $column);\r\n        $style_array = <span style=\"color:blue\">array</span>(\r\n          <span style=\"color:#a31515\">'font'</span> =&gt; <span style=\"color:blue\">array</span>(<span style=\"color:#a31515\">'bold'</span> =&gt; true),\r\n          <span style=\"color:#a31515\">'alignment'</span> =&gt; <span style=\"color:blue\">array</span>(<span style=\"color:#a31515\">'horizontal'</span> =&gt; PHPExcel_Style_Alignment::HORIZONTAL_CENTER)\r\n        );\r\n        $this-&gt;active_sheet-&gt;getStyleByColumnAndRow($col, $row)-&gt;applyFromArray($style_array);\r\n        $this-&gt;active_sheet-&gt;getColumnDimensionByColumn($col)-&gt;setAutoSize(true);\r\n      } <span style=\"color:blue\">else</span> {\r\n        $this-&gt;active_sheet-&gt;setCellValueByColumnAndRow($col, $row, $column);\r\n      }\r\n      $col++;\r\n    }\r\n\r\n    $col = 0;\r\n    $row++;\r\n    <span style=\"color:green\">//This adds the data</span>\r\n    <span style=\"color:blue\">foreach</span>($data <span style=\"color:blue\">as</span> $rows) {\r\n      <span style=\"color:blue\">foreach</span>($rows <span style=\"color:blue\">as</span> $column) {\r\n        $this-&gt;active_sheet-&gt;setCellValueByColumnAndRow($col, $row, $column);\r\n        $col++;\r\n      }\r\n      $col = 0;\r\n      $row++;\r\n    }\r\n  }\r\n\r\n  <span style=\"color:green\">/**\r\n  * This adds a worksheet that contains an image\r\n  *\r\n  * @param mixed $title\r\n  * @param mixed $image_name\r\n  * @param mixed $image_description\r\n  * @param mixed $image_location\r\n  * @param mixed $image_coordinates\r\n  * @param mixed $sheet\r\n  */</span>\r\n  <span style=\"color:blue\">function</span> add_image($title = <span style=\"color:#a31515\">''</span>, $image_name = <span style=\"color:#a31515\">''</span>, $image_description = <span style=\"color:#a31515\">''</span>, $image_location = <span style=\"color:#a31515\">''</span>, $image_coordinates = <span style=\"color:#a31515\">'A1'</span>, $sheet = 0) {\r\n    <span style=\"color:green\">//Create a new sheet</span>\r\n    $this-&gt;create_new_sheet($sheet, $title);\r\n\r\n    $image = <span style=\"color:blue\">new</span> PHPExcel_Worksheet_Drawing();\r\n    $image-&gt;setName($image_name);\r\n    $image-&gt;setDescription($image_description);\r\n    $image-&gt;setPath($image_location);\r\n    $image-&gt;setCoordinates($image_coordinates);\r\n    $image-&gt;setWorksheet($this-&gt;active_sheet);\r\n  }\r\n\r\n  <span style=\"color:green\">/**\r\n  * put your comment there...\r\n  *\r\n  * @param mixed $image_name\r\n  * @param mixed $image_description\r\n  * @param mixed $image_location\r\n  * @param mixed $image_coordinates\r\n  * @param mixed $columns\r\n  * @param mixed $data\r\n  * @param mixed $title\r\n  * @param mixed $styled\r\n  * @param mixed $sheet\r\n  */</span>\r\n  <span style=\"color:blue\">function</span> add_table_and_image($image_name = <span style=\"color:#a31515\">''</span>, $image_description = <span style=\"color:#a31515\">''</span>, $image_location = <span style=\"color:#a31515\">''</span>, $image_coordinates = <span style=\"color:#a31515\">'A1'</span>, $columns = NULL, $data = NULL, $title = <span style=\"color:#a31515\">''</span>, $styled = true, $sheet = 0) {\r\n    <span style=\"color:green\">//Create a new sheet</span>\r\n    $this-&gt;create_new_sheet($sheet, $title);\r\n\r\n    <span style=\"color:blue\">if</span>(file_exists($image_location)) {\r\n      $image = <span style=\"color:blue\">new</span> PHPExcel_Worksheet_Drawing();\r\n      $image-&gt;setName($image_name);\r\n      $image-&gt;setDescription($image_description);\r\n      $image-&gt;setPath($image_location);\r\n      $image-&gt;setCoordinates($image_coordinates);\r\n      $image-&gt;setWorksheet($this-&gt;active_sheet);\r\n\r\n      <span style=\"color:blue\">list</span>($width, $height, $type, $attr) = getimagesize($image_location);\r\n\r\n      <span style=\"color:green\">//Convert the height in pixels to points, so that you can calculate</span>\r\n      <span style=\"color:green\">//how many rows down the data should start on.</span>\r\n      $row = ((($height * 72) / 96) / $this-&gt;default_row_height) + 2;\r\n    } <span style=\"color:blue\">else</span> {\r\n      $row = 1;\r\n    }\r\n    $col = 0;\r\n\r\n    <span style=\"color:green\">//This adds a title row to the worksheet</span>\r\n    <span style=\"color:blue\">if</span>($styled) {\r\n      $letters = range(<span style=\"color:#a31515\">'A'</span>, <span style=\"color:#a31515\">'Z'</span>);\r\n      $this-&gt;active_sheet-&gt;setCellValueByColumnAndRow($col, $row, $title);\r\n      <span style=\"color:green\">//The 'cells_to_merge' variable looks something like 'A1:J1' as you would see in Excel</span>\r\n      $cells_to_merge = $letters[0].$row.<span style=\"color:#a31515\">':'</span>.$letters[count($columns)-1].$row;\r\n      $this-&gt;active_sheet-&gt;mergeCells($cells_to_merge);\r\n      $style_array = <span style=\"color:blue\">array</span>(\r\n        <span style=\"color:#a31515\">'font'</span> =&gt; <span style=\"color:blue\">array</span>(<span style=\"color:#a31515\">'bold'</span> =&gt; true),\r\n        <span style=\"color:#a31515\">'alignment'</span> =&gt; <span style=\"color:blue\">array</span>(<span style=\"color:#a31515\">'horizontal'</span> =&gt; PHPExcel_Style_Alignment::HORIZONTAL_CENTER)\r\n      );\r\n      $this-&gt;active_sheet-&gt;getStyleByColumnAndRow($col, $row)-&gt;applyFromArray($style_array);\r\n      $row++;\r\n    }\r\n\r\n    $col = 0;\r\n    <span style=\"color:green\">//This adds the header</span>\r\n    <span style=\"color:blue\">foreach</span>($columns <span style=\"color:blue\">as</span> $column) {\r\n      $this-&gt;active_sheet-&gt;setCellValueByColumnAndRow($col, $row, $column);\r\n      <span style=\"color:blue\">if</span>($styled) {\r\n        $style_array = <span style=\"color:blue\">array</span>(\r\n          <span style=\"color:#a31515\">'font'</span> =&gt; <span style=\"color:blue\">array</span>(<span style=\"color:#a31515\">'bold'</span> =&gt; true),\r\n          <span style=\"color:#a31515\">'alignment'</span> =&gt; <span style=\"color:blue\">array</span>(<span style=\"color:#a31515\">'horizontal'</span> =&gt; PHPExcel_Style_Alignment::HORIZONTAL_CENTER),\r\n          <span style=\"color:#a31515\">'borders'</span> =&gt; <span style=\"color:blue\">array</span>(<span style=\"color:#a31515\">'outline'</span> =&gt; <span style=\"color:blue\">array</span>(<span style=\"color:#a31515\">'style'</span> =&gt; PHPExcel_Style_Border::BORDER_THIN,))\r\n        );\r\n        $this-&gt;active_sheet-&gt;getStyleByColumnAndRow($col, $row)-&gt;applyFromArray($style_array);\r\n        $this-&gt;active_sheet-&gt;getColumnDimensionByColumn($col)-&gt;setAutoSize(true);\r\n      }\r\n      $col++;\r\n    }\r\n\r\n    $col = 0;\r\n    $row++;\r\n    <span style=\"color:green\">//This adds the data</span>\r\n    <span style=\"color:blue\">foreach</span>($data <span style=\"color:blue\">as</span> $rows) {\r\n      <span style=\"color:blue\">foreach</span>($rows <span style=\"color:blue\">as</span> $column) {\r\n        $this-&gt;active_sheet-&gt;setCellValueByColumnAndRow($col, $row, $column);\r\n        <span style=\"color:blue\">if</span>($styled) {\r\n          $style_array = <span style=\"color:blue\">array</span>(\r\n            <span style=\"color:#a31515\">'alignment'</span> =&gt; <span style=\"color:blue\">array</span>(<span style=\"color:#a31515\">'horizontal'</span> =&gt; PHPExcel_Style_Alignment::HORIZONTAL_LEFT),\r\n            <span style=\"color:#a31515\">'borders'</span> =&gt; <span style=\"color:blue\">array</span>(<span style=\"color:#a31515\">'outline'</span> =&gt; <span style=\"color:blue\">array</span>(<span style=\"color:#a31515\">'style'</span> =&gt; PHPExcel_Style_Border::BORDER_THIN,))\r\n          );\r\n          $this-&gt;active_sheet-&gt;getStyleByColumnAndRow($col, $row)-&gt;applyFromArray($style_array);\r\n          $this-&gt;active_sheet-&gt;getRowDimension($row)-&gt;setRowHeight($this-&gt;default_row_height);\r\n          $this-&gt;active_sheet-&gt;getStyleByColumnAndRow($col, $row)-&gt;getAlignment()-&gt;setWrapText(true);\r\n        }\r\n        $col++;\r\n      }\r\n      $col = 0;\r\n      $row++;\r\n    }\r\n  }\r\n\r\n  <span style=\"color:green\">/**\r\n  * This function starts the export that pushes the data to the user as a download\r\n  *\r\n  */</span>\r\n  <span style=\"color:blue\">function</span> download() {\r\n    $this-&gt;active_sheet = $this-&gt;excel-&gt;setActiveSheetIndex(0);\r\n    $this-&gt;active_sheet-&gt;getPageSetup()-&gt;setOrientation(PHPExcel_Worksheet_PageSetup::ORIENTATION_LANDSCAPE);\r\n    $this-&gt;active_sheet-&gt;getPageSetup()-&gt;setFitToWidth(1);\r\n    $this-&gt;active_sheet-&gt;getPageSetup()-&gt;setFitToHeight(1);\r\n    <span style=\"color:blue\">if</span>($this-&gt;export_type == <span style=\"color:#a31515\">'pdf'</span>) {\r\n      $this-&gt;writer-&gt;writeAllSheets();\r\n    }\r\n    $this-&gt;writer-&gt;save(<span style=\"color:#a31515\">'php://output'</span>);\r\n    <span style=\"color:green\">//exit;</span>\r\n  }\r\n\r\n  <span style=\"color:green\">/**\r\n  * By default, a workbook has a single worksheet, to which we can append more worksheets.\r\n  * To dynamically add worksheets, we need to keep track of how many worksheets we have, and\r\n  * make sure that we make the lastest addition, the active worksheet.\r\n  */</span>\r\n  <span style=\"color:blue\">function</span> create_new_sheet($sheet, $title) {\r\n    <span style=\"color:blue\">if</span>($this-&gt;excel-&gt;getSheetCount()-1 &lt; $sheet) {\r\n      $this-&gt;excel-&gt;createSheet($sheet);\r\n    }\r\n    $this-&gt;active_sheet = $this-&gt;excel-&gt;setActiveSheetIndex($sheet);\r\n    $this-&gt;active_sheet-&gt;setTitle(substr($title, 0, 31));\r\n  }\r\n\r\n  <span style=\"color:green\">/**\r\n  * This is a useful helper function to remove the image(s) used in the report.\r\n  * The function would be useful in an environment where you must remove a temporary\r\n  * image exported by another process. (e.g. Fusion Charts)\r\n  *\r\n  * @param mixed $image_location\r\n  */</span>\r\n  <span style=\"color:blue\">function</span> delete_image($image_location) {\r\n    <span style=\"color:blue\">if</span>(file_exists($image_location)) {\r\n      unlink($image_location);\r\n    }\r\n  }\r\n\r\n  <span style=\"color:green\">/**\r\n  * Nullify the large data elements, to ensure that memory leaks are kept to a minimum, if any.\r\n  */</span>\r\n  <span style=\"color:blue\">function</span> __destruct() {\r\n    $this-&gt;data = null;\r\n    $this-&gt;writer = null;\r\n    $this-&gt;excel = null;\r\n  }\r\n}\r\n</pre>\r\n</div>\r\n</p>",
    "PostedDate": "2010-06-23T07:31:50.46-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "461650",
    "ThreadId": "216249",
    "Html": "<p>It's been almost two weeks, and still no resolution. Any ideas?</p>",
    "PostedDate": "2010-06-30T07:11:08.363-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "462049",
    "ThreadId": "216249",
    "Html": "<p>Just tested it, works fine! There is one PP notice ($title is undefined in the __construct method), otherwise I do have output and a valid PDF file.<br>I just copied your code, added the following:</p>\r\n<pre style=\"font-family:consolas\">$columns&nbsp;=&nbsp;array('Name',&nbsp;'Company');<br>$data&nbsp;=&nbsp;array();<br>for&nbsp;($i&nbsp;=&nbsp;0;&nbsp;$i&nbsp;&lt;&nbsp;500;&nbsp;$i++)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;$data[]&nbsp;=&nbsp;array('Name'&nbsp;.&nbsp;$i,&nbsp;'Company'&nbsp;.&nbsp;$i);<br>}<br> <br>$export&nbsp;=&nbsp;new&nbsp;ExcelExport('pdf',&nbsp;'01.pdf');<br>$export-&gt;add_image('Koala',&nbsp;'Koala',&nbsp;'Koala',&nbsp;'images\\phpexcel_logo.gif');<br>$export-&gt;add_table($columns,&nbsp;$data,&nbsp;'Customers');<br>$export-&gt;download();</pre>\r\n<p>When executing this, I executed it from the command line using:</p>\r\n<pre style=\"font-family:consolas\">php export.php &gt; export.pdf</pre>\r\n<p>This resulted in export.pdf on disk, valid PDF file. Can you verify this?</p>\r\n<p>PS: I will be on a vacation for the next two weeks.</p>",
    "PostedDate": "2010-07-01T01:31:10.063-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]