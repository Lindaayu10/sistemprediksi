[
  {
    "Id": "546559",
    "ThreadId": "241119",
    "Html": "\r\n<p>I found several topics about performance, so I am not sure, whether it is a good idea to post this. I use PHPExcel mainly to read files created by 3rd parties, containing nothing more than table data (in fact, they are nothing more than CSV-files, but people\r\n just send Excel files whatever you tell them to do). One of those files took several minutes to parse, which seemed way to long for a few hundred cells.</p>\r\n<p>After some examination it turned out that:</p>\r\n<p>a) the customer created a formula &quot;=VLOOKUP(E...;$Tabelle3.B$1:C$65536;2)&quot; for a full column in one worksheet</p>\r\n<p>b) used 40 rows of the other worksheet (&quot;Tabelle3&quot;) to define a mapping of codes to clear text and</p>\r\n<p>c) PHPExcel is therefore creating a 65535-sized array for each of the 65535 rows in the first worksheet and analyzing the content of each of those cells.</p>\r\n<p>&nbsp;</p>\r\n<p>There is no way I can prevent anyone from using Excel in this way (in fact, within Excel it seems to be quite clever). I did not dig deep enough into the code to be sure, if and where a cache could be helpful. Most of the work seems to be done in PHPExcel_Calculation::extractCellRange\r\n - maybe it would be possible to remember already-calculated ranges there without any side effects?</p>\r\n",
    "PostedDate": "2011-01-10T03:01:36.567-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]