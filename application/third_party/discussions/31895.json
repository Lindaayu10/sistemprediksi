[
  {
    "Id": "105944",
    "ThreadId": "31895",
    "Html": "Hello!<br>\r\nI would like to discuss new Reader class from Database (PHPExcel_Reader_PDO). Or, maybe somebody has written it already. Then upload your class on server.<br>\r\nLet’s imagine, that any SQL- query is correspond to the database View. This imagine View is very similar to Excel file. The same columns and rows both in View as in Excel file. So my PHPExcel_Reader_PDO will&nbsp; take SQL-command (or prepared statement) instead of file name, read data from DB and resume filled and formatted PHPExcel object. This will be very useful data export mechanism for simplest tasks.<br>\r\nIf anybody has done something like PHPExcel_Reader_PDO, upload your code please.<br>\r\n<br>\r\n",
    "PostedDate": "2008-07-21T02:40:41.913-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "106276",
    "ThreadId": "31895",
    "Html": "This should not be too hard to implement without creating a reader for it. Also check&nbsp; where we are discussing a data dumper which copies database data in Excel.\r\n",
    "PostedDate": "2008-07-22T09:19:09.147-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "106484",
    "ThreadId": "31895",
    "Html": "Unfortunly I have not found discussion about database dump in Excel.<br>\r\nI’m talking about Reader like this:<br>\r\n<br>\r\n//initing query. anyway we did it every time<br>\r\n$pdo= new PDO('addr db port user pass');<br>\r\n$q= $pdo-&gt;query(“select id, name, name2 form emp”);<br>\r\n<br>\r\n//now lets imagine that we need to dump the query result into Excel. The easest way is to use PHPExcel with new reader<br>\r\n//read data<br>\r\n$reader= Excel_IOFactory::getReader('PDO');<br>\r\n$excel= $reader-&gt;load($q);<br>\r\n<br>\r\n//write data<br>\r\n$writer= Excel_IOFactory::getWriter($excel, ‘Excel2007’);<br>\r\n$writer-&gt;write(’employes.xlsx’)<br>\r\n<br>\r\nAnd result is excel file with formatted data:<br>\r\nid &nbsp;&nbsp; &nbsp; name &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; name2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (header is bolded and centered)<br>\r\n&nbsp;1&nbsp;&nbsp;&nbsp; Nikolay &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; Valuev&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (cells slyled depending on PDO column data type money to money, date to date and so on) <br>\r\n&nbsp;2&nbsp;&nbsp;&nbsp; Mike&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Tyson <br>\r\n<br>\r\nBest regards<br>\r\nalexey_baranov<br>\r\n",
    "PostedDate": "2008-07-23T03:54:45.85-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "108437",
    "ThreadId": "31895",
    "Html": "Well, this is my Reader class. It support <br>\r\nany non-UTF-8 Encoding!<br>\r\nAnd provides multi-query workbook.<br>\r\nPDO Query and prepared statment.<br>\r\n<br>\r\nSee sample bellow.<br>\r\n<br>\r\n<br>\r\nclass PHPExcel_Reader_PDO implements PHPExcel_Reader_IReader{<br>\r\n&nbsp;&nbsp; &nbsp;private $_encoding;<br>\r\n&nbsp;&nbsp; &nbsp;<br>\r\n&nbsp;&nbsp; &nbsp;public function getEncoding(){<br>\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return $this-&gt;_encoding;<br>\r\n&nbsp;&nbsp; &nbsp;}<br>\r\n&nbsp;&nbsp; &nbsp;public function setEncoding($encoding){<br>\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$this-&gt;_encoding= $encoding;<br>\r\n&nbsp;&nbsp; &nbsp;}<br>\r\n&nbsp;&nbsp; &nbsp;public function load($st, &amp;$appendTo= null){<br>\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;// Initialisations<br>\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;if ($appendTo){<br>\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$sheet= $appendTo-&gt;createSheet();<br>\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br>\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;else{<br>\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$appendTo= new PHPExcel();<br>\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$sheet= $appendTo-&gt;getActiveSheet();<br>\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br>\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//filling headers<br>\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;for($c=0; $c &lt; $st-&gt;columnCount(); $c++){<br>\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$meta= $st-&gt;getColumnMeta($c);<br>\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$this-&gt;printHeader($sheet-&gt;getCellByColumnAndRow($c, 1), $this-&gt;getEncoding()?iconv($this-&gt;getEncoding(), 'UTF-8', $meta['name']):$meta['name'], $meta);<br>\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br>\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;//filling data<br>\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$r=2;<br>\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;while($rA=$st-&gt;fetch()){<br>\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;for($c=0; $c&lt; $st-&gt;getColumnMeta($c); $c++){<br>\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$this-&gt;printCell($sheet-&gt;getCellByColumnAndRow($c, $r), $this-&gt;getEncoding()?iconv($this-&gt;getEncoding(), 'UTF-8', $rA[$c]):$rA[$c], $st-&gt;getColumnMeta($c));<br>\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$cc=1;<br>\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br>\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$r++;<br>\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br>\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;return $appendTo;<br>\r\n&nbsp;&nbsp; &nbsp;}<br>\r\n&nbsp;&nbsp; &nbsp;protected function printHeader(PHPExcel_Cell &amp;$cell, $data, $meta){<br>\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$cell-&gt;setValue($data);<br>\r\n&nbsp;&nbsp; &nbsp;}<br>\r\n&nbsp;&nbsp; &nbsp;protected function printCell(PHPExcel_Cell &amp;$cell, $data, $meta){<br>\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$cell-&gt;setValue($data);<br>\r\n&nbsp;&nbsp; &nbsp;}<br>\r\n}<br>\r\n<br>\r\n<br>\r\n<br>\r\n<br>\r\nSample 1 (tasted on PostgreSQL 8.3.3, windows-1251 encoding):<br>\r\n<br>\r\n$pdo = new PDO(dsn,usr,pwd);<br>\r\n$st= $pdo-&gt;query(&quot;select * from pg_catalog.pg_type limit 2&quot;);<br>\r\n$st2= $pdo-&gt;prepare(&quot;select * from pg_catalog.pg_type limit 20 offset ?&quot;);<br>\r\n$st2-&gt;execute(array(3));<br>\r\n<br>\r\n$reader= new PHPExcel_Reader_PDO();<br>\r\n$reader-&gt;setEncoding('windows-1251');<br>\r\n$excel= $reader-&gt;load($st);<br>\r\n$reader-&gt;load($st2, $excel);<br>\r\n<br>\r\n$writer= PHPExcel_IOFactory::createWriter($excel, 'Excel2007Ex');<br>\r\n$writer-&gt;write('sample1.xlsx');<br>\r\n<br>\r\n<br>\r\nVery simple! The point is to implement data formatting dependend on $meta in printHeader(), printCell() functions. Something like<br>\r\n<br>\r\nclass PHPExcel_Reader_PDOEx extends PHPExcel_Reader_PDO{<br>\r\n&nbsp;&nbsp; &nbsp;protected function printHeader(PHPExcel_Cell &amp;$cell, $data, $meta){<br>\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;swith($meta['type']){<br>\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;'money':<br>\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$cell-&gt;setValue($data, $format);<br>\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;break;<br>\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;'text':<br>\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;...<br>\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;...<br>\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br>\r\n&nbsp;&nbsp; &nbsp;}<br>\r\n&nbsp;&nbsp; &nbsp;protected function printCell(PHPExcel_Cell &amp;$cell, $data, $meta){<br>\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;swith($meta['type']){<br>\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;'money':<br>\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;$cell-&gt;setValue($data, $format);<br>\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;break;<br>\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;'text':<br>\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;...<br>\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;...<br>\r\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;}<br>\r\n&nbsp;&nbsp; &nbsp;}<br>\r\n}<br>\r\n<br>\r\n<br>\r\nalexey_baranov\r\n",
    "PostedDate": "2008-08-01T00:35:20.37-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1207209",
    "ThreadId": "31895",
    "Html": "<pre><code>&lt;html&gt;\n&lt;body&gt;\n&lt;?php\n\n$con = mysql_connect('localhost', 'root', 'xxx');\nif (!$con)\n  {\n  die('Could not connect: ' . mysql_error());\n  }\n  \nmysql_select_db(&quot;kasy&quot;, $con);\n$sql=&quot;SELECT DISTINCT ProgCode, Program FROM exam ORDER BY  `exam`.`Program` ASC &quot;  ;\n$result = mysql_query($sql); \n \n$con = mysql_connect('localhost', 'root', 'xxx');\nif (!$con)\n  {\n  die('Could not connect: ' . mysql_error());\n  }\n  \nmysql_select_db(&quot;kasy&quot;, $con);\n$sql=&quot;SELECT DISTINCT Sessi from exam ORDER BY  `exam`.`Sessi` ASC &quot;  ;\n$result1 = mysql_query($sql); \n\n$con = mysql_connect('localhost', 'root', 'xxx');\nif (!$con)\n  {\n  die('Could not connect: ' . mysql_error());\n  }\n  \nmysql_select_db(&quot;kasy&quot;, $con);\n$sql=&quot;SELECT DISTINCT Intake from exam ORDER BY  `exam`.`Intake` ASC &quot;  ;\n$result2 = mysql_query($sql); \n\n?&gt;\n\n\n\n&lt;form name=&quot;myform&quot; method=&quot;GET&quot;&gt;\n&lt;b&gt;Select Program &lt;/b&gt; :    &lt;select name=&quot;ProgCode&quot;&gt;\n                 &lt;option value=&quot;&quot;&gt;-Please Select-&lt;/option&gt;\n&lt;?php while($row = mysql_fetch_array($result))\n{\n\n        ?&gt;\n    &lt;option value=&quot;&lt;?php echo $row['ProgCode']?&gt;&quot;&gt;&lt;?php echo $row['ProgCode']?&gt; &amp;nbsp &amp;nbsp &lt;?php echo $row['Program']?&gt;&lt;/option&gt;\n&lt;?php\n}\n?&gt;  \n&lt;/select&gt;\n&lt;br&gt;    \n&lt;b&gt;Select Session &lt;/b&gt; &amp;nbsp;&amp;nbsp;:    &lt;select name=&quot;Sessi&quot;&gt;\n                 &lt;option value=&quot;&quot;&gt;-Please Select-&lt;/option&gt;\n&lt;?php while($row1 = mysql_fetch_array($result1))\n{\n?&gt;\n    &lt;option value=&quot;&lt;?php echo $row1['Sessi']?&gt;&quot;&gt;&lt;?php echo $row1['Sessi']?&gt;&lt;/option&gt;\n&lt;?php\n}\n?&gt;  \n&lt;/select&gt;\n&lt;br&gt;\n&lt;b&gt;Select Intake &lt;/b&gt;&amp;nbsp &amp;nbsp :  &lt;select name=&quot;Intake&quot;&gt;\n                 &lt;option value=&quot;&quot;&gt;-Please Select-&lt;/option&gt;\n&lt;?php while($row2 = mysql_fetch_array($result2))\n{\n?&gt;\n    &lt;option value=&quot;&lt;?php echo $row2['Intake']?&gt;&quot;&gt;&lt;?php echo $row2['Intake']?&gt;&lt;/option&gt;\n&lt;?php\n}\n?&gt;  \n&lt;/select&gt;       \n\n    &lt;br&gt;&lt;input name=&quot;BtnSubmit&quot; type=&quot;submit&quot; value=&quot;Submit&quot;&gt;\n\n&lt;br&gt;\n\n    &lt;/form&gt;\n\n\n&lt;?php\n$con = mysql_connect('localhost', 'root', 'xxx');\nif (!$con)\n  {\n  die('Could not connect: ' . mysql_error());\n  }\n   \n$a = $_GET['Intake'];\n$b = $_GET['ProgCode'];\n$c = $_GET['Sessi'];\n\n\n   \nmysql_select_db(&quot;kasy&quot;, $con);\n$query2=(&quot;SELECT DISTINCT(SubCode) FROM exam where Intake='$a' and ProgCode='$b' and Sessi='$c'&quot;)  ;\n$query2testing = mysql_query($query2);  \n\ntry {\n    $db = new PDO('mysql:host=localhost;dbname=kasy;charset=utf8', 'root', 'xxx');\n} catch (PDOException $e) {\n    echo $e-&gt;getMessage();\n}\n \n//get the SubCodes\n$stmt = $db-&gt;query(&quot;SELECT DISTINCT(SubCode) FROM exam where Intake='$a' and ProgCode='$b' and Sessi='$c'&quot;);\n$row_count = $stmt-&gt;rowCount();\n\n \n//generate pivot sql statement\n$sql = &quot;SELECT Nama,Intake,Sessi,matricNo, &quot;;\n$dynamic_fields = array();\nwhile ($row = $stmt-&gt;fetch(PDO::FETCH_ASSOC)) {\n    $dynamic_fields[] = $row['SubCode'];\n    $sql .= &quot;MAX(CASE SubCode when '{$row['SubCode']}' then grade end) AS '{$row['SubCode']}'&quot;;\n    if ($row_count &gt; 1) {\n        $sql .=',';\n    }\n    $row_count--;\n}\n$sql .= &quot; FROM exam where Intake='$a' and ProgCode='$b' and Sessi='$c' GROUP BY Nama &quot;;\n//echo $sql;\n\n\n\nwhile ($row2 = mysql_fetch_assoc($query2testing))\n{   \n    $pixx =explode(&quot; &quot;, $row2['SubCode']);\n    foreach ($pixx as $subject) {\n     $rezz .= '&lt;th&gt;'.$subject.'&lt;/th&gt;'; \n    } \n} \necho '&lt;table border=1 bordercolor=FFCC00&gt;\n\n &lt;tr&gt;\n &lt;th&gt; No &lt;/th&gt;\n &lt;th&gt; Nama &lt;/th&gt;\n &lt;th&gt; MatricNo &lt;/th&gt;\n &lt;th&gt; Intake &lt;/th&gt;\n &lt;th&gt; Semester &lt;/th&gt;\n '.$rezz.'\n\n ';\n \n$i=1;\n\n//SELECT Nama, MAX(CASE SubCode when 'BM' then grade end) \n//AS BM,MAX(CASE SubCode when 'Sejarah' then grade end) AS Sejarah,MAX(CASE SubCode when 'KH' then grade end) AS KH FROM exam GROUP BY Nama\n\n//echo $sql;\n$pivot = $db-&gt;query($sql);\nwhile ($row = $pivot-&gt;fetch(PDO::FETCH_ASSOC)) {\n    $display= &quot;&lt;tr&gt;&quot;;\n    $display .= &quot;&lt;td&gt;$i&lt;/td&gt;&quot;;  \n    $display .= &quot;&lt;td&gt;&quot;.$row['Nama'] . PHP_EOL .&quot;&lt;/td&gt;&quot;;\n    $display .= &quot;&lt;td&gt;&quot;.$row['matricNo'] . PHP_EOL .&quot;&lt;/td&gt;&quot;;\n    $display .= &quot;&lt;td&gt;&quot;.$row['Intake'] . PHP_EOL .&quot;&lt;/td&gt;&quot;;\n    $display .= &quot;&lt;td&gt;&quot;.$row['Sessi'] . PHP_EOL .&quot;&lt;/td&gt;&quot;;\n    foreach ($dynamic_fields as $field) {\n        $display .= &quot;&lt;td&gt;&lt;center&gt;&quot; . $row[$field];\n    }\n    $display .= '&lt;br/&gt;';\n $display .= &quot;&lt;/tr&gt;&quot;;\n echo $display;\n  $i++;\n  }\n      ?&gt;\n\n    </code></pre>\n\nThis is my full coding, can you tell me how to generate to excel.. \r<br />\nspecial thanks if you can give the full code + button Download to Excel from this code to generate to excel.<br />\n",
    "PostedDate": "2014-02-12T02:06:59.943-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]