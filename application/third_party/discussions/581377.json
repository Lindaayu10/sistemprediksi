[
  {
    "Id": "1353991",
    "ThreadId": "581377",
    "Html": "Hey,<br />\nI am having problem while reading 3Mb data .xlsx file and same for 7Mb data .xls file, Is there any size limitations while reading file??? <br />\nIn my excel, I have 30,000 rows and 36 rows. Is there any solutions so that I can read up to 1 lack records or more then that..<br />\nIn my project I have to import 10 lack records, but my code is not working for more than 29000 records.<br />\nup till 29000 records my code works good on my local, but greater then 29000 records stop working.<br />\nAnd also reading 29000 records takes too much time may be 25 min.<br />\nCan any one please give me solutions why this happen so????<br />\nAnd what should I do to resolve this?<br />\nbelow is my code, can any one suggest me what is wrong in my code????<br />\nHere is my code:<br />\n&lt;?php<br />\nerror_reporting(E_ALL);<br />\nset_time_limit(0);<br />\nini_set(&quot;memory_limit&quot;,&quot;-1&quot;);<br />\ndate_default_timezone_set('Europe/London');<br />\ndefine('EOL',(PHP_SAPI == 'cli') ? PHP_EOL : '&lt;br /&gt;');<br />\n?&gt;<br />\n&lt;?php<br />\n/<strong>  Set Include path to point at the PHPExcel Classes folder  </strong>/<br />\nset_include_path(get_include_path() . PATH_SEPARATOR . 'Classes/');<br />\n<br />\n/<strong>  Include PHPExcel_IOFactory  </strong>/<br />\ninclude 'Classes/PHPExcel/IOFactory.php';<br />\n<br />\n$inputFileName = 'files/30000rows.xls';<br />\n$inputFileType = PHPExcel_IOFactory::identify($inputFileName);<br />\n<br />\n/*<em>  Define a Read Filter class implementing PHPExcel_Reader_IReadFilter  </em>/<br />\nclass chunkReadFilter implements PHPExcel_Reader_IReadFilter<br />\n{<br />\n<pre><code>private $_startRow = 0;\nprivate $_endRow = 0;\n/**  Set the list of rows that we want to read  */\npublic function setRows($startRow, $chunkSize) {\n    $this-&gt;_startRow    = $startRow;\n    $this-&gt;_endRow      = $startRow + $chunkSize;\n}\npublic function readCell($column, $row, $worksheetName = '') {\n    if (($row == 1) || ($row &gt;= $this-&gt;_startRow &amp;&amp; $row &lt; $this-&gt;_endRow)) {\n        return true;\n    }\n    return false;\n}</code></pre>\n\n}<br />\necho 'Loading file ',pathinfo($inputFileName,PATHINFO_BASENAME),' using IOFactory with a defined reader type of ',$inputFileType,'&lt;br /&gt;';<br />\n/<strong>  Create a new Reader of the type defined in $inputFileType  </strong>/<br />\n$objReader = PHPExcel_IOFactory::createReader($inputFileType);<br />\necho '&lt;hr /&gt;';<br />\n/<strong>  Define how many rows we want to read for each &quot;chunk&quot;  </strong>/<br />\n$chunkSize = 1000;<br />\n//total rows in excel<br />\n$spreadsheetInfo = $objReader-&gt;listWorksheetInfo($inputFileName);<br />\n$totalRows = $spreadsheetInfo[0]['totalRows'];<br />\n/<strong>  Create a new Instance of our Read Filter  </strong>/<br />\n$chunkFilter = new chunkReadFilter();<br />\n/<strong>  Tell the Reader that we want to use the Read Filter that we've Instantiated  </strong>/<br />\n$objReader-&gt;setReadFilter($chunkFilter);<br />\n$objReader-&gt;setReadDataOnly(true);<br />\n/<strong>  Loop to read our worksheet in &quot;chunk size&quot; blocks  </strong>/<br />\nfor ($startRow = 2; $startRow &lt;= $totalRows; $startRow += $chunkSize) {<br />\n<pre><code>echo &quot;in for loop&lt;br&gt;&quot;;\necho 'Loading WorkSheet using configurable filter for headings row 1 and for rows ',$startRow,' to ',($startRow+$chunkSize-1),'&lt;br /&gt;';\n/**  Tell the Read Filter, the limits on which rows we want to read this iteration  **/\n\n$chunkFilter-&gt;setRows($startRow,$chunkSize);\n\n$cacheMethod = PHPExcel_CachedObjectStorageFactory:: cache_to_phpTemp;\n$cacheSettings = array( ' memoryCacheSize '  =&gt; '1000MB'\n);\nPHPExcel_Settings::setCacheStorageMethod($cacheMethod, $cacheSettings);\n\n$cacheMethod=PHPExcel_CachedObjectStorageFactory::cache_in_memory_serialized;\nPHPExcel_Settings::setCacheStorageMethod($cacheMethod);\n\n$cacheMethod = PHPExcel_CachedObjectStorageFactory::cache_in_memory_gzip;\nif (!PHPExcel_Settings::setCacheStorageMethod($cacheMethod)) {\n    die($cacheMethod . &quot; caching method is not available&quot; . EOL);\n}\necho date('H:i:s') , &quot; Enable Cell Caching using &quot; , $cacheMethod , &quot; method&quot; , EOL;\n\n\n/**  Load only the rows that match our filter from $inputFileName to a PHPExcel Object  **/\n$objPHPExcel = $objReader-&gt;load($inputFileName);\n$objWorksheet = $objPHPExcel-&gt;getActiveSheet();\n$highestColumn = $objWorksheet-&gt;getHighestColumn();\n$sheetData = $objWorksheet-&gt;rangeToArray('A'.$startRow.':'.$highestColumn.($startRow + $chunkSize-1),null, false, false, true);\necho '&lt;pre&gt;';\nprint_r($sheetData);\n$objPHPExcel-&gt;disconnectWorksheets();\nunset($objPHPExcel);\necho '&lt;br /&gt;&lt;br /&gt;';</code></pre>\n\n}<br />\n?&gt;<br />\nReally it is very much urgent for me.<br />\nplease help me if any one can..<br />\nI have tried all possible solutions for this.<br />\nI will be very grateful if any one can help me.<br />\nThanks in advance. <br />\n",
    "PostedDate": "2015-02-19T06:31:25.017-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]