[
  {
    "Id": "939954",
    "ThreadId": "402778",
    "Html": "\r\n<p>Hello,</p>\r\n<p>I'm searching this forum and the documentation but I do not understand how to implement of reading just a date.</p>\r\n<p>I have version 1.7.7.</p>\r\n<p>I maintain a volleybal site and I have different Excel file's for the council members to maintain members, commissions, teams etc. and import these data in a MySQL file.</p>\r\n<p>I have moderate the file Iterator.php so that it is working for excel 5 and excel 2007. For text and a time value like '20:00' it is this working fine with:</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>$imp_data[$ic] = iconv(<span style=\"color:#a31515\">&quot;UTF-8&quot;</span>, <span style=\"color:#a31515\">&quot;ISO-8859-1&quot;</span>, $cell-&gt;getFormattedValue());</pre>\r\n</div>\r\n<p>But now I have a date in excel like '1-11-2012' and I have defined the cell properties with date '14-3-2001'.</p>\r\n<p>I want to test a cell value if it is a date. If this is so then I want to import this into a mySQL database, for example like this:</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>$cell_tmp = <span style=\"color:#a31515\">'A2'</span>;\n<span style=\"color:blue\">if</span> (PHPExcel_Shared_Date::isDateTime($cell_tmp)) {\n   $imp_data[$ic]= PHPExcel_Style_NumberFormat::toFormattedString($cell-&gt;getValue(), <span style=\"color:#a31515\">&quot;M/D/YYYY&quot;</span>);\n}\n</pre>\r\n</div>\r\n<p>But this is not working.</p>\r\n<p>Nico.</p>\r\n",
    "PostedDate": "2012-11-11T11:44:38.873-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "940150",
    "ThreadId": "402778",
    "Html": "<p><span id=\"AjaxWaitImage\" style=\"visibility: hidden;\"> </span></p>\r\n<div id=\"TranslationOutput\" class=\"mttextarea\" dir=\"ltr\">\r\n<div class=\"force_dir\"><span>That does not work?</span></div>\r\n<br />\r\n<div class=\"force_dir\"><span><span>The test always returns false? </span><span>The conversion does not give the expected result? </span><span>Import into MySQL generates errors or produce aberrant date?</span></span></div>\r\n<div class=\"force_dir\"><span>To import in MySQL, does not use a local date format but rather the universal format (constant FORMAT_DATE_YYYYMMDD2 or in php Y-m-d).</span></div>\r\n<div class=\"force_dir\"><span>PHPEXcel_Shared_Date have methods to convert a Excel date value to a php date/object.<br /></span></div>\r\n</div>",
    "PostedDate": "2012-11-12T00:09:51.6-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "940233",
    "ThreadId": "402778",
    "Html": "\r\n<p>The rest of the code is working without the next lines:</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>$cell_tmp = <span style=\"color:#a31515\">'A2'</span>;\n<span style=\"color:blue\">if</span> (PHPExcel_Shared_Date::isDateTime($cell_tmp)) {\n   $imp_data[$ic]= PHPExcel_Style_NumberFormat::toFormattedString($cell-&gt;getValue(), <span style=\"color:#a31515\">&quot;M/D/YYYY&quot;</span>);\n}</pre>\r\nFunctional, when i click on import data, a dialog window pops up shows the data on that popup window what is imported. And this works fine.But if I add the lines as above, then the whole popup window stays blanc/empty! ==&gt; PHP crashing</div>\r\n<p>Or is it so that I have to include_once a certain php file of the PHPEcel library?\r\n<br>\r\nOr this morning I was thinking about the array '$imp_data[$ic]' is filled with text or standard data masks from excel.\r\n<br>\r\nGives this a problem now I want to add a date '01-02-2001' format in one of the array elements?<br>\r\n<br>\r\nAt the top of the file, the default timezone is set.<br>\r\nO yeh, so as said as a kind of logging I put al the data which I read from the excel on popup window like:</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">echo</span> <span style=\"color:#a31515\">'&lt;td&gt;'</span>. iconv(<span style=\"color:#a31515\">&quot;UTF-8&quot;</span>, <span style=\"color:#a31515\">&quot;ISO-8859-1&quot;</span>, $cell-&gt;getFormattedValue()).<span style=\"color:#a31515\">'&lt;/td&gt;'</span>;\n</pre>\r\n</div>\r\n<p>But the date field value which is shown on this popup window is <strong>28-10-12</strong> instead of\r\n<span style=\"text-decoration:underline\"><strong>28-10-2012</strong></span> which is the value in excel!<br>\r\n<br>\r\nMaybe it is my fault, I have been reading yesterday evening in the developers reference guide, but I can't find a code snippet which reading a date value form excel. Maybe I have to include some php file in iterator.php file. Now I have only IOFactory.php included.</p>\r\n<p>I have found something like &quot;PHPExcel_Shared_Date::PHPToExcelObject()&quot; (I don't have the documentation here with me). This explained what it does. Maybe I didn't look good but till now I couldn't find how to implement it with a example.<br>\r\n<br>\r\nI hope that it is clear what I mean and what I have written.<br>\r\n<br>\r\nNico</p>\r\n",
    "PostedDate": "2012-11-12T04:06:21.027-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "940304",
    "ThreadId": "402778",
    "Html": "<p>Ok, after opening my eyes ;-)</p>\r\n<p>It's strange you don't see the exception throw by isDateTime : this mehod want a cell (object) not a cell coordinate, so rewrite your test using $cell (current cell object if i'm correct).</p>\r\n<p>Next, you have \"in your hand\", a date formatted in your locale (i guess) but if your MySQL field is date's type, it's better to have a string formatted accordingly for your insert, so format the \"number\" using <span>FORMAT_DATE_YYYYMMDD2.</span></p>",
    "PostedDate": "2012-11-12T06:42:16.26-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "940311",
    "ThreadId": "402778",
    "Html": "\r\n<p>&nbsp;oops. replied to wrong thread.</p>\r\n",
    "PostedDate": "2012-11-12T07:04:32.727-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "940316",
    "ThreadId": "402778",
    "Html": "<blockquote style=\"border: solid .1em #ccc; font-style: italic; margin: .25em 1em 0 1em; padding: 0 .25em 0 .25em;\"><strong>lwol wrote:</strong><br />\r\n<p>Ok, after opening my eyes ;-)</p>\r\n<p>It's strange you don't see the exception throw by isDateTime : this mehod want a cell (object) not a cell coordinate, so rewrite your test using $cell (current cell object if i'm correct).</p>\r\n<p>Next, you have \"in your hand\", a date formatted in your locale (i guess) but if your MySQL field is date's type, it's better to have a string formatted accordingly for your insert, so format the \"number\" using <span>FORMAT_DATE_YYYYMMDD2.</span></p>\r\n</blockquote>\r\n<p>Ok, maybe stupid, but you mean this ,I suppose:</p>\r\n<p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre><span style=\"color: blue;\">if</span> (PHPExcel_Shared_Date::isDateTime($cell)) {\r\n   $imp_data[$ic]= PHPExcel_Style_NumberFormat::toFormattedString($cell-&gt;getValue(), <span style=\"color: #a31515;\">\"M/D/YYYY\"</span>);\r\n}\r\n</pre>\r\n</div>\r\n$cell is a object, because&nbsp; \"$cell-&gt;getFormattedValue(), this works in my existing code.</p>\r\n<p>Then I have to replace the line:</p>\r\n<p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre>$imp_data[$ic]= PHPExcel_Style_NumberFormat::toFormattedString($cell-&gt;getValue(), <span style=\"color: #a31515;\">\"M/D/YYYY\"</span>);\r\n</pre>\r\n</div>\r\nwith something like \"<span>FORMAT_DATE_YYYYMMDD2\"? I believe I have something seen in the reference guide. I hope that I can find a example of these syntax.<br /></span></p>",
    "PostedDate": "2012-11-12T07:15:39.277-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "940349",
    "ThreadId": "402778",
    "Html": "<p><span id=\"AjaxWaitImage\" style=\"visibility: hidden;\"> </span></p>\r\n<div id=\"TranslationOutput\" class=\"mttextarea\" dir=\"ltr\">\r\n<div class=\"force_dir\"><span>Excuse my lack of clarity.</span></div>\r\n<br />\r\n<div class=\"force_dir\"><span>First point: Yes, exactly.</span></div>\r\n<div class=\"force_dir\"><span>Second point: replaces \"M/D/YYYY\" by PHPExcel_Style_NumberFormat::FORMAT_DATE_YYYYMMDD2</span></div>\r\n<div class=\"force_dir\"><span>This format will give you a date like : 2012-11-12.</span></div>\r\n<div class=\"force_dir\"><span>This change is useful if the MySQL field receiving date is date type.</span></div>\r\n<div class=\"force_dir\"><br /><span id=\"AjaxWaitImage\" style=\"visibility: hidden;\"> </span>\r\n<div class=\"force_dir\"><span>You can see the list of the constants (for numbers) in the documentation of the API for the PHPExcel_Style_NumberFormat class.</span></div>\r\n</div>\r\n</div>",
    "PostedDate": "2012-11-12T08:08:02.88-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "941195",
    "ThreadId": "402778",
    "Html": "\r\n<p>Iwol, I don't mind you're lack of clarity. I'm very glad that you are trying to help me.</p>\r\n<p>Ok, I have changed the tes condition with $cell.</p>\r\n<p>But then, the Excel cell has the date mask/format and my test condition is working now:. But beneath is my test code and it doesn't work to read the cell data and format it to MySQL date format</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>date_default_timezone_set(<span style=\"color:#a31515\">'Europe/Amsterdam'</span>);\n\n<span style=\"color:green\">/** PHPExcel_IOFactory */</span>\n<span style=\"color:blue\">require_once</span> <span style=\"color:#a31515\">'../../Classes/PHPExcel/IOFactory.php'</span>;\n\n<span style=\"color:blue\">if</span> (PHPExcel_Shared_Date::isDateTime($cell)) {\n\t\t\t\t  \n  <span style=\"color:green\">//This prints the date according to the date in Excel. So far so good.</span>\n  <span style=\"color:blue\">echo</span> <span style=\"color:#a31515\">'<br>$data: '</span>.PHPExcel_Style_NumberFormat::toFormattedString($cell-&gt;getValue(), <span style=\"color:#a31515\">&quot;M/D/YYYY&quot;</span>).<span style=\"color:#a31515\">' --/-- '</span>.PHPExcel_Style_NumberFormat::toFormattedString($cell-&gt;getValue(), <span style=\"color:#a31515\">&quot;YYYY/M/D&quot;</span>).<span style=\"color:#a31515\">'<br>'</span>;\n\t\t\t\t  \n  <span style=\"color:green\">//None of the next lines work!</span>\n  $data = $cell-&gt;getFormattedValue()-&gt;setFormatCode(PHPExcel_Style_NumberFormat::FORMAT_DATE_YYYYMMDD2).<span style=\"color:#a31515\">'<br>'</span>;\n  $data = $cell-&gt;getCalculatedValue()-&gt;setFormatCode(PHPExcel_Style_NumberFormat::FORMAT_DATE_YYYYMMDD2).<span style=\"color:#a31515\">'<br>'</span>;\n  $data = $cell-&gt;getValue()-&gt;setFormatCode(PHPExcel_Style_NumberFormat::FORMAT_DATE_YYYYMMDD2).<span style=\"color:#a31515\">'<br>'</span>;\n  <span style=\"color:green\">//echo '$data: '.$data.'<br>';</span>\n}\n</pre>\r\n</div>\r\n<p>There is not a exception thrown. I've been reading documentation but I can't find a good example.Do I have to include the &quot;NumberFormat.php&quot; and to instanciate the &quot;PHPExcel_Style_NumberFormat&quot; class?</p>\r\n<p>&nbsp;</p>\r\n<p>Btw, I don't know if it matters, but I have PHPExcel 1.7.7.</p>\r\n",
    "PostedDate": "2012-11-13T13:08:40.407-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "942216",
    "ThreadId": "402778",
    "Html": "\r\n<div id=\"TranslationOutput\" dir=\"ltr\">\r\n<div><span>For this problem, we use no new features, so version 1.7.7 is not the concern.</span></div>\r\n<div><span><span>The constant exists in the two versions. </span><span>No need to instantiate the class, you can access the constants statically, of course the class must be accessible, but automatic loading deal with this.</span></span></div>\r\n<br>\r\n<div><span><span>The lines that do not work... </span><span>What amazes me the most is that none raises an exception (</span></span><span><span>Check the settings in the php.ini file to find out what happens to the errors.\r\n</span><span>It is annoying to not see these messages on a development machine</span></span><span><span>).</span></span></div>\r\n<div><span><span>And I don't understand their purpose. </span><span>setFormatCode is to define the format of a cell (not by this way, see 4.6.19 for examples) in the workbook, while I thought you only wanted to read it.</span></span></div>\r\n<div><span><span>Well... A</span><span> portion of the line that works: </span></span></div>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>PHPExcel_Style_NumberFormat::toFormattedString($cell-&gt;getValue(), <span style=\"color:#a31515\">&quot;YYYY/M/D&quot;</span>)\r\n\r\n</pre>\r\n</div>\r\nIf you change it as :\r\n<div><span>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>PHPExcel_Style_NumberFormat::toFormattedString($cell-&gt;getValue(), <span style=\"color:#a31515\">&quot;yyyy-mm-dd&quot;</span>)\r\n</pre>\r\n</div>\r\n</span></div>\r\n<div><span>Is that you get the result you want?</span></div>\r\n</div>\r\n",
    "PostedDate": "2012-11-15T10:39:46.313-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "942362",
    "ThreadId": "402778",
    "Html": "\r\n<p>It's my lack of knowledge, but I did right on the 'production' server for the volleybal. I'm the only one who is working with it and it is to maintain the site. I'm building something what the user normally never will see.</p>\r\n<p>But I do it now on my localhost and then I get errors!! Sorry that I have not been thinking by myself to try it on the localhost. But here are my errors now. I'm already googling what this can mean.</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>$data = $cell-&gt;getFormattedValue()-&gt;setFormatCode(PHPExcel_Style_NumberFormat::FORMAT_DATE_YYYYMMDD2).<span style=\"color:#a31515\">'<br>'</span>;\n</pre>\r\n</div>\r\n<p><strong>Fatal error</strong>: Call to a member function setFormatCode() on a non-object in\r\n<strong>F:\\htdocs\\wsvvolleybal\\wsv\\php\\admin\\fileupload\\28iterator.php</strong> on line\r\n<strong>135</strong></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>$data = $cell-&gt;getCalculatedValue()-&gt;setFormatCode(PHPExcel_Style_NumberFormat::FORMAT_DATE_YYYYMMDD2).;\n</pre>\r\n</div>\r\n<p><br>\r\n<strong>Fatal error</strong>: Call to a member function setFormatCode() on a non-object in\r\n<strong>F:\\htdocs\\wsvvolleybal\\wsv\\php\\admin\\fileupload\\28iterator.php</strong> on line\r\n<strong>136</strong></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>$data = $cell-&gt;getValue()-&gt;setFormatCode(PHPExcel_Style_NumberFormat::FORMAT_DATE_YYYYMMDD2).;\n</pre>\r\n</div>\r\n<p><br>\r\n<strong>Fatal error</strong>: Call to a member function setFormatCode() on a non-object in\r\n<strong>F:\\htdocs\\wsvvolleybal\\wsv\\php\\admin\\fileupload\\28iterator.php</strong> on line\r\n<strong>137</strong></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>$data = $cell-&gt;getValue()-&gt;setFormatCode(PHPExcel_Style_NumberFormat::toFormattedString($cell-&gt;getValue(), <span style=\"color:#a31515\">&quot;yyyy-mm-dd&quot;</span>));\n</pre>\r\n</div>\r\n<p><br>\r\n<strong>Fatal error</strong>: Call to a member function setFormatCode() on a non-object in\r\n<strong>F:\\htdocs\\wsvvolleybal\\wsv\\php\\admin\\fileupload\\28iterator.php</strong> on line\r\n<strong>138</strong></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>$data = $cell-&gt;getValue()-&gt;getNumberFormat()-&gt;setFormatCode(PHPExcel_Style_NumberFormat::FORMAT_DATE_YYYYMMDD2);\n</pre>\r\n</div>\r\n<p><br>\r\n<strong>Fatal error</strong>: Call to a member function getNumberFormat() on a non-object in\r\n<strong>F:\\htdocs\\wsvvolleybal\\wsv\\php\\admin\\fileupload\\28iterator.php</strong> on line\r\n<strong>139</strong></p>\r\n<p>&nbsp;</p>\r\n<p>I'm using this &quot;$objReader-&gt;setReadDataOnly(false);&quot; as well and I see in a another that this should not be used.<strong><br>\r\n</strong></p>\r\n",
    "PostedDate": "2012-11-15T14:27:04.123-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "942870",
    "ThreadId": "402778",
    "Html": "\r\n<div id=\"TranslationOutput\" dir=\"ltr\">\r\n<div><span>With messages, it should talk to you a little more;-)</span></div>\r\n<br>\r\n<div><span>Tip : All variants of getValue() return a single value (integer, String, etc.), not an object, as a result, no chance to have a any method available.</span></div>\r\n<br>\r\n<div><span><span>But why trying to format these unfortunate cells? </span><span>Unless I do not understand, you want to read the cells.</span></span></div>\r\n<div><span><span><br>\r\n</span></span></div>\r\n<div><span>Return to what should now work smoothly:</span></div>\r\n<div><span><br>\r\n</span></div>\r\n<div><span>If (PHPExcel_Shared_Date::isDateTime($cell)) {</span></div>\r\n<div><span>$imp_data [$ ic] = PHPExcel_Style_NumberFormat::toFormattedString($cell-&gt;getValue(), &quot;M/D/YYYY&quot;);</span></div>\r\n<div><span>}</span></div>\r\n<div><span>This should be able to read all your cells &quot;date&quot; and store them in your table $imp_data as desired, except error of interpretation.</span></div>\r\n<div><span><span>However the strings &quot;date&quot; are in the form &quot;11/16/2012&quot;, and you want to &quot;2012-11-16&quot;.\r\n</span><span>To do this, modify the block of code above to have this :</span></span></div>\r\n<div><span><span><br>\r\n</span></span></div>\r\n<div><span>If (PHPExcel_Shared_Date::isDateTime($cell)) {</span></div>\r\n<div><span>$imp_data [$ ic] = PHPExcel_Style_NumberFormat::toFormattedString($cell-&gt;getValue(), &quot;yyyy-mm-dd&quot;);</span></div>\r\n<div><span>}</span></div>\r\n<div></div>\r\n<div><span>Does this work?</span></div>\r\n<div><span>Resolve this and we will return to the other lines if you want to.</span></div>\r\n<div><span>setReadDataOnly (false) should not be a problem, set it to true would complicate things (and to keep it simple, I will not develop the rationale).</span></div>\r\n</div>\r\n",
    "PostedDate": "2012-11-16T09:28:45.66-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "946373",
    "ThreadId": "402778",
    "Html": "\r\n<p>Hello Iwol,</p>\r\n<p>Thank you for helping me and the patient with me. I have it working now BUT what is left now that I have a problem with the field with a time mask.</p>\r\n<p>Look, the way it goes is that there are different Excel file's which are used by members of different committee's. These members understand Excel. I'm the webmaster but I don't want to fill in all these data, which is already maintained by the different\r\n commitee's, in a database. But in these Excel file's there is all different kinds of data like text, date (01-03-2011), time (09:30:00). But maybe was this already clear.</p>\r\n<p>Here is my code which is working for a fields with a date mask (if statement) and text/general mask (else) statement. If a field with a time mask is done in the else part then it is correct written into the database! But now the field with a time mask is\r\n running into the if part, whch is returning a date like 1970-01-01 or 2012-03-11.</p>\r\n<p>So how can I distinguish a field with a date mask and a field with a time mask? The method isDateTime is not enough?</p>\r\n<p></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">if</span> (!is_null($cell)) {\r\n\t<span style=\"color:green\">//The isDateTime function/method is only working for a field with a date mask! If the cell does have a time mask then</span>\r\n\t<span style=\"color:green\">//the isDateTime method recognize this as a DateTime field and the code is running into the if statement and returning</span>\r\n\t<span style=\"color:green\">//DATE--&gt; which is wrong when the value is 09:30:00</span>\r\n\t<span style=\"color:blue\">if</span> (PHPExcel_Shared_Date::isDateTime($cell)) {\r\n\t\t<span style=\"color:green\">//This prints the date according to the date in Excel. So far so good.</span>\r\n\t\t<span style=\"color:green\">//echo '<br>$data: '.PHPExcel_Style_NumberFormat::toFormattedString($cell-&gt;getValue(), &quot;M/D/YYYY&quot;).' --/-- '.PHPExcel_Style_NumberFormat::toFormattedString($cell-&gt;getValue(), &quot;YYYY-M-D&quot;).'<br>';</span>\r\n\r\n\t\t$data = PHPExcel_Style_NumberFormat::toFormattedString(iconv(<span style=\"color:#a31515\">&quot;UTF-8&quot;</span>, <span style=\"color:#a31515\">&quot;ISO-8859-1&quot;</span>, $cell-&gt;getFormattedValue()), <span style=\"color:#a31515\">&quot;yyyy-mm-dd&quot;</span>);\r\n\t\t$imp_data[$ic] = date(<span style=\"color:#a31515\">&quot;Y-m-d&quot;</span>,strtotime($data));\r\n\t\t\t\t\t\r\n\t\t<span style=\"color:green\">//Why doesn't next lines not working? I should like that this construction works because then I'm using the formatting of PHPExcel</span>\r\n\t\t<span style=\"color:green\">//$data = $cell-&gt;getFormattedValue()-&gt;setFormatCode(PHPExcel_Style_NumberFormat::FORMAT_DATE_YYYYMMDD2).'<br>';</span>\r\n\t\t<span style=\"color:green\">//$data = $cell-&gt;getCalculatedValue()-&gt;setFormatCode(PHPExcel_Style_NumberFormat::FORMAT_DATE_YYYYMMDD2).'<br>';</span>\r\n\t\t<span style=\"color:green\">//$data = $cell-&gt;getValue()-&gt;setFormatCode(PHPExcel_Style_NumberFormat::FORMAT_DATE_YYYYMMDD2).'<br>';</span>\r\n\t\t<span style=\"color:green\">//$data = $cell-&gt;getValue()-&gt;setFormatCode(PHPExcel_Style_NumberFormat::toFormattedString($cell-&gt;getValue(), &quot;yyyy-mm-dd&quot;));</span>\r\n\t\t<span style=\"color:green\">//$data = PHPExcel_Style_NumberFormat::toFormattedString($cell-&gt;getValue(), &quot;yyyy-mm-dd&quot;);</span>\r\n\t\t<span style=\"color:green\">//$data = $cell-&gt;getValue()-&gt;getNumberFormat()-&gt;setFormatCode(PHPExcel_Style_NumberFormat::FORMAT_DATE_YYYYMMDD2);</span>\r\n\t\t<span style=\"color:green\">//echo '$data: '.$ic.' --/--'.$data.'<br>';</span>\r\n\t} <span style=\"color:blue\">else</span> {\r\n\t\t<span style=\"color:green\">//echo '        Cell - ' , $cell-&gt;getCoordinate() , ' - ' , $cell-&gt;getCalculatedValue() , PHP_EOL;</span>\r\n\t\t<span style=\"color:green\">//echo '', $worksheet-&gt;getCell('G2')-&gt;getCalculatedValue(), '' , PHP_EOL;</span>\r\n\t\t$imp_data[$ic] = iconv(<span style=\"color:#a31515\">&quot;UTF-8&quot;</span>, <span style=\"color:#a31515\">&quot;ISO-8859-1&quot;</span>, $cell-&gt;getFormattedValue());\r\n\t}\r\n\t<span style=\"color:blue\">echo</span> <span style=\"color:#a31515\">''</span>, $imp_data[$ic], <span style=\"color:#a31515\">''</span> , PHP_EOL;\r\n\t$ic = $ic + 1;\r\n\t\t\t\t\r\n} <span style=\"color:blue\">else</span> {\r\n\t<span style=\"color:blue\">echo</span> <span style=\"color:#a31515\">'field is empty or not a date'</span>;\r\n}\r\n</pre>\r\n</div>\r\n<p></p>\r\n<p>Thanks in advance,</p>\r\n<p>Nico</p>\r\n",
    "PostedDate": "2012-11-24T02:41:04.057-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "946680",
    "ThreadId": "402778",
    "Html": "\r\n<div id=\"TranslationOutput\" dir=\"ltr\">\r\n<div><span>isDateTime returns true if you have a date (24/11/2012) an hour (16:10:00), or a date/time (24/11/2012 16:10:00) and variants of this (examples in my locales).</span></div>\r\n<br>\r\n<div><span><span>Therefore, it is not sufficient, except as a pre-filter: my value is a temporal data or not?\r\n</span><span>If not, write it in text, ignore it... </span><span>Your way.</span></span></div>\r\n<br>\r\n<div><span><span>If yes... </span><span>One way to proceed is to read the format and compare it to known formats to act accordingly.</span></span></div>\r\n<br>\r\n<div><span>To determine these known formats, that are not necessarily what you might think, the easiest is the rule of thumb: you display relevant cells of one of your files format.</span></div>\r\n<br>\r\n<div><span><span>How to display them? </span><span>Like this:</span></span></div>\r\n<div><span>echo $objPHPExcel-&gt;getActiveSheet()-&gt;getStyle ('A1')-&gt;getNumberFormat()-&gt;getFormatCode();</span></div>\r\n<div><span>Adapts the coordinates of the cell as needed.</span></div>\r\n<div><span><br>\r\n</span></div>\r\n<div><span>Note: the PHPExcel_Shared_Date class provides two static methods that convert an Excel time value to its equivalent php: ExcelToPHP and ExcelToPHPObject.</span></div>\r\n<div id=\"TranslationOutput\" dir=\"ltr\">This can avoid a step : ExcelValue-&gt;String-&gt;timestamp/object =&gt; ExcelValue-&gt;Timestamp/object. But, if you don't make tests on the timestamp/object, just doing a date_format/DateTime::Format to have a string for MySQL,\r\n take the short way : ExcelValue-&gt;MySQLString.</div>\r\n<div dir=\"ltr\"></div>\r\n<div><span>Your code snippet:</span></div>\r\n<div><span><span>//Why doesn't next lines not working? </span><span>I should like that this construction works because then I'm using the formatting of PHPExcel</span></span></div>\r\n<div><span>//$data = $cell-&gt; getFormattedValue()-&gt; setFormatCode (PHPExcel_Style_NumberFormat::FORMAT_DATE_YYYYMMDD2).'</span></div>\r\n<div><span>';</span></div>\r\n<div><span>Try to make a:</span></div>\r\n<div><span>var_dump($cell-&gt;getFormattedValue());</span></div>\r\n<div><span><span>in the same place or not far away. T</span><span>he dump gives you something that looks like an object?\r\n</span><span>I don't think so.</span></span></div>\r\n<div><span>And the logical consequence: when you are trying to call a method, php screams.</span></div>\r\n<div><span><br>\r\n</span></div>\r\n<div><span><span>setFormatCode is part of the Style_NumberFormat class, which is accessed by the class Style, collection of Style are in worksheet.\r\n</span><span>A cell has no property that contains (or a method that returns) an object of this class, you must use the Worksheet object, possibly indirectly ($cell-&gt;getParent()-&gt;getStyle($cell-&gt;getCoordinate())-&gt;getNumberFormat()-&gt;setFormatCode ('my_code')).</span></span></div>\r\n<div><span>However, setFormatCode allows you to change the format of a cell, I'm not sure this is the desired goal.</span></div>\r\n</div>\r\n",
    "PostedDate": "2012-11-25T08:54:20.59-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "949684",
    "ThreadId": "402778",
    "Html": "\r\n<div>\r\n<p><span style=\"font-size:10pt\">Hello LWol,</span></p>\r\n<p><span lang=\"EN-US\" style=\"font-size:10pt\">&nbsp;I do not understand everything what you are writing but that is more due to my English or that I something else expect from PHPExcel. I think I understand it so far that it is not possible what I want with PHPExcel\r\n and that I have to solve in another way around but then it's more difficult to maintain.\r\n<br>\r\n</span></p>\r\n<p><span lang=\"EN-US\" style=\"font-size:10pt\">There are 6 or 7 excel files used by different committees. These excel file’s, I'm usting to fill a MySQL database! So only what I want for now is reading from excel file's (and not writing to excel a file). And\r\n if&nbsp; understand it right then ‘</span>FORMAT_DATE_YYYYMMDD2’ can only be used for writing a value with a date format into a excel cell. I was expecting that this can be used for reading as well.</p>\r\n<p>But what I have made is more or less a piece of generic code for reading data from excel file's.</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">foreach</span> ($cellIterator <span style=\"color:blue\">as</span> $cell) {\r\n\t<span style=\"color:blue\">if</span> (!is_null($cell)) {\r\n\t\t<span style=\"color:blue\">if</span> (PHPExcel_Shared_Date::isDateTime($cell)) {\r\n\t\t\t$data = PHPExcel_Style_NumberFormat::toFormattedString(iconv(<span style=\"color:#a31515\">&quot;UTF-8&quot;</span>, <span style=\"color:#a31515\">&quot;ISO-8859-1&quot;</span>, $cell-&gt;getFormattedValue()), <span style=\"color:#a31515\">&quot;yyyy-mm-dd&quot;</span>);\r\n\t\t\t$imp_data[$ic] = date(<span style=\"color:#a31515\">&quot;Y-m-d&quot;</span>,strtotime($data));\r\n\t\t} <span style=\"color:blue\">else</span> {\r\n\t\t\t$imp_data[$ic] = iconv(<span style=\"color:#a31515\">&quot;UTF-8&quot;</span>, <span style=\"color:#a31515\">&quot;ISO-8859-1&quot;</span>, $cell-&gt;getFormattedValue());\r\n\t\t}\r\n\t\t<span style=\"color:blue\">echo</span> <span style=\"color:#a31515\">''</span>, $imp_data[$ic], <span style=\"color:#a31515\">''</span> , PHP_EOL;\r\n\t\t$ic = $ic + 1;\r\n\t\t\r\n\t} <span style=\"color:blue\">else</span> {\r\n\t\t<span style=\"color:blue\">echo</span> <span style=\"color:#a31515\">'field is empty or not a date'</span>;\r\n\t}\r\n}\r\n\r\n<span style=\"color:green\">//So if a new column is added with date time and I can distinguish columns by a mask</span>\r\n<span style=\"color:green\">//then I need only to do is to add a field name!</span>\r\n$sql  = <span style=\"color:#a31515\">&quot;INSERT INTO &quot;</span>.$tabel;\r\n<span style=\"color:blue\">if</span> ($tabel == <span style=\"color:#a31515\">'tabel 1'</span>) {\r\n\t$sql .= <span style=\"color:#a31515\">&quot; (`field1`,`field2`,`field3`,`field4`,`field5`)&quot;</span>;\r\n} <span style=\"color:blue\">elseif</span> ($tabel == <span style=\"color:#a31515\">'tabel 2'</span>) {\r\n\t$sql .= <span style=\"color:#a31515\">&quot; (`field1`,`field2`,`field3`)&quot;</span>;\r\n} <span style=\"color:blue\">elseif</span> ($tabel == <span style=\"color:#a31515\">'tabel 3'</span>) {\r\n\t$sql .= &quot; ( ...etc.\r\n}\r\n\r\n$sql .= <span style=\"color:#a31515\">&quot; VALUES (&quot;</span>;\r\n<span style=\"color:blue\">for</span> ($i = 0; $i &lt; $ic; $i++) {\r\n\t<span style=\"color:blue\">if</span> ($i == 0)\r\n\t\t$sql .= <span style=\"color:#a31515\">&quot;'&quot;</span>.mysql_real_escape_string($imp_data[$i]).<span style=\"color:#a31515\">&quot;'&quot;</span>;\r\n\t<span style=\"color:blue\">else</span> \r\n\t \t$sql .= <span style=\"color:#a31515\">&quot;,'&quot;</span>.mysql_real_escape_string($imp_data[$i]).<span style=\"color:#a31515\">&quot;'&quot;</span>;\r\n}\r\n$sql .= <span style=\"color:#a31515\">&quot;)&quot;</span>;\r\n</pre>\r\n</div>\r\n<br>\r\n<p>When I add a column between another column, then I only&nbsp; have to add the new column field in the query insert definition, give the right mask definition in excel and it works.</p>\r\n<p>But if it is not possible to distinguish a date, time and datetime fields from excelthenan is only another opportunity left.</p>\r\n<p>Then I must make it more dedicated like to look which table is filled and to look at which column is iterated. This works also fine, but if there is a new column added then I have to change cellIterator as well.</p>\r\n<p>I can live with it, but I should like a more generic solution..</p>\r\n<p>Another thing is maybe that I not know the limitations of PHPExcel or that I expecting something that it should work in way I think, but that it works different or not and that I have to solve in another way.</p>\r\n</div>\r\n",
    "PostedDate": "2012-11-30T12:23:26.577-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "951255",
    "ThreadId": "402778",
    "Html": "\r\n<p>Ok, sorry for my bad english. So, just code. In your isDateTime test :</p>\r\n<p></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">if</span> (PHPExcel_Shared_Date::isDateTime($cell)) {\r\n\t\t$LeFormat=$cell-&gt;getParent()-&gt;getStyle($cell-&gt;getCoordinate())-&gt;getNumberFormat()-&gt;getFormatCode();\r\n\t\t<span style=\"color:blue\">echo</span> <span style=\"color:#a31515\">'format : '</span>.$LeFormat;\r\n\t\t<span style=\"color:blue\">switch</span>($LeFormat){\r\n\t\t<span style=\"color:blue\">case</span> <span style=\"color:#a31515\">'mm-dd-yy'</span>:\r\n\t\t\t<span style=\"color:blue\">echo</span> <span style=\"color:#a31515\">'date only : '</span>.PHPExcel_Style_NumberFormat::toFormattedString($Cell-&gt;getValue(),PHPExcel_Style_NumberFormat::FORMAT_DATE_YYYYMMDD2);\r\n\t\t\t<span style=\"color:blue\">break</span>;\r\n\t\t<span style=\"color:blue\">case</span> <span style=\"color:#a31515\">'h:mm'</span>:\r\n\t\t\t<span style=\"color:blue\">echo</span> <span style=\"color:#a31515\">'time only : '</span>.PHPExcel_Style_NumberFormat::toFormattedString($Cell-&gt;getValue(),PHPExcel_Style_NumberFormat::FORMAT_DATE_TIME3);\r\n\t\t\t<span style=\"color:blue\">break</span>;\r\n\t\t<span style=\"color:blue\">case</span> <span style=\"color:#a31515\">'m/d/yy h:mm'</span>:\r\n\t\t\t<span style=\"color:blue\">echo</span> <span style=\"color:#a31515\">'date and time : '</span>.PHPExcel_Style_NumberFormat::toFormattedString($Cell-&gt;getValue(),<span style=\"color:#a31515\">'yyyy-mm-dd h:mm'</span>);\r\n\t\t\t<span style=\"color:blue\">break</span>;\r\n\t\t<span style=\"color:blue\">default</span>:\r\n\t\t\t<span style=\"color:blue\">echo</span> <span style=\"color:#a31515\">'???'</span>;\r\n\t\t}\t\r\n\t\t} <span style=\"color:blue\">else</span> {<span style=\"color:green\">//not a date and/or time</span>\r\n</pre>\r\n</div>\r\n<p></p>\r\n<p>Each case value is from a quick test file, but the snippet display the recorded format, you can add/modify if needed.</p>\r\n<p>The result is just displayed but you can store it in your $imp_data.</p>\r\n",
    "PostedDate": "2012-12-04T08:49:11.137-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "953563",
    "ThreadId": "402778",
    "Html": "\r\n<p>Hello LWol,</p>\r\n<p>Friday I've been reading the documentation! and installing the version 1.7.8. I know a little more but I think there is a bug in PHPExcel or it is due my regional settings (I'm dutch) or....</p>\r\n<p>In my excel I have the next column/row:</p>\r\n<ul>\r\n<li>first row (=header) all columns are tekst&nbsp; (english -&gt; text). </li><li>next rows:\r\n<ul>\r\n<li>column 1: cell property: <strong>datum</strong> -&gt; <strong>14-3-2001</strong>&nbsp; (english date -&gt; 14-3-2001)\r\n</li><li>column 2: cell property: <strong>Tijd</strong> -&gt; <strong>13:30:55</strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (english time -&gt; 13:30:55)\r\n</li><li>column 3 till 6: cell property: <strong>standaard</strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (english standard)\r\n</li></ul>\r\n</li></ul>\r\n<p>The next line is returning the format below:</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:green\">//This code I have read PHP developer documentation.doc. But you're code LWol returns the same result with getParent.</span>\r\n<span style=\"color:blue\">echo</span> $objPHPExcel -&gt;getActiveSheet()-&gt;getStyle($cell-&gt;getCoordinate())-&gt;getNumberFormat()-&gt;getFormatCode(), EOL;<br>&nbsp;</pre>\r\n</div>\r\n<p>Below is the result:</p>\r\n<p>&nbsp;</p>\r\n<p><strong>Row number - 1</strong> = header<br>\r\n<strong>@</strong> @ <strong>@</strong> @ <strong>@</strong> @<br>\r\n<strong>Row number - 2</strong><br>\r\n<strong>&nbsp;&nbsp; Column1&nbsp;&nbsp;&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</strong>Column2<strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Column3 </strong>\r\nColumn4<strong> Column5 </strong>Column6<br>\r\n<strong>mm-dd-yy</strong> [$-F400]h:mm:ss\\ AM/PM &nbsp;<strong>General</strong>&nbsp;&nbsp; General &nbsp;\r\n<strong>General</strong>&nbsp;&nbsp; General<br>\r\nRow number - 3<br>\r\nmm-dd-yy [$-F400]h:mm:ss\\ AM/PM General General General General<br>\r\nRow number - 4<br>\r\nmm-dd-yy [$-F400]h:mm:ss\\ AM/PM General General General General</p>\r\n<p>What is strange of course;</p>\r\n<ul>\r\n<li>text is returned by @!? I should expect the word 'text' or 'tekst'. </li><li>date format 14-3-2001 is returned by <strong>mm-dd-yy</strong>, while I should expect\r\n<strong>dd-mm-yyyy</strong>! </li><li>time format 13:30:55 is returned by <strong>[$-F400]h:mm:ss</strong>. While I should expect\r\n<strong>h:mm:ss</strong> </li><li>standard format is returned by General. This is what I expect. </li></ul>\r\n<p>Altough I don't prefer a custom cell property, I have tried by making:</p>\r\n<ul>\r\n<li>the first column custom with the property type -&gt; m-d-yyyy </li><li>the second column custom with the property type -&gt; u:mm:ss </li></ul>\r\n<p>returning value's are now:</p>\r\n<ul>\r\n<li>Column one is still&nbsp; returned by <strong>mm-dd-yy</strong>. This is still not what I expected. There is another remarkble thing with excel. After I have changed these cell to this property and I have saves the file, if I open the cell properties again then\r\n it is changed back to date with type 14-01-2001! Excel bug? </li><li>Column two is now returned by h:mm:ss. This is what I have expected </li></ul>\r\n<p>It make no difference if it is a xls or a xlsx file! I have both test it.</p>\r\n<p>Ok I can work further but it doesn't give me a could feeling because I can not explain why I do get these results. And with such a case, I'm asking myself always &quot;Am I the only one with this issue?&quot;</p>\r\n<ol>\r\n<li><strong>I can work now further but why do I not get the result what I expect? Does have somebody an explanation?</strong>\r\n</li><li><strong>Do I something wrong? </strong></li><li><strong>Is it due to my regional settings that I'm dutch? (I have check the regional settings they are d-m-yyyy and h:mm:ss)</strong>\r\n</li></ol>\r\n<p>Nico</p>\r\n",
    "PostedDate": "2012-12-09T09:25:49.723-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "954660",
    "ThreadId": "402778",
    "Html": "\r\n<p><span id=\"AjaxWaitImage\" style=\"visibility:hidden\"></span></p>\r\n<div><span>Excel has its way to him to manage the formats.</span></div>\r\n<div><span>PHPExcel has to do with and manage it in the same way.</span></div>\r\n<div><span>Did this small test in Excel:</span></div>\r\n<div><span>Creating a macro:</span></div>\r\n<div><span>Function NF(C as Range) as Variant</span></div>\r\n<div><span>NF = C.NumberFormat</span></div>\r\n<div><span>End Function</span></div>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<div><span>Somewhere in your sheet, called the formula =NF(A1)</span></div>\r\n<div><span>Replaces A1 with the coordinates of a cell that you want to inspect, and view the result...</span></div>\r\n<div><span>You can see that the predefined formats are often internally, noted in US form to which sometimes added localization parameters: [$-F400] is one.</span></div>\r\n",
    "PostedDate": "2012-12-11T08:58:52.57-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "956170",
    "ThreadId": "402778",
    "Html": "\r\n<p>Hi LWol,</p>\r\n<p>Thanks again.</p>\r\n<p>I did what you suggest this is more what I expected:</p>\r\n<p>Excel <span style=\"color:#0000ff\"><strong>Data</strong></span> cell range mask '<strong>14-03-2001</strong>,\r\n<span style=\"color:#0000ff\"><strong>NF functions</strong></span> returns: <strong>\r\nm/d/yyyy</strong>,&nbsp;&nbsp; <strong><span style=\"color:#0000ff\">PHPExcel returns</span></strong>: m/d/<strong>yy.\r\n</strong>I expect d/m/yyy, but I can live with m/d/yyy; US bigger than NL.</p>\r\n<p>Excel <span style=\"color:#0000ff\"><strong>Time</strong></span> cell range mask '*<strong>13:30:55</strong>,\r\n<strong><span style=\"color:#0000ff\">NF functions</span></strong> returns:<strong> [$-F400]h:mm:ss AM/PM</strong>,&nbsp;&nbsp;\r\n<strong><span style=\"color:#0000ff\">PHPExcel returns</span></strong>: [$-F400]h:mm:ss AM/PM. I should expect h:mm:ss.</p>\r\n<p>Excel <span style=\"color:#0000ff\"><strong>Time</strong></span> custom cell range mask '<strong>u:mm:ss</strong>,\r\n<span style=\"color:#0000ff\"><strong>NF functions</strong></span> returns: <strong>\r\nh:mm:ss</strong>,&nbsp;&nbsp; <strong><span style=\"color:#0000ff\">PHPExcel returns</span></strong>:\r\n<strong>u:mm:ss.</strong></p>\r\n<p>Maybe stuppid from me but ok [$-F400] is added due to predefined formats like US, but I do not understand is why a date format mask is returned by two year digits in stead of four year digits? Is this also that pHPExcel is using the US predifined formats?</p>\r\n<p>Nico</p>\r\n<p>&nbsp;</p>\r\n<p><strong><br>\r\n</strong></p>\r\n",
    "PostedDate": "2012-12-14T08:19:35.287-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "958179",
    "ThreadId": "402778",
    "Html": "\r\n<div id=\"TranslationOutput\" dir=\"ltr\">\r\n<div><span><span>For the predefined formats, Excel not literally writes them to the file, he noted only one identifier.\r\n</span><span>As a result, PHPExcel has a hard-coded list of predefined formats. </span>\r\n<span>There may be an error in this list, but I doubt it.</span></span></div>\r\n<div><span><span>A number of predefined formats can be adapted to the local configuration...\r\n</span><span>How... </span><span>This should be written in a big book;-) but the explanation on the number of digits of the year should be there.</span></span></div>\r\n<div><span>The letter &quot;u&quot; for hours is strange, however, find complete explanations is not easy (perhaps in the voluminous documentation of the Open XML formats, but I admit not watched).</span></div>\r\n<div><span>Side Excel, the local format can be seen by the NumberFormatLocal property, but this is not written in the file, even for custom formats.</span></div>\r\n</div>\r\n",
    "PostedDate": "2012-12-19T00:43:06.637-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "981024",
    "ThreadId": "402778",
    "Html": "\r\n<p>for me it is dramatic with the formats in Excel. BTW it is always dramatic with datetime value's but that besides. I have learned some more in Excel and that is, if a date is chosen with the format *14-03-2001 then the '*' will say that if the local settings\r\n are changed the format mask in Excel is changed as well.</p>\r\n<p>But there was another strange thing in Excel. I changed the format mask according to a format mask in another file. And when I read one file into the database then is was correct like '2012-11-28', so that works. But when I read the other file into the database\r\n then it was 1970/01/01 which is wrong. At the end I typed the value again in the Excel cell AND THEN IT BECAME LIKE THE FORMAT MASK as in the 'good' file. Don't ask me why?</p>\r\n<p>But here is my way I have solve it to get it working and all because of the reason that not the right format mask is comming from Excel or not good returned by PHPExcel:</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>$LeFormat=$cell-&gt;getParent()-&gt;getStyle($cell-&gt;getCoordinate())-&gt;getNumberFormat()-&gt;getFormatCode();\n<span style=\"color:green\">//test formaat bekijken</span>\n<span style=\"color:green\">//echo 'Format: '.$LeFormat.'<br>';</span>\n<span style=\"color:blue\">switch</span>($LeFormat){\n\t<span style=\"color:blue\">case</span> <span style=\"color:#a31515\">'mm-dd-yy'</span>:\n\t\t<span style=\"color:green\">/* if the formatted value is not empty, the is row nr. &gt; 0 (is not header row) and formatted value is not null, \n\t\tthen import the value as a date. \n\t\tThe PHPExcel construction PHPExcel_Shared_Date::isDateTime($cell) doesn't work because the format mask is a\n\t\tdate but if the cell is empty because it is not always mandatory to fill in a date.'\n\t\t*/</span>\n\t\t<span style=\"color:blue\">if</span> (($cell-&gt;getFormattedValue() !== <span style=\"color:#a31515\">''</span>) &amp;&amp; ($ir &gt; 0) &amp;&amp; (!is_null($cell-&gt;getFormattedValue())) ){\n\t\t\t$ExcelDate =  $cell-&gt;getFormattedValue();\n\t\t\t<span style=\"color:green\">// Make the format according to the MySQL date.</span>\n\t\t\t$aExcelDate = explode(<span style=\"color:#a31515\">'-'</span>, $ExcelDate);\n\t\t\t\t\t\t\t\n\t\t\t<span style=\"color:green\">//echo 'Format: '.$LeFormat.' -- '.$aExcelDate[1].'-'.$aExcelDate[0].'-'.$aExcelDate[2].'<br>';</span>\n\t\t\t<span style=\"color:green\">/* because of Excel is exporting or PHPExcel is importing not the full year. In stead of yyyy\n\t\t\tthe year is yy. So if the excel year is higher then this year then it means the member is\n\t\t\tborn in the 1900 century and otherwise in 2000 century. This gives problems if a member\n\t\t\tis older then 100 years!\n\t\t\t*/</span>\n\t\t\t$Current_Year\t\t= substr(date(<span style=\"color:#a31515\">'Y'</span>), 2, 2);\n\t\t\t<span style=\"color:blue\">if</span> ($aExcelDate[2] &gt; $Current_Year)\n\t\t\t\t$aExcelDate[2] = <span style=\"color:#a31515\">'19'</span>.$aExcelDate[2];\n\t\t\t<span style=\"color:blue\">else</span>\n\t\t\t\t$aExcelDate[2] = <span style=\"color:#a31515\">'20'</span>.$aExcelDate[2];\n\t\t\t$ExcelDate = date(<span style=\"color:#a31515\">'Y/m/d'</span>, strtotime($aExcelDate[1].<span style=\"color:#a31515\">'-'</span>.$aExcelDate[0].<span style=\"color:#a31515\">'-'</span>.$aExcelDate[2]));\n\t\t\t$imp_data[$ic] = $ExcelDate;\n\t\t} <span style=\"color:blue\">else</span>\n\t\t\t$imp_data[$ic] = iconv(<span style=\"color:#a31515\">&quot;UTF-8&quot;</span>, <span style=\"color:#a31515\">&quot;ISO-8859-1&quot;</span>, $cell-&gt;getFormattedValue());\n\t\t<span style=\"color:blue\">break</span>;\n\t\t<span style=\"color:blue\">case</span> <span style=\"color:#a31515\">'h:mm:ss'</span>:\n\t\t<span style=\"color:blue\">case</span> <span style=\"color:#a31515\">'h:mm'</span>:\n\t\t\t$imp_data[$ic] = $cell-&gt;getFormattedValue();\n\t\t\t<span style=\"color:blue\">break</span>;\n\t\t<span style=\"color:blue\">case</span> <span style=\"color:#a31515\">'m/d/yy h:mm'</span>:\n\t\t\t$imp_data[$ic] = <span style=\"color:#a31515\">'Eerst uitzoeken het format'</span>;\n\t\t\t<span style=\"color:blue\">break</span>;\n\t\t<span style=\"color:blue\">default</span>:\n\t\t\t$imp_data[$ic] = iconv(<span style=\"color:#a31515\">&quot;UTF-8&quot;</span>, <span style=\"color:#a31515\">&quot;ISO-8859-1&quot;</span>, $cell-&gt;getFormattedValue());\n\t} \n</pre>\r\n</div>\r\n<p>}</p>\r\n<p>&nbsp;</p>\r\n<p>On this moment I have to less knowledge from Excel and PHPExcel to know where it is going wrong. But because of the year is in PHP only two digits, you have todo strange thing in the code.</p>\r\n<p>But maybe maybe is the new Excel version working correctly or is fixed in PHPExcel....</p>\r\n<p>&nbsp;</p>\r\n<p>LWol, I don't know if you are involved in the PHPExcel team, but anyway thanks for you're support! I have really appreceated.</p>\r\n",
    "PostedDate": "2012-12-27T14:59:05.997-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "984455",
    "ThreadId": "402778",
    "Html": "\r\n<p>For case 'mm-dd-yy', just ask to PHPExcel :</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><div style=\"color:black; background-color:white\"><pre>$imp_data[$ic]=PHPExcel_Style_NumberFormat::toFormattedString($cell-&gt;getValue(),PHPExcel_Style_NumberFormat::FORMAT_DATE_YYYYMMDD2);<span style=\"color:green\">// give a string like '2013-01-09', nice to insert in SQL</span>\n<span style=\"color:green\">//or</span>\n$imp_data[$ic]=PHPExcel_Style_NumberFormat::toFormattedString($cell-&gt;getValue(),<span style=\"color:#a31515\">'yyyy/mm/dd'</span>);<span style=\"color:green\">//a string like '2013/01/09'</span>\n<span style=\"color:green\">//or</span>\n$imp_data[$ic]=PHPExcel_Shared_Date::ExcelToPHP($cell-&gt;getValue());<span style=\"color:green\">// a php date, if you need</span>\n</pre>\n</div>\n<pre></pre>\n</pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p><span>You can have problems if you have members born before 1900 but i think you need another case in your switch for this (not the same number format).</span></p>\r\n<p><span>A small note : </span></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>$Current_Year\t\t= substr(date(<span style=\"color:#a31515\">'Y'</span>), 2, 2);<span style=\"color:green\">//ok...</span>\n<span style=\"color:green\">//but try : </span>\n$Current_Year=date(<span style=\"color:#a31515\">'y'</span>);\n</pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p><span><br>\r\n</span></p>\r\n",
    "PostedDate": "2013-01-09T05:35:43.683-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]