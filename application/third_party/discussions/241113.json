[
  {
    "Id": "546550",
    "ThreadId": "241113",
    "Html": "\r\n<p>I just got a couple of Excel2003 files and tried to read them with PHPExcel (1.7.5), which failed.</p>\r\n<p>The first thing I found was the format detection in canRead(): &quot;my&quot; files had the signature</p>\r\n<p></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">&lt;?</span><span style=\"color:#a31515\">xml</span> <span style=\"color:red\">version</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">1.0</span><span style=\"color:black\">&quot;</span> <span style=\"color:red\">encoding</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">UTF-8</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">?&gt;</span>\r\n<span style=\"color:blue\">&lt;?</span><span style=\"color:#a31515\">mso-application</span> <span style=\"color:red\">progid</span><span style=\"color:blue\">=</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">Excel.Sheet</span><span style=\"color:black\">&quot;</span><span style=\"color:blue\">?&gt;</span>\r\n</pre>\r\n</div>\r\n<p></p>\r\n<p>which is definitely correct, but does not fit to the existing code. So I changed canRead() to</p>\r\n<p></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>        <span style=\"color:blue\">public</span> <span style=\"color:blue\">function</span> canRead($pFilename)\r\n        {\r\n\r\n<span style=\"color:green\">//      Office                                  xmlns:o=&quot;urn:schemas-microsoft-com:office:office&quot;</span>\r\n<span style=\"color:green\">//      Excel                                   xmlns:x=&quot;urn:schemas-microsoft-com:office:excel&quot;</span>\r\n<span style=\"color:green\">//      XML Spreadsheet                 xmlns:ss=&quot;urn:schemas-microsoft-com:office:spreadsheet&quot;</span>\r\n<span style=\"color:green\">//      Spreadsheet component   xmlns:c=&quot;urn:schemas-microsoft-com:office:component:spreadsheet&quot;</span>\r\n<span style=\"color:green\">//      XML schema                              xmlns:s=&quot;uuid:BDC6E3F0-6DA3-11d1-A2A3-00AA00C14882&quot;</span>\r\n<span style=\"color:green\">//      XML data type                   xmlns:dt=&quot;uuid:C2F41010-65B3-11d1-A29F-00AA00C14882&quot;</span>\r\n<span style=\"color:green\">//      MS-persist recordset    xmlns:rs=&quot;urn:schemas-microsoft-com:rowset&quot;</span>\r\n<span style=\"color:green\">//      Rowset                                  xmlns:z=&quot;#RowsetSchema&quot;</span>\r\n<span style=\"color:green\">//</span>\r\n\r\n                $signature = <span style=\"color:blue\">array</span>(\r\n                                <span style=\"color:#a31515\">'&lt;?xml version=&quot;1.0&quot;'</span>,\r\n                                <span style=\"color:#a31515\">'&lt;?mso-application progid=&quot;Excel.Sheet&quot;?&gt;'</span>\r\n                        );\r\n\r\n                <span style=\"color:green\">// Check if file exists</span>\r\n                <span style=\"color:blue\">if</span> (!file_exists($pFilename)) {\r\n                        <span style=\"color:blue\">throw</span> <span style=\"color:blue\">new</span> Exception(<span style=\"color:#a31515\">&quot;Could not open &quot;</span> . $pFilename . <span style=\"color:#a31515\">&quot; for reading! File does not exist.&quot;</span>);\r\n                }\r\n\r\n                <span style=\"color:green\">// Read sample data (first 2 KB will do)</span>\r\n                $fh = fopen($pFilename, <span style=\"color:#a31515\">'r'</span>);\r\n                $data = fread($fh, 2048);\r\n                <span style=\"color:blue\">fclose</span>($fh);\r\n\r\n                $valid = true;\r\n                <span style=\"color:blue\">foreach</span>($signature <span style=\"color:blue\">as</span> $match) {\r\n                        <span style=\"color:green\">// every part of the signature must be present</span>\r\n                        <span style=\"color:blue\">if</span> (strpos($data, $match) === false) {\r\n                                $valid = false;\r\n                                <span style=\"color:blue\">break</span>;\r\n                        }\r\n                }\r\n\r\n                <span style=\"color:blue\">return</span> $valid;\r\n        }\r\n\r\n</pre>\r\n</div>\r\nwhich does the trick for me (though I don't know if there might be other differences, too).\r\n<p></p>\r\n<p>After that I ran into a namespace problem. &quot;My&quot; excel file uses &lt;ss:Worksheet ...&gt;&lt;/ss:Worksheet&gt;, but in Excel2003XML.php it says</p>\r\n<p></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">foreach</span>($xml-&gt;Worksheet <span style=\"color:blue\">as</span> $worksheet) { ... }</pre>\r\n</div>\r\n<p></p>\r\n<p>which does only address child elements without a namespace (SimpleXML is kind of a PITA as soon as namespaces are involved). Changing this to</p>\r\n<p></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>$children = $xml-&gt;children($namespaces[<span style=\"color:#a31515\">'ss'</span>]);\r\n<span style=\"color:blue\">foreach</span>($children-&gt;Worksheet <span style=\"color:blue\">as</span> $worksheet) {</pre>\r\n</div>\r\nwas enough to fix it for me - however, this relies on the nickname &quot;ss&quot; for the spreadsheet-namespace, which should be fine in most cases, but is not guaranteed by any specification (I just wonder why this was missing in the code - I have not managed to get\r\n a single Excel2003-file without the ss-namespace for the Worksheet-tag).\r\n<p></p>\r\n",
    "PostedDate": "2011-01-10T02:41:11.31-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "546568",
    "ThreadId": "241113",
    "Html": "\r\n<p>I'll modify the signature test. My original test workbooks didn't have encoding specified, hence the signature that I was checking for. I'll make this more generic, and put in a charset conversion (with appropriate default if no encoding is specified, to\r\n ensure that data is always maintained as UTF-8.</p>\r\n<p>You might want to try using the latest SVN code for the actual load() mathod, because I have made some changes to this reader since the 1.7.5 release, for handling the ss namespace. I'm unsure about whether the ss namespace is always enforced (I suspect\r\n not, otherwise the original Reader would never have worked), but it certainly appears in all the XML workbooks I've saved recently. But, I'll see about modifying the code&nbsp;to handle either case.</p>\r\n<p>I just wish the format was consistent</p>\r\n",
    "PostedDate": "2011-01-10T03:26:42.07-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "546804",
    "ThreadId": "241113",
    "Html": "\r\n<p>Ah, yes, the second issue is in fact already solved in the trunk. (I'd guess, the nick &quot;ss&quot; is consistenly used for the namespace, but... well, you can't blame anyone if he does not, that's the problem). AFAIK the correct way should be to call the namespaces\r\n by their URI, e.g.</p>\r\n<p>&nbsp;</p>\r\n<pre><div style=\"color:black; background-color:white\"><pre><div style=\"color:black; background-color:white\"><pre>$namespaces[<span style=\"color:#a31515\">'ss'</span>] = <span style=\"color:#a31515\">&quot;urn:schemas-microsoft-com:office:spreadsheet&quot;</span>;\r\n$namespaces[<span style=\"color:#a31515\">'c'</span>] = <span style=\"color:#a31515\">&quot;...&quot;</span>;\r\n[...]\r\n$xml_ss = $xml-&gt;children($namespaces[<span style=\"color:#a31515\">'ss'</span>]);\r\n<span style=\"color:blue\">foreach</span>($xml_ss-&gt;Worksheet <span style=\"color:blue\">as</span> $worksheet) { } \r\n<br><br>which would make you independent of any nicknames (I haven't tried this, though). It's basically a similar precaution than adding the charset conversion, because even though sometimes the encoding is explicitely specified by Excel I have never seen anything else than UTF-8.<br><br>Thanks for taking care about this anyway!</pre>\r\n</div>\r\n</pre>\r\n</div>\r\n</pre>\r\n",
    "PostedDate": "2011-01-10T09:11:48.393-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]