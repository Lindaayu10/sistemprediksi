[
  {
    "Id": "1011043",
    "ThreadId": "435551",
    "Html": "OS:Window 7 \r<br />\nPHP Version 5.4.7\r<br />\nPHPExcel_1.7.8\r<br />\nphp-excel-reader-2.21\r<br />\n<br />\n<br />\nI am using PHPExcel reader to read .xls format, on the given example (example.xls) of course it works fine all the content of the excel file was there. And then I tried to pass all the attribute and content using jquery and json and resaving the file again,  I look at the content using openoffice calc all the content and other attribute is still there even the background color, but upon reloading the webpage the background color has gone but there's no error., by the way I use PHPExcel 1.7.8 to re write it unto the file.<br />\n\r<br />\nAnyone knows why's that happen?\r<br />\nanother question:\r<br />\nis this the only option to merge cells &quot; $objPHPExcel-&gt;getActiveSheet()-&gt;mergeCells('A1:A3') ?&quot; \r<br />\nnothing like $objPHPExcel-&gt;getActiveSheet()-&gt;getStyle($content-&gt;tdid)-&gt;setRowspan(4); ??\r<br />\n<br />\nThanks.<br />\n",
    "PostedDate": "2013-03-06T01:22:54.813-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1011055",
    "ThreadId": "435551",
    "Html": "<strong>lilmer wrote:</strong><br />\n<blockquote>\nI am using PHPExcel reader to read .xls format, on the given example (example.xls) of course it works fine all the content of the excel file was there. And then I tried to pass all the attribute and content using jquery and json and resaving the file again,  I look at the content using openoffice calc all the content and other attribute is still there even the background color, but upon reloading the webpage the background color has gone but there's no error., by the way I use PHPExcel 1.7.8 to re write it unto the file.  \n<br />\n</blockquote>\nCan you please provide some code to show what you are doing; I don't understand what json and jquery have to do with PHPExcel<br />\n<blockquote>\nis this the only option to merge cells &quot; $objPHPExcel-&gt;getActiveSheet()-&gt;mergeCells('A1:A3') ?&quot; <br />\nnothing like $objPHPExcel-&gt;getActiveSheet()-&gt;getStyle($content-&gt;tdid)-&gt;setRowspan(4); ??<br />\n</blockquote>\nmergeCells() is the only option to merge cells.... merged cells aren't a style feature, they're a structural feature, so using getStyle would be meaningless in the context of merging cells<br />\n",
    "PostedDate": "2013-03-06T01:46:22.763-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1011064",
    "ThreadId": "435551",
    "Html": "Ok. I just going think solutions to merge cells. . Thansk btw! <br />\n<br />\nthis is my code passing the content of the table from a web page using json and jquery:<br />\n<pre><code>  $('#sheet tbody tr').each(function(){\n          var trid = $(this).attr('id');   \n\n          $(this).find('td').each(function(){                  \n          var tdcontent =  $(this).html(); //do whatever you want with the text\n            var tdID =  $(this).attr('id'); \n            var tdStyle =  $(this).attr('style');\n            var tdrowspan =  $(this).attr('rowspan');\n            var tdcolspan =  $(this).attr('colspan');\n\n            data[i] = {'tdid': tdID, 'content': tdcontent,'style':tdStyle , 'rowspan' : tdrowspan , 'colspan' : tdcolspan}; \n\n            newArray.push(data[i]);       \n\n          });\n\n\n      });\n\n       $.ajax({\n                type: &quot;POST&quot;,\n                url: &quot;json.php&quot;,\n                dataType: 'html',\n                data: { json_1 : JSON.stringify(newArray), json_2 : JSON.stringify(newArray1) ,'key' : fileKey},\n                success: function(response){                           \n\n                          $('#output').html(response);\n                  }\n              }); \n\n\n</code></pre>\n\nUpon getting the value I do this:<br />\n<pre><code>  $jsonData1 = json_decode($jsonData_1);     \n  foreach($jsonData1 as $row =&gt; $content) {  \n  $worksheet-&gt;setCellValue($content-&gt;tdid,$content-&gt;content);    \n\n  $style = explode(';', $content-&gt;style);  \n\n  foreach($style as $att =&gt; $con){  \n\n      $newvar = array();\n\n      list($attr ,$value) = explode(':', $con);\n\n      if($attr){\n         // echo $content-&gt;tdid;\n          $newvar[$attr] = $value;\n\n          echo $content-&gt;tdid.$att.'&lt;br&gt;';\n\n          foreach($newvar as $att =&gt; $theval){\n\n              //Setting up the background color\n\n              if($att == 'background-color' ){\n\n                  if(($theval =='red') || ($theval =='FF0000') || ($theval =='#FF0000')){\n                     $worksheet-&gt;getStyle($content-&gt;tdid)-&gt;getFill()-&gt;setFillType(PHPExcel_Style_Fill::FILL_SOLID)\n                     -&gt;getStartColor()-&gt;setARGB('FFFF0000');\n                  }    \n\n                   if(($theval =='green') || ($theval =='008000') || ($theval =='#008000')){\n                     $worksheet-&gt;getStyle($content-&gt;tdid)-&gt;getFill()-&gt;setFillType(PHPExcel_Style_Fill::FILL_SOLID)\n                     -&gt;getStartColor()-&gt;setARGB('FF008000');\n                  }\n\n                  if(($theval =='blue') || ($theval =='0066CC') || ($theval =='#0066CC')){\n                     $worksheet-&gt;getStyle($content-&gt;tdid)-&gt;getFill()-&gt;setFillType(PHPExcel_Style_Fill::FILL_SOLID)\n                     -&gt;getStartColor()-&gt;setARGB('FF0000FF');\n                  }\n\n                  if(($theval =='yellow') || ($theval =='FFFF00') || ($theval =='#FFFF00')){\n                     $worksheet-&gt;getStyle($content-&gt;tdid)-&gt;getFill()-&gt;setFillType(PHPExcel_Style_Fill::FILL_SOLID)\n                     -&gt;getStartColor()-&gt;setARGB('FFFFFF00');\n                  }                     \n\n\n              }\n\n\n          }\n\n      }\n\n  }\n\n</code></pre>\n\n}<br />\n<br />\n<br />\nOkay. . again I tested the file. and I change the background color using openoffice calc and the PHPExcel reader wont retrieve the background color. . I think the problem is on the PHPExcel_reader<br />\n",
    "PostedDate": "2013-03-06T01:58:35.587-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1011068",
    "ThreadId": "435551",
    "Html": "q<br />\n",
    "PostedDate": "2013-03-06T02:04:40.803-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1011072",
    "ThreadId": "435551",
    "Html": "Ok. I just going think solutions to merge cells. . Thansk btw! \r<br />\n<br />\nthis is my code passing the content of the table from a web page using json and jquery:<br />\n<pre><code>  $('#sheet tbody tr').each(function(){\n          var trid = $(this).attr('id');   \n\n          $(this).find('td').each(function(){                  \n          var tdcontent =  $(this).html(); //do whatever you want with the text\n            var tdID =  $(this).attr('id'); \n            var tdStyle =  $(this).attr('style');\n            var tdrowspan =  $(this).attr('rowspan');\n            var tdcolspan =  $(this).attr('colspan');\n\n            data[i] = {'tdid': tdID, 'content': tdcontent,'style':tdStyle , 'rowspan' : tdrowspan , 'colspan' : tdcolspan}; \n\n            newArray.push(data[i]);       \n\n          });\n\n\n      });\n\n       $.ajax({\n                type: &quot;POST&quot;,\n                url: &quot;json.php&quot;,\n                dataType: 'html',\n                data: { json_1 : JSON.stringify(newArray), json_2 : JSON.stringify(newArray1) ,'key' : fileKey},\n                success: function(response){                           \n\n                          $('#output').html(response);\n                  }\n              }); \n\n\n</code></pre>\n\nUpon getting the value I'll do this:<br />\n<pre><code>  $jsonData1 = json_decode($jsonData_1);     \n  foreach($jsonData1 as $row =&gt; $content) {  \n  $worksheet-&gt;setCellValue($content-&gt;tdid,$content-&gt;content);    \n\n  $style = explode(';', $content-&gt;style);  \n\n  foreach($style as $att =&gt; $con){  \n\n      $newvar = array();\n\n      list($attr ,$value) = explode(':', $con);\n\n      if($attr){\n         // echo $content-&gt;tdid;\n          $newvar[$attr] = $value;\n\n          echo $content-&gt;tdid.$att.'&lt;br&gt;';\n\n          foreach($newvar as $att =&gt; $theval){\n\n              //Setting up the background color\n\n              if($att == 'background-color' ){\n\n                  if(($theval =='red') || ($theval =='FF0000') || ($theval =='#FF0000')){\n                     $worksheet-&gt;getStyle($content-&gt;tdid)-&gt;getFill()-&gt;setFillType(PHPExcel_Style_Fill::FILL_SOLID)\n                     -&gt;getStartColor()-&gt;setARGB('FFFF0000');\n                  }    \n\n                   if(($theval =='green') || ($theval =='008000') || ($theval =='#008000')){\n                     $worksheet-&gt;getStyle($content-&gt;tdid)-&gt;getFill()-&gt;setFillType(PHPExcel_Style_Fill::FILL_SOLID)\n                     -&gt;getStartColor()-&gt;setARGB('FF008000');\n                  }\n\n                  if(($theval =='blue') || ($theval =='0066CC') || ($theval =='#0066CC')){\n                     $worksheet-&gt;getStyle($content-&gt;tdid)-&gt;getFill()-&gt;setFillType(PHPExcel_Style_Fill::FILL_SOLID)\n                     -&gt;getStartColor()-&gt;setARGB('FF0000FF');\n                  }\n\n                  if(($theval =='yellow') || ($theval =='FFFF00') || ($theval =='#FFFF00')){\n                     $worksheet-&gt;getStyle($content-&gt;tdid)-&gt;getFill()-&gt;setFillType(PHPExcel_Style_Fill::FILL_SOLID)\n                     -&gt;getStartColor()-&gt;setARGB('FFFFFF00');\n                  }                     \n\n\n              }\n\n\n          }\n\n      }\n\n  }\n\n</code></pre>\n\n}\r<br />\n<br />\n<br />\nOkay. . again I tested the file. and I change the background color using openoffice calc and the PHPExcel reader wont retrieve the background color<br />\n",
    "PostedDate": "2013-03-06T02:09:55.56-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]