[
  {
    "Id": "831368",
    "ThreadId": "354325",
    "Html": "\r\n<p>I'm going to use it to do offline export of a very large file (~8 MB).</p>\r\n<p>I'm not too concern if it would take few seconds vs. few minutes, but I would like to know if it is possible.</p>\r\n<p>Thanks</p>\r\n",
    "PostedDate": "2012-05-02T15:34:29.033-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "831391",
    "ThreadId": "354325",
    "Html": "<p>That all depends on PHP memory settings, caching methods, size of content (number of sheets, cells, strings in cells, rich text content), amount of formatting and whether it's cell or row/column level formatting, number of styles, use of features such as conditional formatting, whether you want to read, write or both (and what formats) and is almost impossible to answer.</p>\n<p>My rule of thumb is 1k/cell (1.6k/cell on 64-bit PHP) without caching; but the only real way to find out is to try and see, although the caching table in <a href=\"http://phpexcel.codeplex.com/discussions/234150?ProjectName=phpexcel\">this thread </a>might help.</p>",
    "PostedDate": "2012-05-02T16:31:28.04-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "831497",
    "ThreadId": "354325",
    "Html": "<p>In the past I've been able to generate worksheets with about 150K rows, and 10-20 columns. That was about the limit of my setup (which had 24GB of memory at the time). &nbsp;Layout was relatively simple, but the amount of data was rather huge. This causes PHPExcel  to use a lot of memory, as the architecture demands all data to be resident in memory.</p>\n<p>&nbsp;</p>\n<p>Please note though, that generation of this size of worksheets may take hours rather than minutes or seconds ;)</p>",
    "PostedDate": "2012-05-03T01:06:22.257-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]