[
  {
    "Id": "587560",
    "ThreadId": "251480",
    "Html": "\r\n<p>I have been given an excel file to read into a database that needs serious&nbsp;cross table referencing&nbsp;for validation. The client absolutely cannot be trusted, so I need a bulletproof system of checking for encoding of the supplied csv and encryption\r\n into the utf8 to match the database.</p>\r\n<p>&nbsp;</p>\r\n<p>My problem:</p>\r\n<p>Import the csv.</p>\r\n<p>Check the csv encoding.</p>\r\n<p>Change the encoding IF NECESSARY.</p>\r\n<p>write to array</p>\r\n<p>loop throught the array, validate the fields and write to screen grid showing validation errors. Rows that fail validation are able to be edited in the screen and submission is able to be tried again.</p>\r\n<p>&nbsp;</p>\r\n<p>The problem is that I cannot get past the write toarray unless the file provided is UTF8, as the norwegian special characters seem to break the toArray function a little. Basically, everytime I reach a special character, the rest of the row is ignored.</p>\r\n<p>&nbsp;</p>\r\n<p>So once I have loaded the CSV into a PHPObject worksheet, I need to know what encoding it uses and convert it without damaging it. Yes, they should just supply it in the utf8 format, but we all know that clients are not to be trusted, and they also can't\r\n control the actions of their staff.</p>\r\n<p>&nbsp;</p>\r\n<p>What do you think? Is this easy, or do I have to open the file &nbsp;with native php functions and convert the string before I give it to PHPExcel?</p>\r\n<p>&nbsp;</p>\r\n<p>Much appreciate the reading, hope to hear from someone soon.</p>\r\n<p>&nbsp;</p>\r\n<p>Plumper</p>\r\n",
    "PostedDate": "2011-03-28T06:41:22.793-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "587562",
    "ThreadId": "251480",
    "Html": "<p>Hi Plumper,</p>\r\n<p>&nbsp;</p>\r\n<p>Why would oyu need PHPExcel? It seems to me, you might as well use the native csv reading functions of php. That will make your code faster and easier to maintain. Since csv is a plain text format (and thus has no metadata), there is no bulletproof way to determine encoding.&nbsp; :(</p>\r\n<p>&nbsp;</p>\r\n<p>Mike</p>",
    "PostedDate": "2011-03-28T06:48:34.37-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "587568",
    "ThreadId": "251480",
    "Html": "<p>I see. Thanks for the quick reply.</p>\r\n<p>I am using the PHPExcel library to future proof it against future requirements to upload any spreadsheet format to the application. I am starting with CSV functionality and then moving into the xls, xlsx formats, then OOcalc.</p>\r\n<p>Anyway, I have a serious time constraint on this iteration now, so I think I will just take your advice for now and look at this again in the future.</p>\r\n<p>&nbsp;</p>\r\n<p>Thanks again.</p>\r\n<p>&nbsp;</p>\r\n<p>PLumper</p>",
    "PostedDate": "2011-03-28T06:55:28.47-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]