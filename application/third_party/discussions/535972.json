[
  {
    "Id": "1216405",
    "ThreadId": "535972",
    "Html": "I am new to PHPExcel and have run into an issue and was hoping to get some guidance. <br />\n<br />\nI have modified the 30template.php example file. My goal is to be able to run queries against MySQL and populate the results into a template file. I need to actually loop over the template and generate (at current count) 89 new worksheets in the same workbook.<br />\n<br />\nI added in my first query and, in so doing, the script now fails to write the file and it is throwing errors upon execution. Interestingly, I am not doing anything with the query data. No part of the script has changed so I am mystified why it breaks upon adding the query. <br />\n<br />\nCan anyone see what is going on here and/or advise on 'best practices' to achieve my goal (stated above)? Here is my code:<br />\n<pre><code>&lt;?php\n/**\n * PHPExcel\n *\n * Copyright (C) 2006 - 2013 PHPExcel\n *\n * This library is free software; you can redistribute it and/or\n * modify it under the terms of the GNU Lesser General Public\n * License as published by the Free Software Foundation; either\n * version 2.1 of the License, or (at your option) any later version.\n *\n * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public\n * License along with this library; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n *\n * @category   PHPExcel\n * @package    PHPExcel\n * @copyright  Copyright (c) 2006 - 2013 PHPExcel (http://www.codeplex.com/PHPExcel)\n * @license    http://www.gnu.org/licenses/old-licenses/lgpl-2.1.txt    LGPL\n * @version    1.7.9, 2013-06-02\n */\n\n/** Error reporting */\nerror_reporting(E_ALL);\nini_set('display_errors', TRUE);\nini_set('display_startup_errors', TRUE);\n\ndefine('EOL',(PHP_SAPI == 'cli') ? PHP_EOL : '&lt;br /&gt;');\n\ndate_default_timezone_set('America/Chicago');\n\n/** PHPExcel_IOFactory */\nrequire_once '/phpexcel/Classes/PHPExcel/IOFactory.php';\n\n// Need to get which fields to use based on pool type\n// Need to gather data to populate excel fields\n\n// Testing variables\ninclude 'init.php';\n$event_id = 25;\n$pool_type = &quot;5pool&quot;;\n$pool_name = &quot;Pool_C4A_1&quot;;\n\n// Static variables\n$filename = &quot;PSG_PoolCard_Template2.xlsx&quot;;\n$dir = &quot;files/PSG_PoolCard_Template2.xlsx&quot;;\n\necho date('H:i:s') , &quot; Load from Excel2007 template&quot; , EOL;\n$objReader = PHPExcel_IOFactory::createReader('Excel2007');\n$objPHPExcel = $objReader-&gt;load($dir);\n\n$init_cnt = &quot;&quot;;\n\n\necho date('H:i:s') , &quot; Add new data to the template&quot; , EOL;\n\n\n\n\n//Query to get pool names and associated schedule types\n$query = &quot;SELECT DISTINCT(event_team.pool_name), event_team.pool_sched_type, event_div.div_id, event_team.div_sname, event_team.pool_num, event_team.div_lname\n        FROM event_team, event_div, divisions \n        WHERE event_team.div_lname = divisions.div_lname \n        AND event_div.div_id = divisions.div_id \n        AND event_team.event_id = $event_id \n        AND event_team.active = 1 \n        AND event_team.pool_name IS NOT NULL \n        ORDER BY event_team.pool_name;&quot;;\n\n//echo &quot;|&quot;.$query.&quot;|&lt;br&gt;&quot;;   // Leave this line for debugging the sql query.\n\n$result = mysqli_query($conn, $query);\n    \nif (!$result) \n{\n    echo &quot;Could not run query: $query&quot; . mysqli_error($conn);\n    exit;\n}\n\n// Declare variables\n$pool_name = array();\n$pool_sched_type = array();\n$div_id = array();\n$div_sname = array();\n$pool_num = array();\n$div_lname = array();\n\n/// Push data into the arrays\nwhile ($row = mysqli_fetch_row($result))\n{\n    array_push ($pool_name, $row[0]);\n    array_push ($pool_sched_type, $row[1]);\n    array_push ($div_id, $row[2]);\n    array_push ($div_sname, $row[3]);\n    array_push ($pool_num, $row[4]);\n    array_push ($div_lname, $row[5]);\n    //array_push ($div_name, mysql_real_escape_string($row[1]));\n}   \n\n\n\n\n\n\nif ($pool_type == &quot;4pool&quot;)\n{\n    $newSheet = clone $objPHPExcel-&gt;getSheetByName(&quot;4team&quot;);\n    $newSheet-&gt;setTitle($pool_name);\n    $init_cnt = $objPHPExcel-&gt;getSheetCount();\n    //echo date('H:i:s') , &quot; Sheet count is &quot;.$init_cnt , EOL;\n    //$new_cnt = $init_cnt+1;\n    //$newSheetIndex = $new_cnt;\n    //echo date('H:i:s') , &quot; NEW sheet count is &quot;.$new_cnt , EOL;\n    $objPHPExcel-&gt;addSheet($newSheet,$init_cnt); // Use $init_cnt because sheets are 0 indexed\n    \n    $objPHPExcel-&gt;setActiveSheetIndex($init_cnt)\n                           -&gt;setCellValue('C3', &quot;Coed&quot;)\n                           -&gt;setCellValue('C5', &quot;pool_name&quot;)\n                           -&gt;setCellValue('C7', &quot;A1&quot;)\n                           -&gt;setCellValue('F4', &quot;Team 1&quot;)\n                           -&gt;setCellValue('F5', &quot;Team 2&quot;)\n                           -&gt;setCellValue('F6', &quot;Team 3&quot;)\n                           -&gt;setCellValue('F7', &quot;Team 4&quot;);  \n}\n\nif ($pool_type == &quot;5pool&quot;)\n{\n    $newSheet = clone $objPHPExcel-&gt;getSheetByName(&quot;5team&quot;);\n    $newSheet-&gt;setTitle($pool_name);\n    $init_cnt = $objPHPExcel-&gt;getSheetCount();\n    //echo date('H:i:s') , &quot; Sheet count is &quot;.$init_cnt , EOL;\n    //$new_cnt = $init_cnt+1;\n    //$newSheetIndex = $new_cnt;\n    //echo date('H:i:s') , &quot; NEW sheet count is &quot;.$new_cnt , EOL;\n    $objPHPExcel-&gt;addSheet($newSheet,$init_cnt); // Use $init_cnt because sheets are 0 indexed\n    \n    $objPHPExcel-&gt;setActiveSheetIndex($init_cnt)\n                           -&gt;setCellValue('C3', &quot;Coed&quot;)\n                           -&gt;setCellValue('C5', &quot;pool_name&quot;)\n                           -&gt;setCellValue('C7', &quot;A1&quot;)\n                           -&gt;setCellValue('C9', &quot;A2&quot;)\n                           -&gt;setCellValue('G4', &quot;Team 1&quot;)\n                           -&gt;setCellValue('G5', &quot;Team 2&quot;)\n                           -&gt;setCellValue('G6', &quot;Team 3&quot;)\n                           -&gt;setCellValue('G7', &quot;Team 4&quot;)\n                           -&gt;setCellValue('G8', &quot;Team 5&quot;);  \n}\n\n//$objPHPExcel-&gt;getActiveSheet()-&gt;setCellValue('D1', PHPExcel_Shared_Date::PHPToExcel(time()));\n\n\necho date('H:i:s') , &quot; Write to Excel2007 format&quot; , EOL;\n//$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');\n$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');\n//$objWriter-&gt;save(str_replace('.php', '.xlsx', __FILE__));\n$save_dir = &quot;D:\\\\htdocs\\\\psg\\\\files\\\\PSG_PoolCards_&quot;.date(&quot;mdy&quot;).&quot;.xlsx&quot;;\n$objWriter-&gt;save($save_dir);\n//D:\\htdocs\\psg\\files\n//echo date('H:i:s') , &quot; File written to &quot; , str_replace('.php', '.xlsx', pathinfo(__FILE__, PATHINFO_BASENAME)) , EOL;\necho date('H:i:s') , &quot; File written to &quot; , $save_dir , EOL;\n\n// Echo memory peak usage\necho date('H:i:s') , &quot; Peak memory usage: &quot; , (memory_get_peak_usage(true) / 1024 / 1024) , &quot; MB&quot; , EOL;\n\n// Echo done\necho date('H:i:s') , &quot; Done writing file&quot; , EOL;\necho 'File has been created in ' , getcwd() , EOL;</code></pre>\n\n<strong>The following error message says the file was created successfully but the file itself is corrupted and will not open. This is the error message(s) I am getting when calling the page:</strong><br />\n<pre><code>02:09:41 Load from Excel2007 template\n02:09:41 Add new data to the template\n\nWarning: iconv_strlen() expects parameter 1 to be string, array given in D:\\htdocs\\psg\\phpexcel\\Classes\\PHPExcel\\Shared\\String.php on line 557\n02:09:41 Write to Excel2007 format\n\nWarning: XMLWriter::writeElement() expects parameter 2 to be string, array given in D:\\htdocs\\psg\\phpexcel\\Classes\\PHPExcel\\Writer\\Excel2007\\DocProps.php on line 104\n\nWarning: XMLWriter::writeAttribute() expects parameter 2 to be string, array given in D:\\htdocs\\psg\\phpexcel\\Classes\\PHPExcel\\Writer\\Excel2007\\Workbook.php on line 250\n\nNotice: Array to string conversion in D:\\htdocs\\psg\\phpexcel\\Classes\\PHPExcel\\Worksheet.php on line 2599\n02:09:42 File written to D:\\htdocs\\psg\\files\\PSG_PoolCards_030114.xlsx\n02:09:42 Peak memory usage: 17.5 MB\n02:09:42 Done writing file\nFile has been created in D:\\htdocs\\psg\n\nWarning: Illegal offset type in isset or empty in D:\\htdocs\\psg\\phpexcel\\Classes\\PHPExcel\\Calculation.php on line 1924</code></pre>\n\nThanks in advance!!!!<br />\n",
    "PostedDate": "2014-03-01T00:27:35.643-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1218863",
    "ThreadId": "535972",
    "Html": "It would be useful to have the call stack to see where does the initial error (see extension xdebug on a development machine).\r<br />\nAfter a quick reading of your code, I see $pool_name = array () (and the array_push later) then calling setTitle with $pool_name. This method expects a string.<br />\n",
    "PostedDate": "2014-03-04T00:59:22.85-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]