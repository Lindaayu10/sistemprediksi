[
  {
    "Id": "242036",
    "ThreadId": "70995",
    "Html": "<p>hello there ,first of all thanks alot for your effort and i read the item 116 regarding supporting drawing charts ,so i was wondering if any progress took place in such idea</p>\r\n<p>have a nice day</p>",
    "PostedDate": "2009-10-04T23:12:58.41-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "242376",
    "ThreadId": "70995",
    "Html": "<p>It is a big and complicated feature, but now that many bugs have been fixed this can probably get more attention. I don't think you will hear MarkBaker or Maarten promise any release date, but I know they have not forgotten the feature. Maybe they will bump in here and give you an update.</p>",
    "PostedDate": "2009-10-05T19:06:06.65-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "242448",
    "ThreadId": "70995",
    "Html": "<p>Correct, no promises or timescales, but I've just started to look at the initial object structures that are required for charts; and it's going to be my main &quot;new feature&quot; focus for the coming months. Maarten has done a little bit of code already that I'm looking at, but it is a large sub-project with a lot of complicated features so there's no quick solution. Besides the readers and writers, there's also the tools to create/manipulate the chart definition within PHPExcel itself, and I'm also looking at wrappers that can use jpgraph, graphpite or other third party chart tools as plug-ins for actually rendering an Excel chart to jpg/gif/png</p>",
    "PostedDate": "2009-10-06T01:01:21.4-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "242478",
    "ThreadId": "70995",
    "Html": "<p>Good to see you are thinking in the same direction as I did with jpGraph wrappers and such. Just to give a third voice: this is complicated and big matter, so we are not promising any release dates.&nbsp;</p>",
    "PostedDate": "2009-10-06T02:44:17.76-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "243000",
    "ThreadId": "70995",
    "Html": "<p>google charts looks pretty good in spreadshet</p>",
    "PostedDate": "2009-10-07T08:50:01.683-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "243035",
    "ThreadId": "70995",
    "Html": "<p>@redyuck</p>\r\n<p>Google Charts is just one potential renderer out of many. It can be used as other renderers such as jpGraph and graphpite by writing a chartRenderer wrapper -&nbsp;not dissimilar to the way we use the IOFactory for reading and writing workbooks at present.</p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre>$chartWriter = PHPExcel_ChartFactory::createRenderer($objPHPExcel-&gt;getChartCollection()-&gt;getChart(<span style=\"color:#A31515\">'Chart 1'</span>), <span style=\"color:#A31515\">'GoogleCharts'</span>);\r\n$chartWriter-&gt;render(<span style=\"color:#A31515\">'chart.jpg'</span>);\r\n</pre>\r\n</div>\r\n<p>At the moment, I'm less concerned with the details of what wrappers we'll provide, as I am about how we make the renderer engine 'generic' so that new wrappers can be plugged-in subsequently.</p>\r\n<p>More critical is being able to read chart definitions from existing workbooks, create new chart definitions through PHP, and write chart definitions to workbooks... and it's the whole combination that makes this a substantial sub-project within PHPExcel.</p>",
    "PostedDate": "2009-10-07T10:08:41.373-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]