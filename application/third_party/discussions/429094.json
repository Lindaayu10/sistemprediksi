[
  {
    "Id": "984716",
    "ThreadId": "429094",
    "Html": "\r\n<p>Hi,</p>\r\n<p>I have been trying to find a guide a long the lines of making a client side code so when the PHPoutput is running I can get an update on the browser. I have see a few scenarios on here with a slight push in the right direction, unfortunately I'm not skilled\r\n enough to figure it out.</p>\r\n<p>Heres some questions:</p>\r\n<p><strong>How does the logic work?</strong></p>\r\n<p>Do I have a seperate php page that includes the PHPexcel file? or do I insert the code into the PHPexcel file?</p>\r\n<p>I've read ideas to get cookies etc, but at which point do I insert, is it whilst its looping through rows which goes back to the loader?</p>\r\n<p>Whats the best coding to use? Javascript / Ajax?</p>\r\n<p>Are there any simple tutorials online phpexcel specifically that can help me out, even if its a simple show something on the browser its a start.</p>\r\n<p>E.g. I follow my link to the PHPoutput file and the page simple says 'downloading' at least it will put me in the right direction.</p>\r\n<p>What is the basic workflow for this process???</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>Thank you.</p>\r\n",
    "PostedDate": "2013-01-09T14:35:30.823-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "984935",
    "ThreadId": "429094",
    "Html": "\r\n<div id=\"TranslationOutput\" dir=\"ltr\">\r\n<div><span>For a basic &quot;Please wait, I try to think&quot;, the mechanism may be:</span></div>\r\n<div><span>* The user expresses his desire to get the Excel file (by clicking on a button, link, etc.)</span></div>\r\n<div><span>* Catch action from the user, in </span><span>JavaScript,</span><span> to show the waiting message, add a &quot;token&quot; (which the server will return in the form of a cookie) to the request, set up a monitoring loop, in JavaScript, to check cookies (all\r\n seconds, for example, check if the &quot;token&quot; is part of the cookies)</span></div>\r\n<div><span>* Server-side, in the requested script, add the &quot;token&quot; to the cookies, make the Excel file, send it to the user.</span></div>\r\n<div><span><span>* When the &quot;token&quot; is detected, hide the waiting message, disable the monitoring loop.\r\n</span><span>At this time (or a fraction of a second before) the user sees the file save dialog box.</span></span></div>\r\n<br>\r\n<div><span><span>For something more elaborate, the monitoring loop will not just wait for a cookie, but will make a query (in ajax) to the server to know the status of the construction of the file.\r\n</span><span>The target page will be different: you don't need to force php to consider a substantial page with a tiny part will be used.\r\n</span><span>This page should read something that contains the completion status and return it to the browser.\r\n</span><span>The something can be a field in a table (memory type, it does not matter if you lose the information), device cache (memcached, redis, xcache,...) or a file.</span></span></div>\r\n<div><span>The main page will be in charge of feed the something above with the progress, knowing that the last part is likely to jump sharply: the save() method often take&nbsp; time (if you want a progress bar, it's that the file does not have three miserable\r\n cells).</span></div>\r\n<div></div>\r\n<div><br>\r\n<span id=\"result_box\" lang=\"en\"><span>For the</span> <span>basic part</span><span>,</span>\r\n<span>the work</span> <span>is</span> <span>in JS</span> <span>(ok,</span> and <span>\r\na line</span> in <span>php</span> <span>to remember</span><span>).</span></span></div>\r\n<br>\r\n<div><span><span>Note: When in &quot;insert code in the PHPExcel file&quot;, you mean put the code in the product xls/xlsx file...\r\n</span><span>It is a great way to ensure that the user not have what he wants... </span>\r\n<span>The response body must contain only the result data (a clean xls/xlsx, ...), you can cheat that by putting something in the headers, and you can retrieve client-side: cookies.</span></span></div>\r\n</div>\r\n",
    "PostedDate": "2013-01-10T05:28:29.323-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "984950",
    "ThreadId": "429094",
    "Html": "\r\n<p>so in my PHP Excel file, i can use javascript, and within that javascript ,write something along the lines of:</p>\r\n<p>&lt;script&gt;</p>\r\n<p>var mytext = &quot;Downloading...&quot;;<span> </span></p>\r\n<p><span>&nbsp;</span>document.write(mytext);</p>\r\n<p>&lt;/script&gt;</p>\r\n<p>&nbsp;</p>\r\n<p>This is put at the top of the code.</p>\r\n<p>Se when my PHPexcel.php is excecuted the text will show?</p>\r\n<p>&nbsp;</p>\r\n<p>without PHPexcel i have managed to get the database showing a progress bar, i just need to learn how to effect phpexcel, then I can start toying!</p>\r\n<p>&nbsp;</p>\r\n<p>Any help with the above is greatly appreciated LWOL</p>\r\n<p>&nbsp;</p>\r\n",
    "PostedDate": "2013-01-10T05:51:42.893-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "986114",
    "ThreadId": "429094",
    "Html": "\r\n<p>Hum... No, i think...<br>\r\nFor me, the PHExcel file is something like :</p>\r\n<p></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>&lt;?php\r\n<span style=\"color:blue\">require_once</span> <span style=\"color:#a31515\">'Excel/PHPExcel.php'</span>;\r\n<span style=\"color:blue\">require_once</span> <span style=\"color:#a31515\">'Excel/PHPExcel/Writer/Excel2007.php'</span>;\r\n$workbook = <span style=\"color:blue\">new</span> PHPExcel;\r\n<span style=\"color:green\">// bunch of code to fill cells, add styles, etc.</span>\r\nheader(<span style=\"color:#a31515\">'Content-type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'</span>);\r\nheader(<span style=\"color:#a31515\">'Content-Disposition:inline;filename=filename.xlsx'</span>);\r\n$writer = <span style=\"color:blue\">new</span> PHPExcel_Writer_Excel2007($workbook);\r\n$writer-&gt;save(<span style=\"color:#a31515\">'php://output'</span>);\r\n<span style=\"color:blue\">exit</span>();\r\n?&gt;\r\n</pre>\r\n</div>\r\n<p></p>\r\n<p>First character is '&lt;' (php open tag) and last, '&gt;' (php close tag). Between, no echo with plain text, html, javascript,...\r\n<br>\r\nSure, you can have a multi purpose script, driven with parameters : if (condition) display (send) html (css, JS, ...) else make Excel file. But you can't doing both in same time. So, for simplicity, say your 'phpexcel file' do only one thing : making the excel\r\n file.<br>\r\nYou need an another script with html and JS for display normal text and &quot;please wait&quot;.<br>\r\nSomething like (add basic tags, attributes, to have a clean page) :</p>\r\n<p></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>&lt;form onSubmit=<span style=\"color:#a31515\">&quot;return ShowWait();&quot;</span> action=<span style=\"color:#a31515\">&quot;MakeExcel.php&quot;</span>&gt;\r\nDear user, click the button to have your file : \r\n&lt;input ID=<span style=\"color:#a31515\">&quot;SubmitButton&quot;</span> type=<span style=\"color:#a31515\">&quot;submit&quot;</span> value=<span style=\"color:#a31515\">&quot;click me !&quot;</span>&gt;\r\n&lt;!-- others fields needed <span style=\"color:blue\">for</span> customize the excel file --&gt;\r\n&lt;input ID=<span style=\"color:#a31515\">&quot;TokenField&quot;</span> type=<span style=\"color:#a31515\">&quot;hidden&quot;</span> name=<span style=\"color:#a31515\">&quot;token&quot;</span> value=<span style=\"color:#a31515\">&quot;&quot;</span>&gt;\r\n&lt;/form&gt;\r\n<div id=\"&lt;span\" style=\"color:#a31515\">&quot;PleaseWait&quot; <span style=\"color:blue\">class</span>=<span style=\"color:#a31515\">&quot;NotShowAtStart&quot;</span>&gt;Please wait</div>\r\n&lt;script&gt;\r\n<span style=\"color:blue\">var</span> TheToken; <span style=\"color:blue\">var</span> TheTimer;\r\n<span style=\"color:blue\">function</span> ShowWait(){\r\n<span style=\"color:green\">//disable submit button, change class of div PleaseWait to display it</span>\r\n<span style=\"color:green\">//fill token field with a random value and save this in the var TheToken</span>\r\n<span style=\"color:green\">//initiate the monitoring loop</span>\r\nTheTimer=window.setInterval(<span style=\"color:#a31515\">&quot;CheckToken()&quot;</span>, 1000);<span style=\"color:green\">//call CheckToken every second, save the timer id to stop the loop at completion</span>\r\n<span style=\"color:blue\">return</span> <span style=\"color:blue\">true</span>;<span style=\"color:green\">//ok to send the form</span>\r\n]\r\n<span style=\"color:blue\">function</span> CheckToken(){\r\n<span style=\"color:green\">//check if TheToken is in cookies.</span>\r\n<span style=\"color:green\">// Yes ? Clear the interval, change class of div PleaseWait to initial value, delete the cookie, clear TheToken and associated field, TheTimer, enable submit button,...</span>\r\n<span style=\"color:green\">// No ? Do nothing</span>\r\n}\r\n</pre>\r\n</div>\r\n<span id=\"AjaxWaitImage\" style=\"visibility:hidden\"></span>\r\n<p></p>\r\n<div><span><span>Of course, this is a skeleton, it is necessary to write the actions, and this is not the only way to proceed.\r\n</span><span>An element does not change however: the script responsible for the realization of the Excel file can not at the same time create this file and return information directly to the user.</span></span></div>\r\n",
    "PostedDate": "2013-01-13T07:03:08.593-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "986118",
    "ThreadId": "429094",
    "Html": "\r\n<p>Okay your reply is starting to clear things up for me now.</p>\r\n<p>So the phpexcel file, is just purely for making the spreadsheet, no extra coding whatsoever, its purely to compile information and export the file.</p>\r\n<p>Its the file that excecutes phpexcel where all notification information needs to go so on a flow:</p>\r\n<p>&nbsp;</p>\r\n<p>Submit form:</p>\r\n<p>Contains token checking, changes the submit form to a please wait bar and then starts the phpexcel:</p>\r\n<p>I think the key thing here ive missed is this:&nbsp;</p>\r\n<pre>onSubmit=<span>&quot;return ShowWait();&quot;</span> action=<span>&quot;MakeExcel.php&quot;</span></pre>\r\n<pre>I have been having the onSubmit as the phpexcel file, instead of it being an action, will this mean the page stays as is, but starts processing?</pre>\r\n<pre>If so Im going to work on this immediately!</pre>\r\n<pre><br></pre>\r\n<pre>Thank you Lwol appreciate this a lot!</pre>\r\n",
    "PostedDate": "2013-01-13T07:18:45.927-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "987032",
    "ThreadId": "429094",
    "Html": "\r\n<div id=\"TranslationOutput\" dir=\"ltr\">\r\n<div><span>(I just saw the snipet insertion tool has devoured a part: &quot;PleaseWait&quot; class=&quot;NotShowAtStart&quot;&gt;Please wait,&nbsp; should be read:\r\n<div id=\"PleaseWait\">Please wait </div>\r\n)</span></div>\r\n<br>\r\n<div><span><span>In fact, we play on the usual behavior for a browser: when you click on a link or submit a form, the\r\n</span></span><span><span>current </span></span><span><span>page not disappears, its elements are still active.\r\n</span><span>My little ShowWait function always returns true, accordingly, the form is submitted to the server and in the meantime it deign respond, loop checking client-side can turn quietly.</span></span></div>\r\n<div><span>When the browser receives the headers who informed him that he will receive is not a page (something that it should display) but a file that it should show a save dialog to the user, it remains on the original page, update the cookies, and displays\r\n dialog, meanwhile, scripts (JS) on the initial page can work.</span></div>\r\n<div><span><span>If you need to make sure of correct behavior if javascript is not available, the script performing the Excel file must be a little smarter.\r\n</span><span>But let's not muddle things!</span></span></div>\r\n<div></div>\r\n<div><span><span>[quote]</span></span><br>\r\nSo the phpexcel file, is just purely for making the spreadsheet, no extra coding whatsoever, its purely to compile information and export the file.[/quote]</div>\r\n<div>Yes. A space, a linefeed (or more text, of course) in the output and you got a corrupt file. On a file produced on a dev' box, if Excel complains, open the file in a text editor : often, a notice or a warning is in the file.</div>\r\n</div>\r\n",
    "PostedDate": "2013-01-15T05:40:22.53-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "987443",
    "ThreadId": "429094",
    "Html": "\r\n<p>Hi Lwol,</p>\r\n<p>Starting to make some real progress now here is my code:&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<pre>&lt;form action=&quot;R31Wexport.php&quot;&gt;\nDear user, click the button to have your file : \n&lt;input id=&quot;SubmitButton&quot; type=&quot;submit&quot; value=&quot;Export&quot; /&gt;\n&lt;!-- others fields needed for customize the excel file --&gt;\n&lt;input id=&quot;TokenField&quot; name=&quot;token&quot; type=&quot;hidden&quot; /&gt;\n&lt;/form&gt;\n\n&lt;script&gt;var TheToken; var TheTimer;function ShowWait(){//disable submit button, change class of div PleaseWait to display itdocument.getElementById(&quot;PleaseWait&quot;).innerHTML=&quot;&lt;div style=\\&quot;visibility:visible;\\&quot;&gt;Please Wait while we process the download&lt;/div&gt;&quot;;document.getElementById('SubmitButton').disabled = 1;//fill token field with a random value and save this in the var TheToken&nbsp;//initiate the monitoring loopTheTimer=window.setInterval(&quot;CheckToken()&quot;, 1000);//call CheckToken every second, save the timer id to stop the loop at completionreturn true;//ok to send the form}<br><br>function CheckToken(){//check if TheToken is in cookies.// Yes ? Clear the interval, change class of div PleaseWait to initial value, delete the cookie, clear TheToken and associated field, TheTimer, enable submit button,...// No ? Do nothing}<br>&lt;/script&gt;\n</pre>\r\n<p>&nbsp;</p>\r\n<p>Which works brilliantly, now my next task is understanding the Token section.&nbsp;</p>\r\n<p>How does this work, for example my PHPExcel file uses ForEach, so would I add an instance such as this:</p>\r\n<p>&nbsp;</p>\r\n<pre>$i = 1;\n\nForloop {          \n$i\n$I&#43;&#43;;}</pre>\r\n<p>So that each row increments, would I put the token in here? so that every loop will send information back to the clientside?&nbsp;</p>\r\n<p>- What is a token?<br>\r\n- What is the functionality of a token?</p>\r\n<p>&nbsp;</p>\r\n<p><span style=\"font-size:10pt\">Thank you&nbsp;</span></p>\r\n",
    "PostedDate": "2013-01-16T00:58:52.187-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "987929",
    "ThreadId": "429094",
    "Html": "\r\n<div id=\"TranslationOutput\" dir=\"ltr\">\r\n<div><span>One thing at the time;-)</span></div>\r\n<div><span>The skeleton I posted is able to show the user that the work has begun and that the work is finished, not the progress of the work.</span></div>\r\n<div><span>Finalize his writing is not lost time if later you want to implement a progress bar, I would return to this aspect.</span></div>\r\n<div><span><span>But first, the Token. </span><span>This element is a marker, a pass.</span></span></div>\r\n<div><span><span>What should contain? </span><span>What do you want to avoid the risk of collision (if the user requests after or at the same time several files, for example).</span></span></div>\r\n<div><span>Side JS, you'll get something like:</span></div>\r\n<div><span></span></div>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">var</span> x = <span style=\"color:blue\">new</span> Date();\r\nTheToken = <span style=\"color:#a31515\">'ExportXYZ'</span> + x.getTime ();\r\ndocument.getElementById(<span style=\"color:#a31515\">'TokenField'</span>).value = TheToken;\r\n</pre>\r\n</div>\r\n<div><span></span></div>\r\n<div><span>The script making the Excel file will in turn present the token as &quot;proof&quot; it returns the file you expect (the correct answer to the form transmitted to the server by the browser\r\n</span><span>and, also, the only part of the answer that is accessible to the JS code</span><span>).</span></div>\r\n<div><span>Whatever the number of times that the script will loop to produce the file, the token will be present in a single copy, you add it to the answer (almost) when you want as long as it is before the body of the response is sent, that is, before the\r\n call to the save('php://output') method.</span></div>\r\n<div><span><span>How to add? </span><span>by a setcookie:</span></span></div>\r\n<div><span>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>If(array_key_exists(<span style=\"color:#a31515\">'Token'</span>, $_POST) && $_POST[<span style=\"color:#a31515\">'Token'</span>]!=&quot;) setcookie($_POST[<span style=\"color:#a31515\">'Token'</span>],<span style=\"color:#a31515\">'Ready'</span>);\r\n</pre>\r\n</div>\r\n</span></div>\r\n<div><span><span>Why use this technique? </span><span>Because, as I have already written, you can't put anything in the body of the response, otherwise the file will be corrupt, in addition, it must be accessible in JavaScript.\r\n</span><span>On the other hand, you stand as well because it is the only way to know that the file is available for the user.</span></span></div>\r\n</div>\r\n",
    "PostedDate": "2013-01-16T22:50:19.763-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "988197",
    "ThreadId": "429094",
    "Html": "\r\n<p>Okay so,&nbsp;</p>\r\n<p>In my lets call it 'index.php' file it contains:</p>\r\n<p>The message information saying 'please download file here' with the excecutable button to 'PHPExcel.php'</p>\r\n<p>&nbsp;</p>\r\n<p>Index.php contains:</p>\r\n<pre><span>var</span> x = <span>new</span> Date();\r\nTheToken = <span>'ExportXYZ'</span> + x.getTime ();\r\ndocument.getElementById(<span>'TokenField'</span>).value = TheToken;</pre>\r\n<p>this piece of code, Is the 'tokenfield' the div on index.php which will show the token information?</p>\r\n<p>PHPExcel.php contains:</p>\r\n<pre>If(array_key_exists(<span>'Token'</span>, $_POST) && $_POST[<span>'Token'</span>]!=&quot;) setcookie($_POST[<span>'Token'</span>],<span>'Ready'</span>);</pre>\r\n<p>When I put this into my PHP I have a syntax error here:&nbsp;</p>\r\n<pre>array_key_exists('Token', $_POST) && $_POST['Token']!=&quot;)</pre>\r\n<p>I tried to do some revision into setcookie from php.net but still can't understand it. Is this the information that makes the token, or is it the javascript makes the token?</p>\r\n<p>&nbsp;</p>\r\n",
    "PostedDate": "2013-01-17T07:58:15.787-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "988557",
    "ThreadId": "429094",
    "Html": "\r\n<p>&nbsp;</p>\r\n<p></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>array_key_exists(<span style=\"color:#a31515\">'Token'</span>, $_POST) && $_POST[<span style=\"color:#a31515\">'Token'</span>]!=&quot;)\r\n</pre>\r\n</div>\r\n<p></p>\r\n<pre>After the not equal operator, it's two single quote, not a double quote ;-)<br><br>[quote]Is the 'tokenfield' the div on index.php which will show the token information?[/quote]<br>TokenField is the ID of the hidden form field Token<br><br>[quote]Is this the information that makes the token, or is it the javascript makes the token?[/quote]<br>Here, it's the JS who make the token.<span><span> The Token is just a piece of text, in my example, something like &quot;ExportXYZ123456&quot; (the number is a Unix</span><span> Timestamp).<br>This text go to the server within the form data, php catch it, and make a cookie with this text and send it to the browser.<br><br></span></span></pre>\r\n",
    "PostedDate": "2013-01-18T00:30:54.863-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "989394",
    "ThreadId": "429094",
    "Html": "\r\n<p>Hi Lwol,</p>\r\n<p>&nbsp;</p>\r\n<p>Getting closer,</p>\r\n<p>I understand after playing with the code, that like you said the Javascript makes a Value for the ID 'TOKENFIELD' from there this information is then posted to my PHPEXCEL FILE.</p>\r\n<p>The code below:</p>\r\n<p>If(array_key_exists('Token', $_POST) &amp;&amp; $_POST['Token']!='') setcookie($_POST['Token'],'Ready');</p>\r\n<p>Uses the value information and makes a cookie in my browser.<br>\r\nNow I need to return it to the javascript file? I have noticed the Token is made in the hidden field, but I would like to publicly see it, eventually I will replace the token ID with the rows of the PHPExcel file that are being made. Then will get new tokens/row\r\n ids to be shown on the front end.</p>\r\n<p>What would be the process there, because I am looping, new tokens constantly need to be being made.</p>\r\n<p>Code so far:</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>&lt;script&gt;\n<span style=\"color:blue\">var</span> TheToken; \n<span style=\"color:blue\">var</span> TheTimer;\n\n<span style=\"color:blue\">function</span> ShowWait()\n{\ndocument.getElementById(<span style=\"color:#a31515\">&quot;SubmitButton&quot;</span>).disabled=<span style=\"color:blue\">true</span>;\n<span style=\"color:green\">//disable submit button, change class of div PleaseWait to display it</span>\n<span style=\"color:blue\">var</span> x = <span style=\"color:blue\">new</span> Date();\n<span style=\"color:green\">//fill token field with a random value and save this in the var TheToken </span>\nTheToken = <span style=\"color:#a31515\">'TOKEN'</span> &#43; x.getTime ();\n<span style=\"color:green\">//initiate the monitoring loop</span>\nTheTimer=window.setInterval(<span style=\"color:#a31515\">&quot;CheckToken()&quot;</span>, 2000);\n<span style=\"color:green\">//call CheckToken every second, save the timer id to stop the loop at completion</span>\n<span style=\"color:blue\">return</span> <span style=\"color:blue\">true</span>;<span style=\"color:green\">//ok to send the form</span>\n}\n\n<span style=\"color:blue\">function</span> CheckToken(){\ndocument.getElementById(<span style=\"color:#a31515\">'TokenField'</span>).value = TheToken;\n\n<span style=\"color:green\">//check if TheToken is in cookies.</span>\n<span style=\"color:green\">// Yes ? Clear the interval, change class of div PleaseWait to initial value, delete the cookie, clear TheToken and associated field, TheTimer, enable submit button,...</span>\n<span style=\"color:green\">// No ? Do nothing</span>\n}\n\n&lt;/script&gt;\n</pre>\r\n</div>\r\n",
    "PostedDate": "2013-01-20T11:43:34.607-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "989567",
    "ThreadId": "429094",
    "Html": "\r\n<p><span id=\"AjaxWaitImage\" style=\"visibility:hidden\"></span></p>\r\n<div><span>&quot;Now I need to return it to the javascript file?&quot;</span></div>\r\n<div><span><span>By setcookie, you give the necessary impetus. </span><span>Then, it is the server that does the job and the browser.\r\n</span><span>JavaScript just must watch for the appearance of this particular cookie.</span></span></div>\r\n<div><span>The mechanism described is a reliable way to know that the script that performs the Excel file has completed its work, nothing more, but this is useful.</span></div>\r\n<div><span><br>\r\n</span></div>\r\n<div><span>Note: In the suite, I propose a solution for a bar of progression, but IMHO, it should be the first part works before proceeding with the next.</span></div>\r\n<div><span></span></div>\r\n<div><span>If this works correctly, implementing a progress bar will not rely on this exchange, except to bring it to 100%</span><span> (you can have a synchronization trouble by other calls, but when you have the cookie, you are certain that the file is here)</span><span>.</span></div>\r\n<div><span>But as I wrote, it has not been in vain: you'll keep this part and add things.</span></div>\r\n<div><span>In the monitoring loop, client-side you'll add an Ajax call to a small script (*), passing the token, but this script will not return it in the form of a cookie.</span></div>\r\n<div><span><span>In the main script, you'll feed &quot;something&quot; based on the advance, at each step (not whenever you fill a cell, it would be too much...\r\n</span><span>And the assignment of values to cells is only a step... not necessarily the longest).</span></span></div>\r\n<div><span><span>The &quot;Something&quot; must be accessible to the small script in real-time (or close).\r\n</span><span>You have a number of possibilities... </span><span>But preferably, choose a possibility that adds the least possible load.</span></span></div>\r\n<div><span>If you have access to a server that knows to store in memory key/value pairs (memcache, redis,...), it is the ideal, if not you can fall back on a\r\n</span><span>SQL </span><span>table (in MySQL, engine = memory), in which you write&nbsp; the token and the value that represents the progress.</span></div>\r\n<div><span><span>The small script will read this value and return it in response to the Ajax request (in plain text, XML, JSON, as you wish).\r\n</span><span>Then, the JS will translate this to a visual element to the user.</span></span></div>\r\n<div></div>\r\n<div><span><span>(*), Yes, an another script. If you use your Excel script, you need to add a test for this case, it's easy, of course, but php must parse the entire script, lost time and resource for nothing.<br>\r\n</span></span></div>\r\n",
    "PostedDate": "2013-01-21T01:29:42.103-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "989658",
    "ThreadId": "429094",
    "Html": "\r\n<p>Okay, so this javascript code was to test that it is correctly sending the information to the PHPexcel file and back to the client file?</p>\r\n<p>I have full access to our servers and databases.</p>\r\n<p>&nbsp;</p>\r\n<p>Next Step:<br>\r\n<span style=\"font-size:10pt\">Learn how to use Ajax to read server processing?</span></p>\r\n<p>Question:<br>\r\n<span style=\"font-size:10pt\">Will it be possible with ajax to show the % of the process being done? catering for X number of rows?</span></p>\r\n<p>Am I on the right track here?</p>\r\n<p>Testing Link:&nbsp;http://www.room31wholesale.co.uk/stocklist/developing/testload.php</p>\r\n",
    "PostedDate": "2013-01-21T04:29:47.25-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "990213",
    "ThreadId": "429094",
    "Html": "\r\n<div id=\"TranslationOutput\" dir=\"ltr\">\r\n<div><span><span>[quote]</span><span>Okay, so this javascript code was to test that it is correctly sending the information to the PHPexcel file back to the client and file?</span><span>[/ quote]</span></span></div>\r\n<div><span><span>In a sense. </span><span>This gives you the starting point and the point of arrival in a reliable manner.</span></span></div>\r\n<br>\r\n<div><span><span>[quote]</span><span>I have full access to our servers and databases..</span><span>/ quote]</span></span></div>\r\n<div><span><span>OK, so you can check if a memcache or Redis server is present, if the php extensions are present.\r\n</span><span>Or if not, to consider the question of implementation. </span><span>This type of server is not used only for the use I mentioned, so to see.</span></span></div>\r\n<div><span><span>In the meantime, you can create a little function or object that your script will call for the information on the progress.\r\n</span><span>You code the function using the means at your disposal today, you can still adapt it then.</span></span></div>\r\n<br>\r\n<div><span><span>[quote]</span><span>Next Step:</span></span></div>\r\n<div><span><span>Learn how to use Ajax to read server processing?</span><span>[/ quote]</span></span></div>\r\n<div><span><span>Yes. </span><span>If you have not had the opportunity to play with this technique still...\r\n</span><span>Either you code everything yourself, or you use a framework that takes care of everything.</span></span></div>\r\n<div><span>Set for the query isn't from the browser cache...</span></div>\r\n<br>\r\n<div><span><span>[quote]</span><span>Question:</span></span></div>\r\n<div><span><span>Will it be possible with ajax to show the % of the process being done?\r\n</span><span>catering for X number of rows?</span><span>[/ quote]</span></span></div>\r\n<div><span><span>Yes. </span><span>All you want. </span><span>As you write on both sides (JS, client-side, php server-side), you can ensure you have what it takes.</span></span></div>\r\n<div><span><span>A true percentage asks you to find out the total number of items and the number of realized items.\r\n</span><span>The response to the Ajax request can be a single number from 0 to 100.\r\n</span><span>the work of the JS will be to display something in function: the number, a nice progress bar...</span></span></div>\r\n<div><span>The server can also return more information, simply, be well formatted so that the JS interprets it easily.</span></div>\r\n<div><span><span>For the management of the value... </span><span>In the light of the example, you can certainly easily determine the number of lines, from the beginning, and therefore, each processed row can calculate the percentage of progress and call the\r\n function that stores data for the other script. </span><span>However, finalization can also take time, as a result, you can keep a few percent for that part, to avoid having the bar set at 100% and no file.</span></span></div>\r\n<br>\r\n<div><span><span>I followed the link, there is still work to manage the token, but the concept is there;-)\r\n</span><span>In the output file, three images can't be displayed (sku: x 30750, o59725, o42583).</span></span></div>\r\n</div>\r\n",
    "PostedDate": "2013-01-22T02:23:44.433-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "991404",
    "ThreadId": "429094",
    "Html": "\r\n<p>Hi LWOL,</p>\r\n<p><br>\r\nI think im getting the hang of this now, i've been looking at alternative routes instead of PHPOUTPUT</p>\r\n<p>One of the methods im looking at is saving to the server then allowing users to download, then delete the file.<br>\r\nAt the moment ive been working on file reduction and I've been able to minimize a 80MB file down to around 1.2MB&nbsp;</p>\r\n<p>Testing file:<br>\r\n<span style=\"font-size:10pt\">http://room31wholesale.co.uk/stocklist/developing/test.php</span></p>\r\n<p><span style=\"font-size:10pt\">Using Gzip and memcache seems to help a lot, I've literally put the echo on each row loop for now so I can monitor, what im thinking though is to have the javascript in there with the file just so I can start and work on a progress\r\n bar using JQUERY</span></p>\r\n<p>what are the options there?</p>\r\n",
    "PostedDate": "2013-01-24T01:02:45.527-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "991523",
    "ThreadId": "429094",
    "Html": "\r\n<div id=\"TranslationOutput\" dir=\"ltr\">\r\n<div><span><span>Yes, &quot;Save&quot; to php://output is not always the best solution, especially if the file can be reused...\r\n</span><span>This means not to remove it as soon as a user has retrieved it.</span></span></div>\r\n<div></div>\r\n<div><span>This may be interesting to develop a technique to check if the file needs to be rebuilt: currently, your file needs of ~ 6 seconds to be created, it is likely that an audit (the data have changed?) will take much less time, server resources.</span></div>\r\n<div><span><br>\r\n</span></div>\r\n<div><span><span>Your build script would start by checking the absence of need to (re) build.\r\n</span><span>In this case, either redirect the browser to the file (If verification of access rights do not require php) or send the headers and a readfile of file.</span></span></div>\r\n<div><span><span>But all this does not solve your problem. </span><span>Save in a file you would get out html (JS..) in your script - should also provide a redirect so that the user actually retrieves the file - but it may not be awesome: the server does not\r\n rushes to send each issued byte, so php, so the display...</span></span></div>\r\n<div><span>As a result, work on this aspect is positive (as well as other efforts that you have undertaken) but not change thing to the problem &quot;progress bar&quot;.</span></div>\r\n<br>\r\n<div><span>And after what you write, you have a memcache server, so you have a very quick way to write (from your builder script) and read (from the &quot;checker&quot; script) a single value.</span></div>\r\n<div><span><span>Client-side jQuery (and certainly jQuery-UI for the widget progress bar )...\r\n</span><span>Easy to make a jQuery.ajax({url: 'StatusReaderScript',data:{'Token':Token},cache:_false}).done (function (data) {$(&quot;#progressbar&quot;).progressbar('value', Number(data));});\r\n</span><span>in the above-mentioned monitoring loop.</span></span></div>\r\n</div>\r\n",
    "PostedDate": "2013-01-24T05:56:12.637-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "991540",
    "ThreadId": "429094",
    "Html": "\r\n<p>Okay so my plan so far:</p>\r\n<p>File 1 is my client side file lets name it index.php for simplicity, this contains:<br>\r\n- Statement, checking if the file has been made in the past hour (needs to be an hour in our case with our website updating), if it hasn't just download the current one.<br>\r\n- Javascript to generate a token when gets sent over to PHPEXCEL.php<br>\r\n- AJAX Call to check if there is a cache token , if there is get the value of token and insert it into progress bar and update.<br>\r\n- When finished process, download file to server with button linking to said file to download&nbsp;</p>\r\n<p>PHPEXCEL .php<br>\r\nGenerates the information for the spreadsheet, using memcache (what does memcache do?) & GZIP<br>\r\nSend new cookie information (value is recieved from the javascript above)?&nbsp;<br>\r\nEnd script and write to server</p>\r\n<p>Does this sound about right?&nbsp;</p>\r\n<p>&nbsp;</p>\r\n",
    "PostedDate": "2013-01-24T06:31:03.99-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "991545",
    "ThreadId": "429094",
    "Html": "\r\n<p>Also with the exporting of file, depending on what drop down is selected can I have an if statement along the lines of:</p>\r\n<p>If dropdown A is selected save file as A.xlsx</p>\r\n<p>if dropdown B is selected save file as B.xlsx</p>\r\n<p>Can that be done through the PHPExcel file</p>\r\n",
    "PostedDate": "2013-01-24T06:40:16.15-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "992423",
    "ThreadId": "429094",
    "Html": "\r\n<div id=\"TranslationOutput\" dir=\"ltr\">\r\n<div><span>Yes, quite a lot;-)</span></div>\r\n<div><span><span>But I do not know if I would do the verification at the opening of the homepage: If the user opens the page... and going to lunch.\r\n</span><span>The information is no longer updated.</span></span></div>\r\n<div><span><span>In addition, in your message, you write that there may be several files.\r\n</span><span>As long as there have expressed their choice you do not know which file is to be checked, in addition all files were not made at the same time (a first user request resulted in the creation of A file, there is a half hour: file A is therefore considered\r\n to date, but the second user does want the file B : </span><span>It is not up to date).</span></span></div>\r\n<div><span><span><br>\r\n</span></span></div>\r\n<div><span><span>[quote] what does memcache do?</span><span>[/ quote]</span></span></div>\r\n<div><span>PHPExcel can use it for his own work and thus reduce the memory used by php (some research in the discussions will give information), but to what interests us, it is to use a few bytes to share information between the script that created the excel\r\n file and the script - Ajax requests target - in real time </span><span><span>with a very small impact on performance</span></span><span>, so that it returns to the client the progress information.</span></div>\r\n<div><span><span>[quote]</span><span>Send new cookie information (value is recieved from the javascript above)?\r\n</span><span>[/ quote]</span></span></div>\r\n<div><span><span>Yes, in the monitoring loop. </span><span>In pseudo-code (don't copy-paste ;-), you have something like:</span></span></div>\r\n<div><span>If (TokenInCookies) {</span></div>\r\n<div><span>ProgressBar.value(100%) //just for aesthetics</span></div>\r\n<div><span>HideProgressBar</span></div>\r\n<div><span>DisableMonitoringLoop</span></div>\r\n<div><span>EnableSubmitButton</span></div>\r\n<div><span>}else{<br>\r\n</span></div>\r\n<div><span>AjaxCall // retrieval and display of the progress</span></div>\r\n<div><span>} //end if</span></div>\r\n<div><span><span>[quote]</span><span>End script and write to server [/ quote]</span></span></div>\r\n<div><span>And read the file, send it to the user.</span></div>\r\n<br>\r\n<div><span>In the form of the index page, you can create all the fields needed to allow the user to refine the product file. It's a standard form by many ways.<br>\r\n</span></div>\r\n<div><span>The script performing the Excel file will receive them and implemented logic process settings accordingly.</span></div>\r\n<div><span>Since you considered to offer choices, the cache logic must be able to determine the correct file check, rebuild as appropriate and send.</span></div>\r\n</div>\r\n",
    "PostedDate": "2013-01-26T07:20:31.21-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "992515",
    "ThreadId": "429094",
    "Html": "\r\n<p>Okay so where I am currently at:</p>\r\n<p>Room31wholesale.co.uk/stocklist/V2</p>\r\n<p>you will have to log in to view the process though.</p>\r\n<p>&nbsp;</p>\r\n<p>I have done pretty much everything, I have file verification for 30 minues, one file that can export 4 variations of file. And with the progress bar at the moment im just using the OnState method to change info.</p>\r\n<p>things left to do:</p>\r\n<p>1. Understand the progress bar a little more</p>\r\n<p>2. See how I can reduce the phpexcel file and reduce MB request (at the moment im near 300).</p>\r\n<p>Can you fill me in on these LWOL?</p>\r\n<p>&nbsp;</p>\r\n<p>Once I have everything done I think I'll release a simple version so everyone can use a progress bar. Its not been easy but I've managed to progress in PHP AJAX and Javascript over the past 2 weeks.</p>\r\n",
    "PostedDate": "2013-01-26T15:00:32.623-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "992700",
    "ThreadId": "429094",
    "Html": "\r\n<p><span id=\"AjaxWaitImage\" style=\"visibility:hidden\"></span></p>\r\n<div id=\"TranslationOutput\" dir=\"ltr\">\r\n<div><span>I have not tested the latest version, but, if I rely on the previous:</span></div>\r\n<div><span>-You have many images in the file, this takes up space in file.</span></div>\r\n<div><span><span>-You have cells that are SUM. </span><span>You can earn a little if PHPExcel don't make the calculation ($objWriter-&gt;setPreCalculateFormulas(false), from the user, the calculation is instant) and a bit more if you do the calculation in php\r\n (you put the result directly into affected cells and you don't fill &quot;source&quot; cells).</span></span></div>\r\n<div><span><span>Then, you have all the cache methods PHPExcel knows to handle which can save much, at the expense of the speed of realization (not miracle).\r\n</span><span>You will find the information in section 4.2.1 of developer documentation and the results of testing (not all methods) conducted by MarkBaker here: https://phpexcel.codeplex.com/discussions/234150?ProjectName=phpexcel at the end of the topic.</span></span></div>\r\n<div></div>\r\n</div>\r\n",
    "PostedDate": "2013-01-27T08:37:41.64-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1033243",
    "ThreadId": "429094",
    "Html": "Hi,\r<br />\n<br />\nI am facing a similar challenge, trying to get the PHP script (that manipulates and outputs a rather large Excel file directly to the browser) to report it's progress in realtime, so that the user has at least some idea about the amount of waiting time to still expect.\r<br />\n<br />\nI have followed <strong>Lwol</strong>'s suggestion regarding using a cookie, together with directing an output to an IFRAME and some additional javascript to show a general &quot;hourglass&quot; type of symbol, to show that the script is running. I'm really grateful for the explanations which helped a lot. This however just shows an hourglass for, say, 12 minutes, which is better than nothing, but not very informative\r<br />\n<br />\nI was inspired by <strong>Lwol</strong>'s remark about using <em>memcache</em> as means to communicate in real time from within the PHP code. Installed memcached and appropriate PHP extension, and am able to write information from PHP to a <em>memcache</em> &quot;variable&quot;. Unfortunately, I was unsuccessful in finding a simple <strong>browser side</strong> <em>memcache</em> client for javascript in order to be able to fetch this value during periodic checks done by the setInterval'ed javascript function...\r<br />\n<br />\nDoes anyone know of such a browser-based memcache client? \r<br />\nOr perhaps there's some other method of transferring a real-time piece of information (for progress purposes it can be as simple as an integer value) from a running PHP script to the browser?\r<br />\n<br />\nKind regards\r<br />\nStan<br />\n",
    "PostedDate": "2013-04-19T16:11:16.033-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1033316",
    "ThreadId": "429094",
    "Html": "I'm answering myself... :)<br />\n<br />\nIt was a mental block on my part apparently... <br />\n<br />\nI made the requesting page a .php one instead of .html, and used some PHP code on it to retrieve the memcache value. <br />\nThen I made a tiny php file that does the same and invoke it periodically via AJAX.<br />\n<br />\nI must've been really tired the last couple of days :)<br />\n<br />\nKind regards<br />\nStan<br />\n",
    "PostedDate": "2013-04-20T02:45:59.223-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]