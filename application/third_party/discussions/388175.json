[
  {
    "Id": "890119",
    "ThreadId": "388175",
    "Html": "\r\n<p>I have 4 worksheets that I want to read.&nbsp; They should start reading from row 23-40 and column a-f.&nbsp; Below is my code and I tried to output the cell value for the first worksheet and all i got is blank.&nbsp; Can someone help?</p>\r\n<p>&nbsp;</p>\r\n<p>$inputFileType = 'Excel5';</p>\r\n<p>$inputFileName = 'example.xls';</p>\r\n<p>$sheetnames = array('Networks','Workstation','Communication','Hardware');</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;&nbsp;&nbsp; /**&nbsp; Define a Read Filter class implementing PHPExcel_Reader_IReadFilter&nbsp; */\r\n<br>\r\n&nbsp;&nbsp;&nbsp; class MyReadFilter implements PHPExcel_Reader_IReadFilter<br>\r\n&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; private $_startRow = 0;&nbsp;&nbsp;&nbsp; <br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; private $_endRow = 0;&nbsp;&nbsp;&nbsp; <br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; private $_columns = array();<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; /**&nbsp; Get the list of rows and columns to read&nbsp; */\r\n<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; public function __construct($startRow, $endRow, $columns)\r\n<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $this-&gt;_startRow&nbsp;&nbsp;&nbsp; = $startRow;<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $this-&gt;_endRow= $endRow;<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $this-&gt;_columns= $columns;<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; }<br>\r\n&nbsp;&nbsp;&nbsp; <br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; public function readCell($column, $row, $worksheetName = '')\r\n<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; //&nbsp; Only read the rows and columns that were configured\r\n<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; if ($row &gt;= $this-&gt;_startRow &amp;&amp; $row &lt;= $this-&gt;_endRow)\r\n<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; if (in_array($column,$this-&gt;_columns))\r\n<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; return true;<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; }<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; }<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; return false;<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; }<br>\r\n&nbsp;&nbsp;&nbsp; } //end class MyReadFilter&nbsp;&nbsp;&nbsp; <br>\r\n&nbsp;&nbsp;&nbsp; <br>\r\n&nbsp;&nbsp;&nbsp; /**&nbsp; Create an Instance of our Read Filter, passing in the cell range&nbsp; **/\r\n<br>\r\n&nbsp;&nbsp;&nbsp; $filterSubset = new MyReadFilter(23,40,range('A','F'));<br>\r\n&nbsp;&nbsp;&nbsp; <br>\r\n&nbsp;&nbsp;&nbsp; /**&nbsp; Create a new Reader of the type defined in $inputFileType&nbsp; **/\r\n<br>\r\n&nbsp;&nbsp;&nbsp; $objReader = PHPExcel_IOFactory::createReader($inputFileType);\r\n<br>\r\n&nbsp;&nbsp;&nbsp; <br>\r\n&nbsp;&nbsp;&nbsp; /**&nbsp; Advise the Reader of which WorkSheets we want to load&nbsp; **/\r\n<br>\r\n&nbsp;&nbsp;&nbsp; $objReader-&gt;setLoadSheetsOnly($sheetnames); <br>\r\n&nbsp;&nbsp;&nbsp; <br>\r\n&nbsp;&nbsp;&nbsp; /** Apply the filter to get row from 23-40 and column A-F&nbsp; **/<br>\r\n&nbsp;&nbsp;&nbsp; $objReader-&gt;setReadFilter($filterSubset);<br>\r\n&nbsp;&nbsp;&nbsp; <br>\r\n&nbsp;&nbsp;&nbsp; /**&nbsp; Load $inputFileName to a PHPExcel Object&nbsp; **/ <br>\r\n&nbsp;&nbsp;&nbsp; $objPHPExcel = $objReader-&gt;load($inputFileName);<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <br>\r\n&nbsp;&nbsp;&nbsp; $loadedSheetNames = $objPHPExcel-&gt;getSheetNames();<br>\r\n&nbsp;&nbsp;&nbsp; <br>\r\n&nbsp;&nbsp;&nbsp; foreach($loadedSheetNames as $key =&gt; $value) <br>\r\n&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $objWorksheet = $objPHPExcel-&gt;setActiveSheetIndexByName($value);<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; foreach ($objWorksheet-&gt;getRowIterator() as $row)\r\n<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $cellIterator = $row-&gt;getCellIterator();<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $cellIterator-&gt;setIterateOnlyExistingCells(false);<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; foreach ($cellIterator as $cell)\r\n<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; {&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;\r\n<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $cellValue = trim($cell-&gt;getValue());<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; echo &quot;&lt;p&gt;cell name &quot;.$cellValue.&quot;&lt;/p&gt;&quot;;<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; }<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; die($value);<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; }<br>\r\n&nbsp;&nbsp;&nbsp; }</p>\r\n",
    "PostedDate": "2012-07-24T14:13:36.227-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "890385",
    "ThreadId": "388175",
    "Html": "<p>Just because you're using a filter to prevent loading of data from rows 1 to 22, doesn't mean they don't still exist -&nbsp;they're just all blank cells - row 23 still loads as row 23; and by default the rowIterator starts reading at row 1.</p>\r\n<p>You want to tell the iterator to start at row 23.</p>\r\n<p>You can do this by passing the start row to the getRowIterator() method:</p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre><span style=\"color: blue;\">foreach</span> ($objWorksheet-&gt;getRowIterator(23) <span style=\"color: blue;\">as</span> $row)\r\n</pre>\r\n</div>",
    "PostedDate": "2012-07-24T16:15:30.247-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "891321",
    "ThreadId": "388175",
    "Html": "<p>Oh I forgot about that.&nbsp; Thanks for pointing that out.&nbsp; It is now working.&nbsp; Thanks.</p>",
    "PostedDate": "2012-07-25T13:02:35.88-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]