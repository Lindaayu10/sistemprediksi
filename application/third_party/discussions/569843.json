[
  {
    "Id": "1313550",
    "ThreadId": "569843",
    "Html": "I try to read an Excel5 file (.xls) containing cells with a complex layout. \r<br />\nThe cell content pattern is &quot;text1 text2&quot; where text1 has a different text color than text2, or text1 has striketrough while text2 has not. text1 and text2 are separated by a single space. \r<br />\nWhen I load the sheet using PHPExcel_IOFactory and check the contents with: \r<br />\n<br />\n$sheetData = $objPHPExcel-&gt;getActiveSheet()-&gt;toArray(null,true,true,true); \r<br />\nvar_dump($sheetData); \r<br />\n<br />\nI found out that it works fine for most cells, but cells with the mixed font properties as described above always give: \r<br />\n'Q' =&gt; null \r<br />\nsuggesting that it is an empty cell, while it is not. It just contains &quot;text1 text2&quot; but special font properties apply only to one part.\r<br />\nIs there a solution to this problem?\r<br />\n<br />\nI am using PHPExcel 1.8.0. \r<br />\nphp 5.5.16\r<br />\nOS: Fedora 19<br />\n",
    "PostedDate": "2014-10-15T05:47:14.71-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1313605",
    "ThreadId": "569843",
    "Html": "Cells of this type contain a <code>Rich Text Object</code> in PHPExcel. When you use getValue() or similar to retrieve that cell, you should get a PHPExcel_RichText object back rather than a simple PHP scalar. Take a look at the API docs to see what methods are available for PHPExcel_RichText objects.<br />\n",
    "PostedDate": "2014-10-15T07:38:57.957-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1313980",
    "ThreadId": "569843",
    "Html": "Hi Mark,\r<br />\nThanks for your reply. I have tried your Rich Text Object Solution, but it persisted in returning nothing else than &quot;null&quot;.\r<br />\nI have copied and pasted a part of the Excel sheet with the &quot;difficult&quot; cells into a new empty Excel file and saved it with a different name using Microsoft Excel.\r<br />\nThis new file returns exactly the desired values, both with the Rich Text Method and with the original toArray method. There is no problem at all with this new file.\r<br />\n<br />\nMy conclusion is that there is something wrong with the original xls file, although I have no clue what it can be. It is not really corrupt because it can be opened and edited easily with Microsoft Excel. So Microsoft Excel (both Excel2003 on WinXP and Excel2010 on Win7) is obviously able to read the &quot;difficult&quot; cells correctly.\r<br />\n<br />\nRegards,\r<br />\nNicolas<br />\n",
    "PostedDate": "2014-10-16T07:06:34.403-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]