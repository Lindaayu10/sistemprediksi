[
  {
    "Id": "216261",
    "ThreadId": "63598",
    "Html": "<p>i have so many table values export into excel format. i need autosize of column width. for this i used following code, it doesnot work,</p>\r\n<p>$objPHPExcel-&gt;getActiveSheet()-&gt;getColumnDimension('C')-&gt;setAutoSize(true);</p>\r\n<p>only this&nbsp; $objPHPExcel-&gt;getActiveSheet()-&gt;getColumnDimension('C')-&gt;setwidth(10); can work.</p>\r\n<p>please help me</p>\r\n<p>By</p>\r\n<p>Dhruba</p>",
    "PostedDate": "2009-07-26T21:58:51.273-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "216552",
    "ThreadId": "63598",
    "Html": "<p><em>&gt;&gt; i need autosize of column width. for this i used following code, it doesnot work,</em><br> <br> Does it have no effect, or is it just a bit inaccurate?<br> <br> A fully accurate setAutoSize() method will be very tricky to implement because PHPExcel will need to know the exact width of each character. Right now it is a bit inaccurate because it is using approximations.<br> <br> However, if you are using PHPExcel 1.6.7, can you try latest source code as some improvements have been made on this.<br> <a href=\"../SourceControl/ListDownloadableCommits.aspx\">http://phpexcel.codeplex.com/SourceControl/ListDownloadableCommits.aspx</a><br> <span id=\"ctl00_ctl00_MasterContent_Content_CommentsRepeater_ctl00_MessageLabel\" style=\"display:inline-block;width:99%\"> </span></p>",
    "PostedDate": "2009-07-27T14:46:02.507-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "217681",
    "ThreadId": "63598",
    "Html": "<p>I was having the same problem as <strong>dhrubasearch </strong>and I decided to take a look inside the code for the <em>PHPExcel_Shared_Font </em>class. I found that both methods (the one in the stable release, 1.6.7, and the one from SVN) where not taking into consideration the font face or weight (see below, for references porpouses). I googled a little bit and I seem to have found a possible solution to this.</p>\r\n<p>1.6.7:</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre>$columnWidth = ((strlen($columnText) * $fontSize + 5) / $fontSize * 256 ) / 256; \r\n</pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p>SVN:</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre>$columnWidth = 1.025 * strlen($columnText) + 0.584;\r\n</pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p>The possible solution (inspired by http://www.simplemachines.org/community/index.php?topic=122913.0):</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre><span style=\"color:Blue\">public</span> <span style=\"color:Blue\">static</span> <span style=\"color:Blue\">function</span> calculateColumnWidth($fontSize = 9, $fontSizeInPixels = false, $columnText = <span style=\"color:#A31515\">''</span>, $rotation = 0) {\r\n    <span style=\"color:Green\">// If it is rich text, use rich text...</span>\r\n    <span style=\"color:Blue\">if</span> ($columnText <span style=\"color:Blue\">instanceof</span> PHPExcel_RichText) {\r\n        $columnText = $columnText-&gt;getPlainText();\r\n    }\r\n\t\t\r\n    <span style=\"color:Green\">// Only measure the part before the first newline character</span>\r\n    <span style=\"color:Blue\">if</span> (strpos($columnText, <span style=\"color:#A31515\">&quot;\\r&quot;</span>) !== false) {\r\n        $columnText = substr($columnText, 0, strpos($columnText, <span style=\"color:#A31515\">&quot;\\r&quot;</span>));\r\n    }\r\n    <span style=\"color:Blue\">if</span> (strpos($columnText, <span style=\"color:#A31515\">&quot;\\n&quot;</span>) !== false) {\r\n        $columnText = substr($columnText, 0, strpos($columnText, <span style=\"color:#A31515\">&quot;\\n&quot;</span>));\r\n    }\r\n\t\t\r\n    <span style=\"color:Green\">// XXX: Modifications made below</span>\r\n    <span style=\"color:Green\">//</span>\r\n    <span style=\"color:Green\">//\t-&gt; Line modified</span>\r\n    <span style=\"color:Green\">//</span>\r\n    <span style=\"color:Green\">// Calculate column width</span>\r\n    <span style=\"color:Green\">// values 1.025 and 0.584 found via interpolation by inspecting real Excel files with</span>\r\n    <span style=\"color:Green\">// Calibri font. May need further adjustment</span>\r\n    <span style=\"color:Green\">#$columnWidth = 1.025 * strlen($columnText) + 0.584; // Excel adds some padding</span>\r\n    $columnWidth = PHPExcel_Shared_Font::getTextWidth($columnText, $fontSize);\r\n\r\n    <span style=\"color:Blue\">if</span> (!$fontSizeInPixels) {\r\n        <span style=\"color:Green\">// Translate points size to pixel size</span>\r\n        $fontSize = PHPExcel_Shared_Font::fontSizeToPixels($fontSize);\r\n    }\r\n\r\n    <span style=\"color:Green\">// Calculate approximate rotated column width</span>\r\n    <span style=\"color:Blue\">if</span> ($rotation !== 0) {\r\n        <span style=\"color:Blue\">if</span> ($rotation == -165) {\r\n            <span style=\"color:Green\">// stacked text</span>\r\n            $columnWidth = 4; <span style=\"color:Green\">// approximation</span>\r\n        } <span style=\"color:Blue\">else</span> {\r\n\t    <span style=\"color:Green\">// rotated text</span>\r\n            $columnWidth = $columnWidth * cos(deg2rad($rotation)) + $fontSize * abs(sin(deg2rad($rotation))) / 5; <span style=\"color:Green\">// approximation</span>\r\n        }\r\n    }\r\n\r\n    <span style=\"color:Green\">// Return</span>\r\n    <span style=\"color:Blue\">return</span> round($columnWidth, 6);\r\n}\r\n</pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre><span style=\"color:Green\">/**<br> * XXX: Modifications made below<br> *\t<br> *    -&gt; Function created<br> *<br> * Get text width, given the font size and the .ttf file <br> * <br> * @param   string     $text\t\tText whose width will be returned<br> * @param   int         $fontSize\tFont size (in points)<br> * @param   string     $fontPath\tPath to the font used for calculations<br> */</span>\r\n<span style=\"color:Blue\">private</span> <span style=\"color:Blue\">static</span> <span style=\"color:Blue\">function</span> getTextWidth($text, $fontSize = 10, $fontPath = <span style=\"color:#A31515\">'C:/Windows/Fonts/Arial.ttf'</span>)<br>{<br>    $bbox = imagettfbbox($fontSize, 0, $fontPath, $text);<br><br>    $xcorr = 0 - $bbox[6]; <span style=\"color:Green\">//northwest X</span>\r\n    $ycorr = 0 - $bbox[7]; <span style=\"color:Green\">//northwest Y</span>\r\n\t\t\r\n    $textWidth = $bbox[2] + $xcorr;\r\n\r\n    <span style=\"color:Blue\">return</span> $textWidth * (14 / 100) + 2; <span style=\"color:Green\">// convertion plus empiric padding</span>\r\n}</pre>\r\n<br><br>Off course that there are a lot of improvements to make on this, such as allowing a better (more automatic) selection of the $fontPath and considering bold fonts (that normally have a larger width). For now, this code is working pretty well! What do you guys think about this?</div>\r\n<p>&nbsp;</p>",
    "PostedDate": "2009-07-30T10:30:05.787-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "217765",
    "ThreadId": "63598",
    "Html": "<p>@alextercete: This looks promising. Will copy to work item so we can discuss this.</p>\r\n<p><a href=\"http://phpexcel.codeplex.com/WorkItem/View.aspx?WorkItemId=10375\">http://phpexcel.codeplex.com/WorkItem/View.aspx?WorkItemId=10375</a></p>",
    "PostedDate": "2009-07-30T14:07:49.28-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]