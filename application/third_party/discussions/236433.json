[
  {
    "Id": "528460",
    "ThreadId": "236433",
    "Html": "\r\n<p>I've been using PHPExcel for a while for a utility of mine, but, like most others, have found it slow and memory hungry.&nbsp; I don't ever care about formulas, formatting, PDFs, HTML output or any of the other niceties of this class, but just need to be\r\n able to read and write large Excel files without problems....I'm just using the files to import/export data en masse from existing databases.&nbsp; Is there a better way out there?&nbsp; Perhaps a PHPExcel &quot;Lite&quot;?</p>\r\n<p>I do remove most of the PDF code and such just to decrease the overall codebase size, but am still saddled with the speed and memory issues when dealing with more than a few thousand rows.&nbsp; I used to use the PEAR class, but wound up with all kinds of\r\n problems with foreign language character encoding.</p>\r\n<p>I'm just hoping somebody, somewhere knows a better solution.</p>\r\n",
    "PostedDate": "2010-11-29T12:37:02.24-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "528474",
    "ThreadId": "236433",
    "Html": "\r\n<p>First off: yes, PHPExcel is slow and memory hungry, and if you've been reading the postings on this forum over the last , you'll know that we've been working hard on that and have made significant improvements. The latest SVN code has made significant changes\r\n in both memory usage and speed: I recently posted the latest comparison figures for different versions of PHPExcel\r\n<a href=\"http://phpexcel.codeplex.com/Thread/View.aspx?ThreadId=234150\">here</a>, and have made even further improvements since that was posted. But because PHPExcel is written in pure PHP, it will always be subject to the same limitations as PHP itself.</p>\r\n<p>Are you using any of the cell caching mechanisms? You say you're not using formulae, so are you setting setPreCalculateFormulas(false) in the Writer?</p>\r\n<p>Removing the PHP code to reduce the overall codebase size will not make the remaining code run faster, nor reduce the memory requirements for your scripts: only reduce the footprint &quot;on the disk&quot;. The PHPExcel autoloader only includes those classes that\r\n are actually required to execute your script, not the entire code on disk: so the PDF writer won't take any memory unless you're actually writing to PDF.</p>\r\n<p>If you're after an alternative that supports foreign language encoding, and that is fast and has a minimal memory footprint, then I can only think of two options: using PHP's COM extension to access MS Excel itself on a Windows server; or using\r\n<a href=\"https://github.com/iliaal/php_excel\">Ilia Alshanetsky's interface</a> to the\r\n<a href=\"http://www.libxl.com/\">LibXL library</a>. However, LibXL is a commercial product.</p>\r\n",
    "PostedDate": "2010-11-29T13:15:23.43-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "528515",
    "ThreadId": "236433",
    "Html": "\r\n<p>Thanks for the reply Mark.&nbsp; I only remove the extra files to make the download smaller for my customers since I supply the class as a separate zip file for them.&nbsp; Everything I need is run on various web servers, which are of course mostly Linux,\r\n so the LibXL solution won't help.&nbsp; I have a custom utility for managing inventory in an e-Commerce database.&nbsp; All I really need is raw data in and out.</p>\r\n<p>I did see the timings and such you're working on; it looks like you've indeed been very busy and it's greatly appreciated.&nbsp; Do you know when the next revision will be available or released as stable?&nbsp; Also, is there a post/doc anywhere that lists\r\n what switches/options would be beneficial to improve speed/footprint for those like me who don't need every potential feature enabled?</p>\r\n<p>Thanks!</p>\r\n",
    "PostedDate": "2010-11-29T15:02:11.933-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "529094",
    "ThreadId": "236433",
    "Html": "\r\n<blockquote style=\"border:solid .1em #ccc; font-style:italic; margin:.25em 1em 0 1em; padding:0 .25em 0 .25em\">\r\n<strong>SirWilliam wrote:</strong><br>\r\n<p>Do you know when the next revision will be available or released as stable?&nbsp; Also, is there a post/doc anywhere that lists what switches/options would be beneficial to improve speed/footprint for those like me who don't need every potential feature\r\n enabled?</p>\r\n&nbsp;</blockquote>\r\n<p>At the moment, I'm testing some of the changes that affect the calculation engine (unfortunately it means running my barrage of function tests, which take quite some time to check); but Maarten and myself have been discussing next week for a release... assuming\r\n I can get any problems that crop up through that testing resolved in time.</p>\r\n<p>The 1.7.5 release will also include the first few files in a new set of user documents and examples, initially going through all of the options available for readers and writers. While not specifically targeted at speed/performance, more at providing comprehensive\r\n examples of all the features available, they may give a few ideas on how to get the best performance from PHPExcel.</p>\r\n",
    "PostedDate": "2010-11-30T15:16:50.713-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]