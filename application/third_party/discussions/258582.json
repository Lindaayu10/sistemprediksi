[
  {
    "Id": "616553",
    "ThreadId": "258582",
    "Html": "\r\n<p>There does not seem to be a way for me to get around the memory limit problem.</p>\r\n<p>I have set memory for PHP to 1024MB but still I run out. &nbsp;I am writing 20,000 rows to as many as 6 sheets inside one workbook. &nbsp;I'm not doing anything very complex. &nbsp;just writing strings to each column. no formulas and no formatting.</p>\r\n<p>I'm hoping there are some creative ways to use phpexcel to get around the memory problem.</p>\r\n<p>What about writing one sheet at a time, closing that sheet in some way and writing to the next one? &nbsp;I don't need for the entire thing to be in memory since once I'm done with the one sheet I won't be making any changes to it. &nbsp;I just need to save\r\n it at that point and then create the next sheet inside the workbook.</p>\r\n<p>There seems to be a lot of mention of the memory limit problem but not a lot of creative ways to get around it. &nbsp;Yes I am using cell caching. &nbsp;I have tried all the different options. &nbsp;But in the end the memory problem renders this entire package\r\n useless for my needs. &nbsp;A shame since I am only writing text into these spread sheets. &nbsp;I can generate a csv version in a fraction of the time which will open in Excel also. &nbsp;In fact the only reason I'm using phpexcel is so that I can get the\r\n several worksheets in one file - can't do this with csv files&hellip;</p>\r\n<p>Can anyone point me in the right direction?</p>\r\n<p>Thanks.</p>\r\n",
    "PostedDate": "2011-05-22T22:29:04.447-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "616589",
    "ThreadId": "258582",
    "Html": "<p>I'm having the same problem and now looking for alternatives that work with Excel 2007.</p>\r\n<p>Would appreciate to hear some answers as well.</p>",
    "PostedDate": "2011-05-23T00:26:20.853-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "617687",
    "ThreadId": "258582",
    "Html": "<p>Unfortunately not. While I'm still spending inordinate amounts of time trying to squeeze every byte of extra memory from the code (while trying to avoid any degredation in performance); the problem is that PHPExcel is a pure PHP script, with no external dependencies, which means that it is susceptible to PHP's memory limitations. Cell caching goes some way to bypassing this limitation, but it still needs to maintain indexes to each cell in the cache controller.</p>\n<p>You will not find any pure PHP solution that works in this way; and to provide the fuunctionality to work this in PHPExcel would require a complete rewrite from scratch. Your options for alternatives are</p>\n<ul>\n<li>To use PHP's <a href=\"http://uk3.php.net/manual/en/book.com.php\">COM extension</a> with a copy of MS Excel itself on the server. </li>\n<li>Ilia Alshanetsky's <a rel=\"nofollow\" href=\"http://ilia.ws/archives/222-PHP-Excel-Extension.html\">Excel extension</a> (xls only, and requires a commercial component). </li>\n<li>The PHP wrapper around Open Office's alternative to COM (<a rel=\"nofollow\" href=\"http://www.wstech2.net/index.php?do=0a,01,05\">PUNO</a>) (requires Open Office installed on the server with Java support enabled). </li>\n</ul>\n<p>&nbsp;</p>",
    "PostedDate": "2011-05-24T14:32:55.803-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "617732",
    "ThreadId": "258582",
    "Html": "Thanks Mark,<br>\r\n<br>\r\nIt's an amazing tool and provides some great functionality. I'm going to keep using it. I've just upped it's memory allocation to 2gb for this script which does the trick.<br>\r\n<br>\r\nBoice",
    "PostedDate": "2011-05-24T15:52:40.25-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]