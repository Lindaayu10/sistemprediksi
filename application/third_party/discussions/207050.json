[
  {
    "Id": "422688",
    "ThreadId": "207050",
    "Html": "<p>I've been noticing an issue the past couple of weeks with some of the reports I've put together for the college.</p>\r\n<p>It was pretty similiar to the following issue:</p>\r\n<p><a href=\"http://phpexcel.codeplex.com/Thread/View.aspx?ThreadId=42854\">http://phpexcel.codeplex.com/Thread/View.aspx?ThreadId=42854</a></p>\r\n<p><em>Excel found unreadable content in 'myreport.xlsx'. Do you want to  recover the contents of this workbook? If you trust the source of this  workbook, click Yes</em>.</p>\r\n<p>I finally noticed that the formulas at the very end of the document (which contained some grand totals) were converted into straight numbers (no more formula) after I said &quot;yes&quot; to repairing the document.</p>\r\n<p>I finally figured out that the reason why I was having such problems was because I was reaching Excel's 255 parameter (or 1024 character) limit for the SUM() function.</p>\r\n<p>In this case I was unable to use a range of cells, because the cells I was trying to sum were not contiguous within the file.</p>\r\n<p>I did some testing, and it looks like Excel would be able to handle everything just fine if I were to use nested SUM()s.</p>\r\n<p>So I modified my code to do something like this:</p>\r\n<p>\r\n<div style=\"color:Black;background-color:White\">\r\n<pre>            $requestingGrandTotal = <span style=\"color:#A31515\">'=SUM(SUM('</span>;\r\n            $count = 1;\r\n            <span style=\"color:Blue\">foreach</span>($totalsPositionsArray <span style=\"color:Blue\">as</span> $position)\r\n            {\r\n                $requestingGrandTotal .= $position[<span style=\"color:#A31515\">'requesting'</span>];\r\n\r\n                <span style=\"color:Blue\">if</span> ($count === 50) {\r\n                    $requestingGrandTotal .= <span style=\"color:#A31515\">'), SUM('</span>;\r\n                } <span style=\"color:Blue\">else</span> {\r\n                    $requestingGrandTotal .= <span style=\"color:#A31515\">', '</span>;\r\n                }\r\n\r\n                <span style=\"color:Blue\">if</span> ($count === 50) {\r\n                    $count = 1;\r\n                } <span style=\"color:Blue\">else</span> {\r\n                    ++$count;\r\n                }\r\n            }\r\n            $requestingGrandTotal .= <span style=\"color:#A31515\">'))'</span>;\r\n</pre>\r\n</div>\r\n</p>\r\n<p>And that appears to have solved that problem (at least until I reach a new upper limit).</p>\r\n<p>This might explain what is happening in some particular cases where that Excel Error Message is cropping up.</p>",
    "PostedDate": "2010-03-23T11:17:41.247-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "423300",
    "ThreadId": "207050",
    "Html": "<p>Because a workbook can be written to a number of different output formats with different limits, PHPExcel itself doesn't check for those limits (especially as it would be a big overhead). When writing to Excel5 or Excel2007 formats, you need to ensure that you work within the limits yourself. If writing to HTML, or other formats where the Excel limitations aren't relevant, you are restricted only by PHP's memory restrictions.</p>\r\n<table border=0>\r\n<tbody>\r\n<tr>\r\n<th>&nbsp;</th><th><strong>Excel5</strong></th><th><strong>Excel2007</strong></th>\r\n</tr>\r\n<tr>\r\n<td><strong>Worksheet size</strong></td>\r\n<td>65,536 rows&nbsp;x 256 columns</td>\r\n<td>1,048,576 rows&nbsp;x 16,384 columns</td>\r\n</tr>\r\n<tr>\r\n<td><strong>Length of formula contents</strong></td>\r\n<td>1,024 characters</td>\r\n<td>8,192 characters</td>\r\n</tr>\r\n<tr>\r\n<td><strong>Arguments in a function</strong></td>\r\n<td>30</td>\r\n<td>255</td>\r\n</tr>\r\n<tr>\r\n<td><strong>Nested levels of functions</strong></td>\r\n<td>7</td>\r\n<td>64</td>\r\n</tr>\r\n</tbody>\r\n</table>",
    "PostedDate": "2010-03-24T16:26:46.627-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]