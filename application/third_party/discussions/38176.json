[
  {
    "Id": "126602",
    "ThreadId": "38176",
    "Html": "<p dir=ltr style=\"margin-right:0px\">I've written a small app for my boss that takes 7 or 8 xls files and outputs the contents to a csv file.<br>\r\nThe data in the files is just plain text fields&nbsp;... <br>\r\nThe script uses over 10 gigs of RAM to read the 50MB excel file (8GB physical, 2GB swap) and drags the server down to a crawl.<br>\r\n<br>\r\nIs there anything that can be done about this? A previous poster has pointed out it seems the scripts do not release the memory used for the objects. I second this.<br>\r\nWatching the top output while the script runs shows no decrease in memory usage between the reads of the different xls files even thought the variables are unset after each file.<br>\r\n<pre>\r\nAfter the first file\r\n13:26:46 Peak memory usage: 810.75 MB\r\nSecond\r\n13:27:27 Peak memory usage: 2779.5 MB\r\nThird\r\n13:27:59 Peak memory usage: 4330.25 MB\r\nFourth\r\n13:29:19 Peak memory usage: 8081.75 MB\r\n\r\nAnd right about there is where I get this in top\r\nCpu(s):&nbsp; 0.0%us, 72.7%sy,&nbsp; 0.0%ni,&nbsp; 0.0%id, 27.3%wa,&nbsp; 0.0%hi,&nbsp; 0.0%si,&nbsp; 0.0%st<br>Mem:&nbsp;&nbsp; 8018092k total,&nbsp; 8003476k used,&nbsp;&nbsp;&nbsp; 14616k free,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 268k buffers<br>Swap:&nbsp; 2031608k total,&nbsp; 2031608k used,&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0k free,&nbsp;&nbsp;&nbsp;&nbsp; 5480k cached<p>&nbsp;</p><p>&nbsp; PID USER&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; PR&nbsp; NI&nbsp; VIRT&nbsp; RES&nbsp; SHR S %CPU %MEM&nbsp;&nbsp;&nbsp; TIME+&nbsp; COMMAND<br>&nbsp; 285 root&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 10&nbsp; -5&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp; 0 D&nbsp;&nbsp; 40&nbsp; 0.0&nbsp; 41:19.61 kswapd0<br>&nbsp; 286 root&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 10&nbsp; -5&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp; 0 D&nbsp;&nbsp; 27&nbsp; 0.0&nbsp; 52:08.42 kswapd1<br>&nbsp;6375 root&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 18&nbsp;&nbsp; 0&nbsp; 9.8g 7.6g 4568 R&nbsp;&nbsp; 22 98.9&nbsp;&nbsp; 3:40.79 php\r\n\r\n</p></pre>\r\n<br>\r\nMore Details ...<br>\r\nThe output of program is like this (I have to delimit the fields using ~!~ because of commas in the name fields):\r\n<pre>&quot;Marketing Division&quot;~!~&quot;Clark,Ranjana B&quot;~!~&quot;&quot;~!~&quot;&quot;~!~&quot;&quot;~!~&quot;&quot;~!~&quot;&quot;~!~&quot;Marketing Division&quot;~!~&quot;Clark,Ranjana B&quot;~!~&quot;a020253&quot;~!~&quot;Covington, Debra&quot;~!~&quot;A&quot;~!~&quot;F&quot;~!~&quot;I&quot;~!~&quot;I&quot;~!~&quot;NR&quot;~!~&quot;NR&quot;~!~&quot;I&quot;~!~&quot;NR&quot;~!~&quot;NR&quot;~!~&quot;NR&quot;~!~&quot;NR&quot;~!~&quot;I&quot;~!~&quot;NR&quot;~!~&quot;Incomplete&quot;~!~&quot;Y&quot;</pre>\r\nXLS File sizes are:\r\n<pre>-rwxr--r-- 1 webdev webdev 27252736 Oct 21 12:37 CapitalManagement1.xls\r\n-rwxr--r-- 1 webdev webdev&nbsp; 5411328 Oct 21 12:37 CorporateInvestmentBanking.xls\r\n-rwxr--r-- 1 webdev webdev 21814272 Oct 21 12:37 Finance.xls\r\n-rwxr--r-- 1 webdev webdev 50259456 Oct 21 12:37 GeneralBankingGroup.xls\r\n-rwxr--r-- 1 webdev webdev&nbsp; 3201024 Oct 21 12:37 HRCorporateRelations.xls\r\n-rwxr--r-- 1 webdev webdev&nbsp; 1312256 Oct 21 12:37 Legal.xls\r\n-rwxr--r-- 1 webdev webdev&nbsp;&nbsp; 753152 Oct 21 12:37 Marketing1.xls\r\n-rwxr--r-- 1 webdev webdev&nbsp; 1761280 Oct 21 12:37 RiskManagement.xls\r\n-rwxr--r-- 1 webdev webdev&nbsp; 3918336 Oct 21 12:37 WealthManagement.xls\r\n</pre>\r\n<br>\r\nScript is below...<br>\r\n<pre>&lt;?php\r\nerror_reporting(E_ALL);\r\nini_set('memory_limit', '2048M');\r\nset_include_path(get_include_path() . PATH_SEPARATOR . './Classes/');\r\ninclude 'PHPExcel/IOFactory.php';\r\n$excelfiles[] = &quot;Marketing1.xls&quot;;\r\n$excelfiles[] = &quot;RiskManagement.xls&quot;;\r\n$excelfiles[] = &quot;Legal.xls&quot;;\r\n$excelfiles[] = &quot;HRCorporateRelations.xls&quot;;\r\n$excelfiles[] = &quot;GeneralBankingGroup.xls&quot;;\r\n$excelfiles[] = &quot;Finance.xls&quot;;\r\n$excelfiles[] = &quot;CorporateInvestmentBanking.xls&quot;;\r\n$excelfiles[] = &quot;CapitalManagement1.xls&quot;;\r\n$excelfiles[] = &quot;WealthManagement.xls&quot;;\r\nforeach ($excelfiles as $excelfile) {\r\n    $objReader = PHPExcel_IOFactory::createReader('Excel5');\r\n    $objPHPExcel = $objReader-&gt;load( $excelfile );<br>\r\n<br>    // Get the First and second Sheets\r\n    for ($s = 0; $s &lt;= 1; $s++) {\r\n        $objPHPExcel-&gt;setActiveSheetIndex( $s );\r\n        $maxrows = $objPHPExcel-&gt;getActiveSheet()-&gt;getHighestRow();\r\n        $maxcols = $objPHPExcel-&gt;getActiveSheet()-&gt;getHighestColumn();<br>\r\n        // Start at ROW 3 continue to end\r\n        for ($i = 3; $i &lt;= $maxrows ; $i++) {<br>\r\n            // Get COLUMNS A-Z\r\n            for ($j = 0; $j &lt;= 25 ; $j ++) {<br>\r\n                $cell = $j . $i ;\r\n                $celldata = $objPHPExcel-&gt;getActiveSheet()-&gt;getCellByColumnAndRow( $j , $i )-&gt;Getcalculatedvalue();\r\n                if ($j == &quot;25&quot;) {\r\n                    echo &quot;\\&quot;&quot;. addslashes($celldata) . &quot;\\&quot;&quot; ;\r\n                } else {\r\n                    echo &quot;\\&quot;&quot;. addslashes($celldata) . &quot;\\&quot;~!~&quot; ;\r\n                }\r\n            }\r\n            echo &quot;\\n&quot;;\r\n        }\r\n    }\r\n    unset($objReader);\r\n    unset($objPHPExcel);\r\n}\r\n?&gt;\r\n</pre>\r\n",
    "PostedDate": "2008-10-21T10:21:27.013-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "126733",
    "ThreadId": "38176",
    "Html": "This is unfortunately a known problem. As far as I understand this is really a problem with PHP rather than with PHPExcel.<br>\r\n<br>\r\nThere are circular object references between some objects so that unsetting the PHPExcel object will not free memory due to this bug:<br>\r\n<a href=\"http://bugs.php.net/bug.php?id=33595\">http://bugs.php.net/bug.php?id=33595</a><br>\r\n<a href=\"http://paul-m-jones.com/?p=262\">http://paul-m-jones.com/?p=262</a><br>\r\n<br>\r\nLooking at the first link, it seems that PHP 5.3 will fix this. However, I would like to see a confirmation of this somewhere.<br>\r\n<br>\r\nThis problem was also noted by whisper here<br>\r\n<a href=\"http://www.codeplex.com/PHPExcel/Thread/View.aspx?ThreadId=18404\">http://www.codeplex.com/PHPExcel/Thread/View.aspx?ThreadId=18404</a><br>\r\nHe proposes Destroy methods for breaking circular references which will enable one to get rid of the PHPExcel object while freeing the memory.<br>\r\nNot sure about what came out of it. At the moment, it may be better to just wait and see if PHP 5.3 fixes the issue.<br>\r\n<br>\r\nIn your situation, I would try to split the job over multiple scripts each handling only one workbook. Memory should be released as each script finishes.\r\n",
    "PostedDate": "2008-10-21T18:43:46.057-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]