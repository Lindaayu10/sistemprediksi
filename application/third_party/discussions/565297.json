[
  {
    "Id": "1299273",
    "ThreadId": "565297",
    "Html": "Hey all,<br />\nI am uploading some files that could be csv, xls, xlsx... so im using the PHPExcel_IOFactory::identify($filepath) to create the file object.<br />\n<br />\nBut when i upload csv files I can't seem to pull leading zeroes. The other formats (xsls,xlsx) I can retrieve the column with the leading zeroes, since I guess the column has meta data set to Text formatting in Excel. <br />\nBut with simple csv files i was hoping to force the column to be interpreted as Text it via:<br />\n$objWorksheet-&gt;getStyle('A1:A'.$maxRow)-&gt;getNumberFormat()-&gt;setFormatCode( PHPExcel_Style_NumberFormat::FORMAT_TEXT );<br />\nBut it has had no effect... Thought I could upload a simple php file and sample csv.<br />\n<br />\nFor example, It should output: 'Cell #A2 is 0101' but it outputs currently 'Cell #A2 is 101' <br />\nHere is the php and csv file: <a href=\"https://dl.dropboxusercontent.com/u/36600570/phpexcel_example/php-excel-example.zip\" rel=\"nofollow\">https://dl.dropboxusercontent.com/u/36600570/phpexcel_example/php-excel-example.zip</a><br />\n<br />\nHere is the code if afraid to test/download above file:<br />\nLooking for any feedback, <br />\nThanks!<br />\nArian<br />\n<pre><code>\n&lt;?php\nrequire '../../libs/PHPExcel/Classes/PHPExcel.php';\nrequire '../../libs/PHPExcel/Classes/PHPExcel/IOFactory.php';\n\n\n$filepath = 'test.csv'; //for now simple script to \ntry {\n  $fileType = PHPExcel_IOFactory::identify($filepath);\n  $objReader = PHPExcel_IOFactory::createReader($fileType);\n} catch ( Exception $e ){\n  echo 'Please specific the correct file location in script';\n  exit;\n}\n$objPHPExcel = $objReader-&gt;load($filepath);\n$objWorksheet = $objPHPExcel-&gt;getActiveSheet();\n\n//!!!make the 1st column A1:A4 Formatted as Text so leading zeroes come through.\n$maxRow = $objWorksheet-&gt;getHighestDataRow();\n$objWorksheet-&gt;getStyle('A1:A'.$maxRow)-&gt;getNumberFormat()-&gt;setFormatCode( PHPExcel_Style_NumberFormat::FORMAT_TEXT );\n\n\n\nforeach ($objWorksheet-&gt;getRowIterator() as $row) {\n  $row_num = $row-&gt;getRowIndex();\n  \n  $cellIterator = $row-&gt;getCellIterator();\n  $cellIterator-&gt;setIterateOnlyExistingCells(false); // This loops all cells, even if it is not set. By default, only cells that are set will be iterated.\n\n  $row_num = $row-&gt;getRowIndex();\n  foreach ($cellIterator as $cell_num =&gt; $cell) { //Note: $cell_num index is 0 based!, so add a 1 to make more sense when viewing spreadsheet\n    $cell_num = $cell_num + 1;\n    $val = trim($cell-&gt;getValue());\n    $formatted_val = trim($cell-&gt;getFormattedValue());\n    \n    echo 'Cell #'. chr($cell_num-1 +65) . $row_num .' is '. $val.'&lt;br/&gt;'; //should output 0101&lt;br/&gt;0101&lt;br/&gt;00102&lt;br/&gt;\n    \n  }\n\n  echo '&lt;br/&gt;';\n}          </code></pre>\n\n",
    "PostedDate": "2014-09-04T16:29:36.873-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1299364",
    "ThreadId": "565297",
    "Html": "There is already an <a href=\"https://github.com/PHPOffice/PHPExcel/issues/394\" rel=\"nofollow\">issue</a> raised for this<br />\n",
    "PostedDate": "2014-09-05T00:07:30.733-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1299368",
    "ThreadId": "565297",
    "Html": "Hey Mark,\r<br />\n<br />\nI just read that issue... Sorry if misinterpreting, but seems like you just said numbers with leading zeroes should be trimmed off and still converted by PHPExcel.\r<br />\nWasn't sure if his case is slightly different, seems like he's getting values from database with leading zeros and wants to insert them into a csv with them intact.\r<br />\nWhen I am just trying to read from a csv already created with another application.\r<br />\n<br />\nSeems like there wasn't a code-fix suggestion and treating issue like a 'wont fix' or 'works as designed' at least for his issue?\r<br />\nBut I thought there was a solution that you posted for this that should work here?: <a href=\"http://stackoverflow.com/a/12457699\" rel=\"nofollow\">http://stackoverflow.com/a/12457699</a>\r<br />\nI didn't look into the Cell Binder solution yet, but thought the setFormatCode set on a range was a current solution (but not working in code above)?\r<br />\nLike forcing the Cell's format to be 'pure' text seems like it should work and should never do any sort of pre-processing work to trim/remove string values being read or written (in my case I'm just reading values from that cell).\r<br />\nDoes that mean its a bug on setFormatCode() or Im just using that function incorrectly?\r<br />\n<br />\n<br />\nThanks again for a great library,\r<br />\nLooking forward to some suggestions,\r<br />\nArian<br />\n",
    "PostedDate": "2014-09-05T00:35:14.967-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1299390",
    "ThreadId": "565297",
    "Html": "The cell binder rules are applied whenever a cell is populated unless you set the value using the &quot;explicit&quot; methods, and (unless you've told PHPExcel to use a custom binder) the default value binder will always be used.\r<br />\nThat applies whether you're populating the cell value in your own script, or if it's being populated by a Reader.... most of the Readers use &quot;explicit&quot; methods because the datatype to use is part of the file format, but a csv file has no such information, so it can't use &quot;explicit&quot; and the binding rules apply.\r<br />\n<br />\nThe SO response is about setting your own binding rules to override the default binder behaviour, while issue GH-394 is a request that the existing default binder should be less aggressive in always converting numeric values to float, and should treat numeric values with leading zeroes as string.\r<br />\n<br />\nI'm going to implement the change to the default value binder so it is less aggressive, for the 1.8.1 release later this month..... it's not quite as straightforward as treating everything with a leading <code>0</code> as a string (as shown in the SO answer) because <code>0.123</code> has a leading zero, but should still be converted to a numeric.\r<br />\n<br />\nIf you need to resolve this more urgently, then the easiest solution is to use a custom binder.<br />\n",
    "PostedDate": "2014-09-05T01:33:45.973-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": "2014-09-06T02:46:47.76-07:00"
  },
  {
    "Id": "1299726",
    "ThreadId": "565297",
    "Html": "Cool, The custom binder you recommended worked out...\r<br />\n<br />\nHere is what I did if anyone else needs to do it:\r<br />\nI threw in LeadingZeroBinder.php into PHPExcel/Cell:<br />\n<pre><code>&lt;?php\n\nclass LeadingZeroBinder extends PHPExcel_Cell_DefaultValueBinder\n  implements PHPExcel_Cell_IValueBinder \n{ \n    public function bindValue(PHPExcel_Cell $cell, $value = null) \n    { \n        // sanitize UTF-8 strings \n        if (is_string($value)) { \n            $value = PHPExcel_Shared_String::SanitizeUTF8($value); \n        } \n\n        // Implement your own override logic \n        if (is_string($value) &amp;&amp; $value[0] == '0') { //looks like if its a string, and starts with a leading 0, then force String\n            $cell-&gt;setValueExplicit($value, PHPExcel_Cell_DataType::TYPE_STRING); \n            return true; \n        } \n\n        // Not bound yet? Use default value parent... \n        return parent::bindValue($cell, $value); \n    } \n} \n?&gt;</code></pre>\n\nIf just want everything text, guess this could work too:<br />\n<pre><code>&lt;?php\n\nclass TextValueBinder \n  implements PHPExcel_Cell_IValueBinder\n{\n    public function bindValue(PHPExcel_Cell $cell, $value = null) \n    {\n        $cell-&gt;setValueExplicit($value, PHPExcel_Cell_DataType::TYPE_STRING);\n        return true;\n    }\n}\n?&gt;\n</code></pre>\n\nThen in my main code, something simple like this:<br />\n<pre><code>try {\n    $fileType = PHPExcel_IOFactory::identify($filepath);\n    $objReader = PHPExcel_IOFactory::createReader($fileType);\n    if( $fileType==='CSV') ) { //common values I would see: Excel2007, Excel5, CSV\n        require 'PHPExcel/Cell/LeadingZeroBinder.php';//this one specifically for Leading Zeros\n        //require 'PHPExcel/Cell/TextValueBinder.php'; //backup incase above doesn't work\n        PHPExcel_Cell::setValueBinder( new LeadingZeroBinder() );\n    }\n\n} ....</code></pre>\n\n",
    "PostedDate": "2014-09-05T08:02:00.733-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]