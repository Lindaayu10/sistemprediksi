[
  {
    "Id": "1231699",
    "ThreadId": "541562",
    "Html": "Hi,\r<br />\n<br />\nI'm having problems loading a large xlsx file (300.000 rows with 5 columns), about 15 mega in size even if i use chunks.\r<br />\nBellow is my code, and some debugging:<br />\n<pre><code>try {\n        $inputFileType = PHPExcel_IOFactory::identify($inputFileName);\n        $objReader = PHPExcel_IOFactory::createReader($inputFileType);\n        $workSheetInfo = $objReader-&gt;listWorksheetInfo($inputFileName);\n} catch(Exception $e) {\n        return $this-&gt;__set_error(&quot;Parsing file error&quot;);\n}\n\n$totalRows = $workSheetInfo[0]['totalRows'];\n$MemoryLimit = getMemorySizeAsBytes();\n$BufferFactor = 1;\n$RowMemory = (1024 * 1) * $workSheetInfo[0]['totalColumns'];\n$chunkSize = max(intval(($MemoryLimit / $BufferFactor) / $RowMemory), 100);\n$chunkSize = min($totalRows, $chunkSize);\n$chunkSize = 1000; // THIS IS FOR TESTING PURPOSE ONLY, EVEN IF I LOWER THE CHUNK SIZE NO EFFECT AT ALL\n\nfor ($startRow = 1; $startRow &lt;= $totalRows; $startRow += $chunkSize) {\n    $chunkFilter = new chunkReadFilter($startRow, $chunkSize);\n    $objReader-&gt;setReadFilter($chunkFilter);\n    $objPHPExcel = $objReader-&gt;load($inputFileName);\n    \n    $last = ($startRow - 1 ) + $chunkSize;\n    for ($r=$startRow; $r &lt;= $last; $r++) {\n        $rowData = array();\n\n        for ($c='A'; $c &lt;= $workSheetInfo[0]['lastColumnLetter']; $c++) {\n            $rowData[] = $objPHPExcel-&gt;getActiveSheet()-&gt;getCell($c.$r)-&gt;getValue();\n        }\n        // create an sql query to insert into database, using transactions, after each chunk phase\n    }\n}</code></pre>\n\nThe class for chunk reading:<br />\n<pre><code>class chunkReadFilter implements PHPExcel_Reader_IReadFilter\n{\n    private $_startRow = 0;\n\n    private $_endRow = 0;\n\n    /**  We expect a list of the rows that we want to read to be passed into the constructor  */\n    public function __construct($startRow, $chunkSize) {\n        $this-&gt;_startRow    = $startRow;\n        $this-&gt;_endRow      = $startRow + $chunkSize;\n    }\n\n    public function readCell($column, $row, $worksheetName = '') {\n        //  Only read the heading row, and the rows that were configured in the constructor\n        if (($row == 1) || ($row &gt;= $this-&gt;_startRow &amp;&amp; $row &lt; $this-&gt;_endRow)) {\n            return true;\n        }\n        return false;\n    }\n}</code></pre>\n\nI'm getting the error: Fatal error: Allowed memory size of 134217728 bytes exhausted (tried to allocate 79794656 bytes) in /var/www/xxxx/htdocs/Excel/Classes/PHPExcel/Reader/Excel2007.php on line 327\r<br />\n<br />\nI've added some trace for the memory usage and to see where the script stops and here are the results:\r<br />\n<br />\n2014-04-08 11:12:08 Filename: /tmp/phpPQ3BPI, File size: 15533695 - 2895984\r<br />\n2014-04-08 11:12:08 Identify: Excel2007 - 3765312\r<br />\n2014-04-08 11:12:08 Create reader - 3765948\r<br />\n2014-04-08 11:12:20 ChunkSize: 1000, Total rows: 329031, Total cols: 5 - 3769888\r<br />\n2014-04-08 11:12:20 Before loading file: 1 chunk - 3770052\r<br />\n<br />\nThe values after &quot;-&quot; are the result of memory usage function emory_get_usage() and the unit measure are bytes. So, the files size of the xlsx is around 15 mega.\r<br />\n<br />\nAny ideas what can it be?\r<br />\n<br />\nAny help will be greatly appreciated\r<br />\n<br />\nThanks.<br />\n",
    "PostedDate": "2014-04-08T01:38:52.347-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1422012",
    "ThreadId": "541562",
    "Html": "@mohorab where you able to find a solution to your issue? I have a similar one, in my case I don't have the memory problem but when I start reading the huge sheet (more than 750K rows with 5 columns) my entire system is useless, I can't even move the mouse.\r<br />\n<br />\nThanks in advance.<br />\n",
    "PostedDate": "2015-05-01T08:15:21.627-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]