[
  {
    "Id": "894854",
    "ThreadId": "390052",
    "Html": "\r\n<p>I am trying to read the excel and insert the record into mysql.</p>\r\n<p>I am getting this error after it seem to have run successfully.&nbsp; Any ideas what is the problem:</p>\r\n<p>&nbsp;</p>\r\n<p>Fatal error: Allowed memory size of 536870912 bytes exhausted (tried to allocate 524288 bytes) in /var/www/html/PHPExcel/Classes/PHPExcel/CachedObjectStorage/Memory.php on line 47</p>\r\n",
    "PostedDate": "2012-08-02T13:04:11.943-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "894886",
    "ThreadId": "390052",
    "Html": "<p>From FAQ:</p>\r\n<p>&nbsp;</p>\r\n<h2>Fatal error: Allowed memory size of xxx bytes exhausted (tried to allocate yyy bytes) in zzz on line aaa</h2>\r\n<p><span>PHPExcel holds an \"in memory\" representation of a spreadsheet, so it is susceptible to PHP's memory limitations. The memory made available to PHP can be increased by editing the value of the memory</span><em>limit directive in your php.ini file, or by using ini</em><span>set('memory_limit', '128M') within your code (ISP permitting);</span><br /><br /><span>Some Readers and Writers are faster than others, and they also use differing amounts of memory. You can find some indication of the relative performance and memory usage for the different Readers and Writers, over the different versions of PHPExcel, here&nbsp;</span><a href=\"http://phpexcel.codeplex.com/Thread/View.aspx?ThreadId=234150\">http://phpexcel.codeplex.com/Thread/View.aspx?ThreadId=234150</a><br /><br /><span>If you've already increased memory to a maximum, or can't change your memory limit, then this discussion on the board describes some of the methods that can be applied to reduce the memory usage of your scripts using PHPExcel&nbsp;</span><a href=\"http://phpexcel.codeplex.com/Thread/View.aspx?ThreadId=242712\">http://phpexcel.codeplex.com/Thread/View.aspx?ThreadId=242712</a></p>",
    "PostedDate": "2012-08-02T14:15:27.56-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "894920",
    "ThreadId": "390052",
    "Html": "<p>I tried to use memory caching and I am still getting the error.&nbsp; I even try to disconnect and unset so that there is no memory leakage.</p>\r\n<p>Fatal error: Allowed memory size of 536870912 bytes exhausted (tried to  allocate 17030419 bytes) in  /var/www/html/PHPExcel/Classes/PHPExcel/Reader/Excel2007.php on line 428</p>\r\n<p>&nbsp;</p>\r\n<p>Here is my code:</p>\r\n<p>//file type<br />$inputFileType = 'Excel2007';<br /><br />//get file name<br />$inputFileName = \"../../files/sample.xlsx\";<br /><br />/**&nbsp; Define a Read Filter class implementing PHPExcel_Reader_IReadFilter&nbsp; */<br />class chunkReadFilter implements PHPExcel_Reader_IReadFilter<br />{<br />&nbsp;&nbsp;&nbsp; private $_startRow = 0;<br /><br />&nbsp;&nbsp;&nbsp; private $_endRow = 0;<br /><br />&nbsp;&nbsp;&nbsp; /**&nbsp; Set the list of rows that we want to read&nbsp; */<br />&nbsp;&nbsp;&nbsp; public function setRows($startRow, $chunkSize) {<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $this-&gt;_startRow&nbsp;&nbsp;&nbsp; = $startRow;<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $this-&gt;_endRow&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; = $startRow + $chunkSize;<br />&nbsp;&nbsp;&nbsp; }<br /><br />&nbsp;&nbsp;&nbsp; public function readCell($column, $row, $worksheetName = '') {<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; //&nbsp; Only read the heading row, and the rows that are configured in $this-&gt;_startRow and $this-&gt;_endRow<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; if (($row == 1) || ($row &gt;= $this-&gt;_startRow &amp;&amp; $row &lt; $this-&gt;_endRow)) {<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; return true;<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; }<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; return false;<br />&nbsp;&nbsp;&nbsp; }<br />}<br /><br />//check that file exists<br />if(file_exists($inputFileName))<br />{&nbsp;&nbsp;&nbsp; <br />&nbsp;&nbsp;&nbsp; //Create a new Reader of the type defined in $inputFileType<br />&nbsp;&nbsp;&nbsp; $objReader = PHPExcel_IOFactory::createReader($inputFileType);<br />&nbsp;&nbsp;&nbsp; <br />&nbsp;&nbsp;&nbsp; //cache memory so that it does not use to much memory<br />&nbsp;&nbsp;&nbsp; $cacheMethod = PHPExcel_CachedObjectStorageFactory::cache_in_memory_serialized;<br />&nbsp;&nbsp;&nbsp; PHPExcel_Settings::setCacheStorageMethod($cacheMethod);<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <br />&nbsp;&nbsp;&nbsp; //Advise the Reader to load all Worksheets<br />&nbsp;&nbsp;&nbsp; $objReader-&gt;setLoadAllSheets();<br /><br />&nbsp;&nbsp;&nbsp; //Load $inputFileName to a PHPExcel Object<br />&nbsp;&nbsp;&nbsp; $objPHPExcel = $objReader-&gt;load($inputFileName);<br /><br /><br />&nbsp;&nbsp;&nbsp; <br />&nbsp;&nbsp;&nbsp; //get the total number of rows<br />&nbsp;&nbsp;&nbsp; $total_rows = $objSheet-&gt;getHighestRow();<br />&nbsp;&nbsp;&nbsp; <br />&nbsp;&nbsp;&nbsp; <br />&nbsp;&nbsp;&nbsp; //Define how many rows we want to read for each \"chunk\"<br />&nbsp;&nbsp;&nbsp; $chunkSize = 2048; <br /><br />&nbsp;&nbsp;&nbsp; // Create a new Instance of our Read Filter<br />&nbsp;&nbsp;&nbsp; $chunkFilter = new chunkReadFilter();<br /><br />&nbsp;&nbsp;&nbsp; //Tell the Reader to use the Read Filter <br />&nbsp;&nbsp;&nbsp; $objReader-&gt;setReadFilter($chunkFilter); <br />&nbsp;&nbsp;&nbsp; <br />&nbsp;&nbsp;&nbsp; //set variables<br />&nbsp;&nbsp;&nbsp; $tableName = \"prep_mysoft_wireless\";<br />&nbsp;&nbsp;&nbsp; $create_date = date(\"Y-m-d G:i:s\");<br />&nbsp;&nbsp;&nbsp; $start_time = date(\"Y-m-d G:i:s\");<br />&nbsp;&nbsp;&nbsp; <br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <br />&nbsp;&nbsp;&nbsp; //Loop to read our worksheet in \"chunk size\" blocks<br />&nbsp;&nbsp;&nbsp; for ($startRow = 2; $startRow &lt;= $total_rows; $startRow += $chunkSize) <br />&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; //Tell the Read Filter, the limits on which rows we want to read this iteration<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $chunkFilter-&gt;setRows($startRow,$chunkSize);<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; //&nbsp; Load only the rows that match our filter from $inputFileName to a PHPExcel Object<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $objPHPExcel = $objReader-&gt;load($inputFileName);&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; //get only the first sheet<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $objPHPExcel-&gt;setActiveSheetIndex(0);<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $objWorksheet = $objPHPExcel-&gt;getActiveSheet();&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; foreach ($objWorksheet-&gt;getRowIterator(2) as $row) <br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; {&nbsp;&nbsp;&nbsp; <br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $cellIterator = $row-&gt;getCellIterator();<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $cellIterator-&gt;setIterateOnlyExistingCells(false);<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $sql = \"INSERT INTO \".$tableName.\" (user_id, dirn, user_name, organization, create_date) VALUES (\";<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $i = 0;<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; foreach ($cellIterator as $cell) <br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; {&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $cellValue = trim($cell-&gt;getValue());<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $cellValue = str_replace(\"\\\"\",\"\",$cellValue);<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $cellValue = str_replace(\"=\",\"\",$cellValue);<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $cellValue = str_replace(\",\",\"\",$cellValue);<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $cellValue = $mysqli-&gt;real_escape_string($cellValue);<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; if($i == 0) <br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $cellValue = \"'\".$cellValue.\"'\";<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $rowData = ($cellValue != \"\") ? true : false;<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; }<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; else<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $cellValue = ($cellValue == \"\") ? \", NULL\" : \", '\".$cellValue.\"'\";<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; }<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $sql .= $cellValue;<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $i++;<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; } //end foreach cellIterator<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $sql .= \", '\".$create_date.\"')\";<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; if($rowData)<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; if(!$mysqli-&gt;query($sql))<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; die(\"Error in inserting data for table $tableName: \".$sql.\" ==&gt; \".$mysqli-&gt;error);<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; }<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; }<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; } //end foreach getRowIterator&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <br />&nbsp;&nbsp;&nbsp; } //end for loop chunk<br />&nbsp;&nbsp;&nbsp; <br />&nbsp;&nbsp;&nbsp; <br />&nbsp;&nbsp;&nbsp; $objPHPExcel-&gt;disconnectWorksheets();<br />&nbsp;&nbsp;&nbsp; unset($objPHPExcel);<br />}</p>",
    "PostedDate": "2012-08-02T15:30:39.847-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "895144",
    "ThreadId": "390052",
    "Html": "<p>Well to start with, you're loading the entire workbook, and then setting a readFilter on the reader, which is pretty meaningless.... if you define a readFilter, then set it against the reader <strong>before </strong>loading</p>",
    "PostedDate": "2012-08-03T06:04:39.253-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "895153",
    "ThreadId": "390052",
    "Html": "<p>I don't understand what you mean.&nbsp; The workbook only have one active sheet.&nbsp; But because we have to assume that we don't know what the first sheet is name, I can not just load that worksheet.&nbsp; Can you example what you mean by setting the readFilter against the reader before loading.</p>\r\n<p>I modified it a little to get the total row from listWorksheeetInfo.&nbsp; Would this work better?&nbsp; I had to remove the cache memory because for some reasons it is importing blank records.&nbsp; I have a check that it should only import record if the first cell in the row have a value.&nbsp; Yet with the cache memory, it is importing thousands of empty rows.&nbsp; Any ideas why that might be?</p>\r\n<p>//check that file exists<br />if(file_exists($inputFileName))<br />{&nbsp;&nbsp;&nbsp; <br />&nbsp;&nbsp;&nbsp; //Create a new Reader of the type defined in $inputFileType<br />&nbsp;&nbsp;&nbsp; $objReader = PHPExcel_IOFactory::createReader($inputFileType);<br />&nbsp;&nbsp;&nbsp; <br />&nbsp;&nbsp;&nbsp; $fileinfo = $objReader-&gt;listWorksheetInfo($inputFileName);<br />&nbsp;&nbsp;&nbsp; $totalRows = $fileinfo[0]['totalRows'];<br />&nbsp; &nbsp;&nbsp;&nbsp; <br />&nbsp;&nbsp;&nbsp; //Advise the Reader to load all Worksheets<br />&nbsp;&nbsp;&nbsp; $objReader-&gt;setLoadAllSheets();<br /><br />&nbsp;&nbsp;&nbsp; //Define how many rows we want to read for each \"chunk\"<br />&nbsp;&nbsp;&nbsp; $chunkSize = 2048; <br /><br />&nbsp;&nbsp;&nbsp; // Create a new Instance of our Read Filter<br />&nbsp;&nbsp;&nbsp; $chunkFilter = new chunkReadFilter();<br /><br />&nbsp;&nbsp;&nbsp; //Tell the Reader to use the Read Filter <br />&nbsp;&nbsp;&nbsp; $objReader-&gt;setReadFilter($chunkFilter); <br />&nbsp;&nbsp;&nbsp; <br />&nbsp;&nbsp;&nbsp; //set variables<br />&nbsp;&nbsp;&nbsp; $tableName = \"prep_mysoft_wireless\";<br />&nbsp;&nbsp;&nbsp; $create_date = date(\"Y-m-d G:i:s\");<br />&nbsp;&nbsp;&nbsp; $start_time = date(\"Y-m-d G:i:s\");<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <br />&nbsp;&nbsp;&nbsp; //Loop to read our worksheet in \"chunk size\" blocks<br />&nbsp;&nbsp;&nbsp; for ($startRow = 2; $startRow &lt;= $totalRows; $startRow += $chunkSize) <br />&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; //Tell the Read Filter, the limits on which rows we want to read this iteration<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $chunkFilter-&gt;setRows($startRow,$chunkSize);<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; //&nbsp; Load only the rows that match our filter from $inputFileName to a PHPExcel Object<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $objPHPExcel = $objReader-&gt;load($inputFileName);<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $objWorksheet = $objPHPExcel-&gt;getActiveSheet();</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; .....</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n<p>}</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2012-08-03T06:23:47.697-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "895193",
    "ThreadId": "390052",
    "Html": "<p>&nbsp;&nbsp;&nbsp; $fileinfo = $objReader-&gt;listWorksheetInfo($inputFileName);<br />&nbsp;&nbsp;&nbsp; $totalRows = $fileinfo[0]['totalRows'];<br />&nbsp; &nbsp;&nbsp;&nbsp; <br />&nbsp;&nbsp;&nbsp; //Advise the Reader to load all Worksheets<br />&nbsp;&nbsp;&nbsp; $objReader-&gt;setLoadAllSheets();<br /><br />replace with</p>\r\n<p>&nbsp;&nbsp; // Advise the reader to load only the first worksheet</p>\r\n<p>&nbsp;&nbsp;&nbsp; $fileinfo = $objReader-&gt;listWorksheetInfo($inputFileName);<br />&nbsp;&nbsp;&nbsp; $totalRows = $fileinfo[0]['totalRows'];<br />&nbsp;&nbsp;&nbsp; $firstSheetName = $fileinfo[0]['worksheetName'];<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp; //Advise the Reader to load&nbsp;just the first worksheet<br />&nbsp;&nbsp;&nbsp; $objReader-&gt;setLoadSheetsOnly($firstSheetName);</p>\r\n<p>Get rid of the</p>\r\n<p>&nbsp;&nbsp;&nbsp; //Load $inputFileName to a PHPExcel Object<br />&nbsp;&nbsp;&nbsp; $objPHPExcel = $objReader-&gt;load($inputFileName);<br /><br />outside the loop. You're telling PHPExcel to load the entire workbook into memory before you even start looping</p>\r\n<p>&nbsp;</p>\r\n<p>Replace</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; foreach ($objWorksheet-&gt;getRowIterator(2) as $row) <br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; {&nbsp;&nbsp;&nbsp; <br />with</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; foreach ($objWorksheet-&gt;getRowIterator($startRow) as $row) <br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; {&nbsp;&nbsp;&nbsp; <br />so that your rowIterator starts at the first row of the chunk when you loop, not at row 2 every time</p>",
    "PostedDate": "2012-08-03T07:41:36.163-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "895259",
    "ThreadId": "390052",
    "Html": "<p>Mark:</p>\r\n<p>I made all the changes you selected.&nbsp; But now, after it retrieve the first 2048 records, afterward ... it seem to not be able to read the cell value because all the value after 2048, they are all set to NULL.&nbsp; I checked the cell and they have value in them.&nbsp; This is cause when I replace the</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; foreach ($objWorksheet-&gt;getRowIterator(2) as $row)</p>\r\n<p>with</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; foreach ($objWorksheet-&gt;getRowIterator($startRow) as $row)</p>\r\n<p>&nbsp;</p>\r\n<p>Here is my entire code:</p>\r\n<p>//Define a Read Filter class implementing PHPExcel_Reader_IReadFilter<br />class chunkReadFilter implements PHPExcel_Reader_IReadFilter<br />{<br />&nbsp;&nbsp;&nbsp; private $_startRow = 0;<br /><br />&nbsp;&nbsp;&nbsp; private $_endRow = 0;<br /><br />&nbsp;&nbsp;&nbsp; /**&nbsp; Set the list of rows that we want to read&nbsp; */<br />&nbsp;&nbsp;&nbsp; public function setRows($startRow, $chunkSize) {<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $this-&gt;_startRow&nbsp;&nbsp;&nbsp; = $startRow;<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $this-&gt;_endRow&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; = $startRow + $chunkSize;<br />&nbsp;&nbsp;&nbsp; }<br /><br />&nbsp;&nbsp;&nbsp; public function readCell($column, $row, $worksheetName = '') {<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; // Only read the heading row, and the rows that are configured in $this-&gt;_startRow and $this-&gt;_endRow<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; if (($row == 1) || ($row &gt;= $this-&gt;_startRow &amp;&amp; $row &lt; $this-&gt;_endRow)) {<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; return true;<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; }<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; return false;<br />&nbsp;&nbsp;&nbsp; }<br />}</p>\r\n<p>//check that file exists<br />if(file_exists($inputFileName))<br />{<br />&nbsp;&nbsp;&nbsp; //Create a new Reader of the type defined in $inputFileType<br />&nbsp;&nbsp;&nbsp; $objReader = PHPExcel_IOFactory::createReader($inputFileType);<br />&nbsp;&nbsp;&nbsp; <br />&nbsp;&nbsp;&nbsp; $fileinfo = $objReader-&gt;listWorksheetInfo($inputFileName);<br />&nbsp;&nbsp;&nbsp; $totalRows = $fileinfo[0]['totalRows'];<br />&nbsp;&nbsp;&nbsp; $firstSheetName = $fileinfo[0]['worksheetName'];&nbsp;&nbsp;&nbsp; <br />&nbsp;&nbsp;&nbsp; <br />&nbsp;&nbsp;&nbsp; // Load only first sheet.<br />&nbsp;&nbsp;&nbsp; $objReader-&gt;setLoadSheetsOnly($firstSheetName);<br /><br />&nbsp;&nbsp;&nbsp; //Define how many rows we want to read for each \"chunk\"<br />&nbsp;&nbsp;&nbsp; $chunkSize = 2048; <br /><br />&nbsp;&nbsp;&nbsp; // Create a new Instance of our Read Filter<br />&nbsp;&nbsp;&nbsp; $chunkFilter = new chunkReadFilter();<br /><br />&nbsp;&nbsp;&nbsp; //Tell the Reader to use the Read Filter <br />&nbsp;&nbsp;&nbsp; $objReader-&gt;setReadFilter($chunkFilter); <br />&nbsp;&nbsp;&nbsp; <br />&nbsp;&nbsp;&nbsp; //set variables<br />&nbsp;&nbsp;&nbsp; $tableName = \"prep_mysoft_wireless\";<br />&nbsp;&nbsp;&nbsp; $create_date = date(\"Y-m-d G:i:s\");<br />&nbsp;&nbsp;&nbsp; <br />&nbsp;&nbsp;&nbsp; //Loop to read our worksheet in \"chunk size\" blocks<br />&nbsp;&nbsp;&nbsp; for ($startRow = 2; $startRow &lt;= $totalRows; $startRow += $chunkSize) <br />&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; //Tell the Read Filter, the limits on which rows we want to read this iteration<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $chunkFilter-&gt;setRows($startRow,$chunkSize);<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; //&nbsp; Load only the rows that match our filter from $inputFileName to a PHPExcel Object<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $objPHPExcel = $objReader-&gt;load($inputFileName);<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $objWorksheet = $objPHPExcel-&gt;getActiveSheet();<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; foreach ($objWorksheet-&gt;getRowIterator($startRow) as $row) <br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; {&nbsp;&nbsp;&nbsp; <br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $cellIterator = $row-&gt;getCellIterator();<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $cellIterator-&gt;setIterateOnlyExistingCells(false);<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $rowData = false;<br /><br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $sql = \"INSERT INTO \".$tableName.\" (user_id, dirn, user_name, organization, create_date) VALUES (\";<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $i = 1;<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; foreach ($cellIterator as $cell) <br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $cellValue = trim($cell-&gt;getValue());<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $cellValue = str_replace(\",\",\" - \",$cellValue);<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $cellValue = $mysqli-&gt;real_escape_string($cellValue);<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; if($i == 0)<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $cellValue = \"'\".$cellValue.\"'\";<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; if (($cellValue != \"\") &amp;&amp; (!empty($cellValue))) $rowData = true;<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; }<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; else if ($i &gt; 0)<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $cellValue = (($cellValue == \"\") || (empty($cellValue))) ? \", NULL\" : \", '\".$cellValue.\"'\";<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; }<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $sql .= $cellValue;<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $i++;&nbsp;&nbsp;&nbsp; <br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; } //end foreach cellIterator<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $sql .= \", '\".$create_date.\"')\";<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <br /><br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; if($rowData)<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; if(!$mysqli-&gt;query($sql))<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; die(\"Error in inserting data for table $tableName: \".$sql.\" ==&gt; \".$mysqli-&gt;error);<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; }&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; }<br />&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; } //end foreach getRowIterator<br />&nbsp;&nbsp;&nbsp; } //end for loop chunk<br />&nbsp;&nbsp;&nbsp; <br />&nbsp;&nbsp;&nbsp; $objPHPExcel-&gt;disconnectWorksheets();<br />&nbsp;&nbsp;&nbsp; unset($objPHPExcel);<br />}</p>",
    "PostedDate": "2012-08-03T09:55:18.627-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "895378",
    "ThreadId": "390052",
    "Html": "<p>Have you tried putting any diagnostics in to display the address of each cell as it's processed?</p>\r\n<p>First iteration of the for ($startRow = 2; $startRow &lt;= $totalRows; $startRow += $chunkSize) loop, the filter should load rows&nbsp;2 to 2049. The row iterator is set to start iterating from row 2 until it has read the highest loaded row (row 2049).</p>\r\n<p>Second iteration of the for ($startRow = 2; $startRow &lt;= $totalRows; $startRow += $chunkSize) loop, the filter should load rows 2050 to 4097. The row iterator should then be set to start iterating from row 2050 until again it has read the highest loaded row (row 4097).</p>\r\n<p>Third iteration, the filter should load rows 4098 to 6145, the row iterator should be set to start iterating from row 4098, etc.</p>\r\n<p>I have tested this principle and it's working correctly for me. Please can you try adding some diagnostics to show what cells are being accessed to try and help me identify what is going wrong for you</p>",
    "PostedDate": "2012-08-03T13:37:45.07-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "896097",
    "ThreadId": "390052",
    "Html": "<p>Hi Mark,</p>\r\n<p>The problem was with the chunksize.&nbsp; If I set $chunkSize = 2048, I guess it is taking lots of memory to process that amount of records.&nbsp; I decrease it to 100 then 200 then 500 and it seem to work fine.&nbsp; I am fine with it processing 500 records/chunk.&nbsp; For approx. 17,000 records, it is taking 6 minutes to process.&nbsp; Since this process will be run at night and once a month, this should be ok.</p>\r\n<p>Thank you for your trouble and assistance!!!&nbsp;</p>",
    "PostedDate": "2012-08-06T09:15:19.733-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "896170",
    "ThreadId": "390052",
    "Html": "<p>Here's some code that automatically calculates the optimal ChunkSize based on the available system memory.</p>\r\n<p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre><span style=\"color: green;\">//</span>\r\n<span style=\"color: green;\">// Estimate maximum chunk size based on system memory.</span>\r\n<span style=\"color: green;\">//</span>\r\n$MemoryLimit = getMemorySizeAsBytes();\r\n$BufferFactor = 1; \r\n$RowMemory = (1024 * 1) * $WorksheetListInfo[0][<span style=\"color: #a31515;\">'totalColumns'</span>];\r\n$ChunkSize = max(intval(($MemoryLimit / $BufferFactor) / $RowMemory), 100);\r\n</pre>\r\n</div>\r\n</p>\r\n<p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre><span style=\"color: green;\">//</span>\r\n<span style=\"color: green;\">// Convert Memory Size To Bytes</span>\r\n<span style=\"color: green;\">//</span>\r\n<span style=\"color: blue;\">function</span> getMemorySizeAsBytes() {\r\n  $memory_size = ini_get(<span style=\"color: #a31515;\">'memory_limit'</span>);\r\n\r\n  <span style=\"color: blue;\">switch</span> (substr($memory_size, -1)) {\r\n    <span style=\"color: blue;\">case</span> <span style=\"color: #a31515;\">'G'</span>:\r\n    <span style=\"color: blue;\">case</span> <span style=\"color: #a31515;\">'g'</span>:\r\n      <span style=\"color: blue;\">return</span> (int) $memory_size * 1073741824;\r\n    <span style=\"color: blue;\">case</span> <span style=\"color: #a31515;\">'M'</span>:\r\n    <span style=\"color: blue;\">case</span> <span style=\"color: #a31515;\">'m'</span>:\r\n      <span style=\"color: blue;\">return</span> (int) $memory_size * 1048576;\r\n    <span style=\"color: blue;\">case</span> <span style=\"color: #a31515;\">'K'</span>:\r\n    <span style=\"color: blue;\">case</span> <span style=\"color: #a31515;\">'k'</span>:\r\n      <span style=\"color: blue;\">return</span> (int) $memory_size * 1024;\r\n  }\r\n\r\n  <span style=\"color: blue;\">return</span> $memory_size;\r\n}\r\n</pre>\r\n</div>\r\n</p>",
    "PostedDate": "2012-08-06T11:14:32.56-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "896666",
    "ThreadId": "390052",
    "Html": "<p>Oh wow!&nbsp; Thank you.&nbsp; I am going to try this out!&nbsp; Thanks again!</p>",
    "PostedDate": "2012-08-07T13:51:38.093-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "896757",
    "ThreadId": "390052",
    "Html": "<p>If you have any questions on integrating my code with yours, just post them here.</p>\r\n<p>- Christopher Mullins</p>",
    "PostedDate": "2012-08-07T20:57:00.213-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]