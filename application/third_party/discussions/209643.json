[
  {
    "Id": "432219",
    "ThreadId": "209643",
    "Html": "<p>I'm using PHPExcel @version 1.7.2 with PHP Version 5.2.9 on Windows NT 5.1 build 2600.</p>\r\n<p>Is there a way for me to determine something like</p>\r\n<p><code>&nbsp;&nbsp; $objWorksheet-&gt;getHighestColumn();</code></p>\r\n<p>without having to load the entire worksheet first?&nbsp; I'm trying to serve up an HTML table spreadsheet in chunks due to the very large size.&nbsp; I'd like to initially load say the first 100 rows, then have ajax lazy load additional rows as the user scrolls down.&nbsp; I plan on using a custom read filter to only grab several rows at a time, but when I initially draw the table, I need to know what headers to draw (A-???).</p>\r\n<p>For instance, if the highest column in the first 50 rows is E, but there's data in row G54, I wouldn't have written a table header pasts E when I first drew the table, so I'm hosed.</p>\r\n<p><strong>So, what's the best way to determine the highest populated column for a spreadsheet without loading the entire sheet in to memory?</strong></p>\r\n<p>Also, right now, I'm getting a list of spreadsheet names by loading the file with a read Filter that basically includes nothing (spreadsheet name = &quot;somebogusname&quot;).&nbsp; I'm able to use the worksheet iterator and loop through to get my names, but...</p>\r\n<p><strong>Is there a more ellogant way to get the spreadsheet list without having to evaluate every cell with a read filter?</strong></p>\r\n<p>Thanks in advance!</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2010-04-17T05:10:05.057-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "432964",
    "ThreadId": "209643",
    "Html": "<p><strong>So, what's the best way to determine the highest populated  column for a spreadsheet without loading the entire sheet in to memory?</strong></p>\r\n<p>You are correct. It is currently necessary to load the whole sheet to know the highest column. I'm not sure what we can do about it.</p>\r\n<p>Excel does in fact store for each sheet something called the dimension. Example: &lt;dimension ref=&quot;A1:H1&quot; /&gt;</p>\r\n<p>We could perhaps provide a method to extract that piece of information?</p>\r\n<p>&nbsp;</p>\r\n<p><strong>Is there a more ellogant way to get the spreadsheet list without  having to evaluate every cell with a read filter?</strong></p>\r\n<p>Excel does store a list of sheet names. Technically, it would be possible to extract that list without having to mess with cells.</p>\r\n<p>&nbsp;</p>\r\n<p>It is possible to do something about the problems. The challenge lies in providing a clean solution.</p>",
    "PostedDate": "2010-04-19T19:02:39.453-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "434135",
    "ThreadId": "209643",
    "Html": "<p>I got to thinking and realized that the custom read filter I created for pulling back say rows 101-150 already must evaluate every cell to determine whether to include it or not.&nbsp; That being the case, I added another public variable to house the maximum column evaluated.&nbsp; This way, when I initially load the web page and need to draw all the column headers (whether they're populated or not during the first 50 rows), I can check the readfilter's public $maxCol to see what the highest column was after it's loaded.&nbsp; I'm limiting the load to a specific spreadsheet prior to loading it, otherwise I'd probably need a map or something to house highest columns per spreadsheet.<br><br>The only part that's lame is I have to create my html table headers on my own as opposed to looping via a column iterator which is built in.&nbsp; Anyway, here's my custom read filter in case anyone's interested.<br><br><br>&lt;?php<br>/** PHPExcel root directory */<br>if (!defined('PHPEXCEL_ROOT')) {<br>/**<br>&nbsp;* @ignore<br>&nbsp;*/<br>&nbsp;&nbsp;&nbsp; define('PHPEXCEL_ROOT', dirname(__FILE__) . '/../../');<br>}<br><br>/** PHPExcel_Reader_IReadFilter */<br>require_once PHPEXCEL_ROOT . 'PHPExcel/Reader/IReadFilter.php';<br><br>class PHPExcel_Reader_CustomReadFilter implements PHPExcel_Reader_IReadFilter {<br><br>&nbsp;&nbsp;&nbsp; public $wsName;<br>&nbsp;&nbsp;&nbsp; public $startingRow;<br>&nbsp;&nbsp;&nbsp; public $rowCount;<br>&nbsp;&nbsp;&nbsp; public $maxCol;<br><br>&nbsp;&nbsp;&nbsp; public function __construct($pWsName, $pStartingRow, $pRowCount = 50) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $this-&gt;wsName = $pWsName;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $this-&gt;startingRow = $pStartingRow;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $this-&gt;rowCount = $pRowCount;<br>&nbsp;&nbsp;&nbsp; }<br><br>&nbsp;&nbsp;&nbsp; public function readCell($column, $row, $worksheetName = '') {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Get max column regardless of filter.<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ($this-&gt;wsName == $worksheetName &amp;&amp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ($this-&gt;maxCol == null ||<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; str_pad($this-&gt;maxCol, 10, ' ', STR_PAD_LEFT) &lt; str_pad($column, 10, ' ',STR_PAD_LEFT))) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $this-&gt;maxCol = $column;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ($row &gt;= $this-&gt;startingRow<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&amp; $row &lt; $this-&gt;startingRow + $this-&gt;rowCount<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &amp;&amp; (isset($this-&gt;wsName) &amp;&amp; $worksheetName == $this-&gt;wsName)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return true;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; } else {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return false;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>&nbsp;&nbsp;&nbsp; }<br>}<br><br></p>",
    "PostedDate": "2010-04-22T04:26:20.173-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]