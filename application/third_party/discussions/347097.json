[
  {
    "Id": "804658",
    "ThreadId": "347097",
    "Html": "<p>I am new to PHP EXCEL and my very first test is giving me grief.&nbsp; Basically what I am doing is this:</p>\n<ol>\n<li>Upload a spreadsheet to a database.&nbsp; Spreadsheet is not huge.&nbsp; it usually has less than 100 rows and around 60 columns. </li>\n<li>In a different routine, Spreadsheets are retrieved from the database and written to a cleverly named file directory called .... FILES. </li>\n<li>I have confirmed that the spreadsheet file retrieved from the database and written to the FILES directory is readable by EXCEL. </li>\n<li>After the spreadsheet file is written to the directory a fully qualified path+filename is presented to a function as a parameter. The function (code below) is supposed to   \n<ul>\n<li>Open the file using PHPEXCEL </li>\n<li>Do a bunch of audits and update the spreadsheet cells with error messages (ala the 15datavalidation.php example) </li>\n<li>Then write the updated spreadsheet ala the 01simple-downlaod-xls.php example.That is, offer to open or download the newly named spreadsheet that contains the audits.</li>\n</ul>\n</li>\n</ol>\n<p><strong>But here's the problem:&nbsp; </strong>the file that is being written when openned by excel (a) generates the \"the file you are trying to open ...\" warning message, (b) when I open it anyway the file it contains<span style=\"text-decoration: underline;\"> three different kinds of information</span> and is not at all a spreadsheet file:</p>\n<ul>\n<li>The stylesheet for the overall site (how did PHPEXCEL get this???) </li>\n<li>What looks like the Excel bytecodes in the middle, and finally</li>\n<li>A whole bunch of \"undefined Offset errors\" at the end. </li>\n</ul>\n<p>I am stumped.&nbsp; HELP!</p>\n<p>Here is the routine that is supposed to read, audit, and write the spreadsheet. I have removed audits.</p>\n<p>&lt;?php<br /> function auditSpreadsheet(&amp;$theOutput, <br /> &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $theDIRandFileName,&nbsp;&nbsp;&nbsp; // The fully qualified filepath+filename of the spreadsheet retrieved from the DB and placed in a host directory<br /> &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $SheetNum, <br /> &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $SheetName)<br /> &nbsp;{<br /> &nbsp;&nbsp;&nbsp; error_reporting(E_ALL);<br /> &nbsp;&nbsp;&nbsp; date_default_timezone_set('America/New_York');<br /> &nbsp;&nbsp;&nbsp; $IOFactory = $_SESSION['FUNCTION_utilities'].'PHPExcel/IOFactory.php';<br /> &nbsp;&nbsp;&nbsp; require_once $IOFactory;<br /> <br /> &nbsp;&nbsp;&nbsp; if (!file_exists($theDIRandFileName)) {<br /> &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $theOutput .= 'The fully qualified filepath+filename =['.$theDIRandFileName.' &lt;strong&gt;cannot be found&lt;/strong&gt;.&lt;br&gt;';<br /> &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; return;<br /> &nbsp;&nbsp;&nbsp; } else { <br /> &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; $theOutput .= 'The fully qualified filepath+filename =['.$theDIRandFileName.' &lt;strong&gt;Has been found&lt;/strong&gt;.&lt;br&gt;';<br /> &nbsp;&nbsp;&nbsp; }<br /> &nbsp;&nbsp;&nbsp; $objPHPExcel = new PHPExcel();<br /> &nbsp;&nbsp;&nbsp; $objReader = new PHPExcel_Reader_Excel5();&nbsp; &nbsp;&nbsp;&nbsp; <br /> &nbsp;&nbsp;&nbsp; $objPHPExcel = $objReader-&gt;load( $theDIRandFileName );&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; <br /> //&nbsp;&nbsp;&nbsp; $objPHPExcel = PHPExcel_IOFactory::load($theDIRandFileName);&nbsp; // original code.&nbsp; Replaced with the above based upon slumming around the net<br /> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Same results<br /> <br /> &nbsp;&nbsp;&nbsp; $objPHPExcel-&gt;setActiveSheetIndex(0);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Set active sheet index to the first sheet, so Excel opens this as the first sheet<br /> &nbsp;&nbsp;&nbsp; $rowIterator = $objPHPExcel-&gt;getActiveSheet()-&gt;getRowIterator(); // instantiate the iterator<br /> <br /> ////////////////&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Audit Spreadsheet goes here&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /////////////////////<br /> &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; // (1) Inner iterate through cells Columns 'A' through 'AQ'<br /> &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; // (2) Outer interate row 2 through end .................. HOW do I sense End of file????<br /> &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; // (3) generate query.&nbsp; How????????????????<br /> &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; ////////////////&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Audit Spreadsheet NED&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; /////////////////////<br /> // Redirect output to a client&rsquo;s web browser (Excel2007)<br /> &nbsp;&nbsp;&nbsp; header('Content-Type: application/vnd.ms-excel');<br /> &nbsp;&nbsp;&nbsp; header('Content-Disposition: attachment;filename=\"Audited_Spreadsheet.xls\"');<br /> &nbsp;&nbsp;&nbsp; header('Cache-Control: max-age=0');<br /> <br /> &nbsp;&nbsp;&nbsp; $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');<br /> &nbsp;&nbsp;&nbsp; $objWriter-&gt;save('php://output');<br /> <br /> &nbsp;&nbsp;&nbsp;&nbsp; return;<br /> &nbsp;} // end of function<br /> ?&gt;</p>",
    "PostedDate": "2012-03-02T13:48:52.937-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "804833",
    "ThreadId": "347097",
    "Html": "<p>The chances are that there's something in your script that is echoing the stylesheet information. PHPExcel doesn't have that, but something in your code does... is this script being run from within a framework or similar that might add it's own output?</p>",
    "PostedDate": "2012-03-03T01:43:14.44-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "804975",
    "ThreadId": "347097",
    "Html": "<p>Got it working, but in a different way.&nbsp; The problem was related to my calling the above routine inside another routine that was in the process of dynamically generating HTML and PHP via $htmlset .= &lt;&lt;&lt;_STUFF tags.&nbsp; This was then sent to a simple echo $STUFF  to paint the screen.&nbsp;&nbsp; Bleh.</p>\n<p>I switched to simply writing it to a server directory and doing an href= to it.&nbsp; Works just ducky.</p>\n<p><strong><span style=\"color: #ff0000;\">&lt;break&gt;</span></strong></p>\n<p><strong>But while I'm at it</strong> I have another query:&nbsp; I want to do conditional coloring and messages of cells based upon whether the contents are in error, are in a&nbsp; warning state, or just require conveying of some informational.&nbsp; No problem (I think)  with doing the auditing.&nbsp; Just bizzarely detailed -- I think I will write a code writter...&nbsp; But I also want to <strong>conditionally</strong> add a comment to the colorized cell when one or more of the conditions is triggered. Pseudo-code would be something like this:</p>\n<p>if($thisCell) == BOO-BOO-type1 {&nbsp;&nbsp;&nbsp; //&nbsp; Boo-boo 1 relates to, say, $objConditional1 which tests for a boo-boo.&nbsp; Conditionals2 .. n might also apply and set their own boo-boo states.<br /> &nbsp;&nbsp;&nbsp; ....<br /> &nbsp;&nbsp;&nbsp; ...<br /> &nbsp;&nbsp; $booBoo .= 'Boy, you messed up again. ';<br /> &nbsp;&nbsp; $objPHPExcel-&gt;getActiveSheet()-&gt;getComment('$thisCell')-&gt;getText()-&gt;createTextRun($booBoo);</p>\n<p>} else {&nbsp;&nbsp;&nbsp; // no boo-boo</p>\n<p>&nbsp;&nbsp; &lt;NO-OP&gt;</p>\n<p>}</p>\n<p>Easy to Pseudo-code, but for the life of me I have <strong>no clue</strong> how to conditionally test if a cell had a $objectContitional<strong><span style=\"text-decoration: underline;\">_x_</span></strong> fire and what I need to do syntactically.&nbsp; I tried  to slum through the various documentation sources (online and word) and have no clue how to do this!&nbsp;</p>\n<p>Is this doable?&nbsp; A smidge of advice would be <strong>OH! so helpful.</strong></p>\n<p>Thanks,</p>\n<p>Victor</p>",
    "PostedDate": "2012-03-03T12:36:23.25-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]