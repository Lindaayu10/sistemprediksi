[
  {
    "Id": "818508",
    "ThreadId": "350824",
    "Html": "\r\n<p>A few days ago, I created a spreadsheet for a Zend Framework project I am writing for a customer.&nbsp; We had massive changes to the menus, and I wanted something to help me see what was changing, and to see which menu items had been deactivated.&nbsp;\r\n So I ended up with a file which was structured like this:</p>\r\n<p style=\"padding-left:30px\">Sheet1 (&quot;Prod) - Loaded from the database table for the menus.</p>\r\n<p style=\"padding-left:30px\">Sheet2 (&quot;Updates&quot;) - What started as a copy of the data from Sheet1, with the following conditional formatting applied:</p>\r\n<table style=\"margin-left:60px\">\r\n<tbody>\r\n<tr>\r\n<td>CF Formula #1 (&dagger;):</td>\r\n<td>=INDIRECT(ADDRESS(ROW(),COLUMN(),,,&quot;Prod&quot;))&lt;&gt;INDIRECT(ADDRESS(ROW(),COLUMN()))</td>\r\n</tr>\r\n<tr>\r\n<td>CF Formula #2:</td>\r\n<td>=INDIRECT(&quot;J&quot;&amp;ROW())=&quot;f&quot;</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<p>To try to speed things up, I thought to just load things into the project, and let it parse things out, using the formula already there for the conditional formatting.&nbsp; And so, I &quot;discovered&quot; the pear channel, did a pear install (which in reality, put\r\n it one level too deep for the autoloader to find properly), and once I got the test action loading the spreadsheet, I started to tackle going after the data and checking the conditional formatting for the cell, which is where I really hit a wall.The problem\r\n I ran into is that the only way I could determine to find out what the conditional formatting left the background at was to do something such as:</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:black; background-color:white; margin-left:30px\">\r\n<pre>$sheet = $excel-&gt;getSheetByName(<span style=\"color:#a31515\">'Updates'</span>);\r\n$calc = <span style=\"color:blue\">new</span> PHPExcel_Calculation::getInstance();\r\n<span style=\"color:green\">// deletia</span>\r\n<span style=\"color:blue\">foreach</span>(range(<span style=\"color:#a31515\">'1'</span>, $highest_row) <span style=\"color:blue\">as</span> $row) {\r\n    <span style=\"color:blue\">echo</span> <span style=\"color:#a31515\">'    &lt;tr&gt;'</span> . PHP_EOL;\r\n    <span style=\"color:blue\">foreach</span>(range(<span style=\"color:#a31515\">'A'</span>, $highest_col) <span style=\"color:blue\">as</span> $col) {\r\n        $addr = $col . $row;\r\n        $cstyles = $sheet-&gt;getConditionalStyles($addr);\r\n        <span style=\"color:blue\">foreach</span> ($cstyles <span style=\"color:blue\">as</span> $cstyle) {\r\n            <span style=\"color:blue\">switch</span> ($cstyle-&gt;getConditionType()) {\r\n<span style=\"color:green\">// deletia</span>\r\n            <span style=\"color:blue\">case</span> PHPExcel_Style_Conditional::CONDITION_EXPRESSION:\r\n                $cond = $cstyle-&gt;getCondition();\r\n                <span style=\"color:blue\">try</span> {\r\n                    $res = $calc-&gt;calculateFormula(<span style=\"color:#a31515\">'='</span>.$cond, $col . $row, $refcell);\r\n                } <span style=\"color:blue\">catch</span> (Exception $e) {\r\n                    <span style=\"color:blue\">echo</span> <span style=\"color:#a31515\">'error!!'</span>;\r\n                }\r\n                <span style=\"color:blue\">break</span>;\r\n<span style=\"color:green\">// deletia</span>\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n</pre>\r\n</div>\r\n<p>I first found that the code for INDIRECT did not work unless I passed in $refcell.&nbsp; Leaving it unspecified resulted in attempting to execute a method of a non-object (e.g. null).&nbsp; But when I do include it, I get an error stating that there is a\r\n circular reference.&nbsp; Now, if we were updating the cell value, I could see this, but for a conditional formatting formula... this really is not the case.&nbsp; And so, I find myself going about it in what I view is slightly less optimal method, by hard-coding\r\n the comparison into my PHP code, rather than letting what the spreadsheet did handle things for me.</p>\r\n<p>Anyone have any suggestions on how to properly let what is in the spreadsheet conditions drive this??</p>\r\n<p>Thanks!</p>\r\n<p>- Doug</p>\r\n<hr>\r\n<p>&dagger;&nbsp; This is the final formula I tried.&nbsp; It started out as</p>\r\n<p>&nbsp;</p>\r\n<p style=\"padding-left:30px\">=INDIRECT(&quot;Prod!R&quot;&amp;ROW()&amp;&quot;C&quot;&amp;COLUMN()))&lt;&gt;INDIRECT(&quot;R&quot;&amp;ROW()&amp;&quot;C&quot;&amp;COLUMN())</p>\r\n<p>and then changed to</p>\r\n<p style=\"padding-left:30px\">=INDIRECT(&quot;Prod&quot;&amp;ADDRESS(ROW(),COLUMN()))&lt;&gt;INDIRECT(ADDRESS(ROW(),COLUMN()))</p>\r\n<p>before reaching the form above due to limitations found in PHPExcel.&nbsp; But all of these worked in Excel.</p>\r\n<p>&nbsp;</p>\r\n<p>BTW: clicking on the upper right corner to select the sheet resulted in a range of &quot;=$1:$1048576&quot;, which crashed PHPExcel due to memory exhaustion.</p>\r\n",
    "PostedDate": "2012-04-01T17:19:14.03-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]