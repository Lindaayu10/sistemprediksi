{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "There are a number of well-documented methods of reducing the PHPExcel memory footprint such as cell caching and cell chunking.",
    "ClosedDate": "2015-03-24T06:27:31.673-07:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "I keep getting an error when I try to load an Excel file. I get a message that I am out of memory. The file is not large - in one case it only had 2 lines in it (one header and one data), other times, it is less than 92KB in size. I have let PHPExcel determine the type and it returns Excel 2007. \n\nI think it is something with the actual file - something causing PHPExcel to think it is corrupted. I tried copying only the data to a new file and that seemed to resolve the issue, but the issue comes back. Even with the newly created file.\n\nI am using PHPExcel 1.8.0. The people editing the file are using Excel 2013 and Excel 2010 (it is shared between a few people).  Could there be a compatibility issue with the reader of Excel 2007?\n\nIs there something I can do to get around this? I need the loading program to run daily without human intervention and so having to keep recreating the file isn't really feasible. Should I ask them to save it as a different format?\n\nPlease help.....",
    "LastUpdatedDate": "2015-03-24T06:56:36.417-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "PHPExcel",
    "ReportedDate": "2015-03-17T06:53:15.643-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "File upload memory issue",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 21781
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "I saw this suggestion in another post and it 'may' have helped. I just tried using the $objReader->setReadDataOnly(true) and it seems to have worked (at least once). Perhaps this could be a resolution to my issue. \r\n\r\nI will have to try this a few times to see if it keeps working, but maybe I am a little closer. Seems as though the reader in the upload process has issues with files saved/edited with Office 2013. ",
      "PostedDate": "2015-03-18T05:24:42.243-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2015-03-24T06:27:31.673-07:00",
      "Id": -2147483648
    },
    {
      "Message": "the issue didn't concern the file size. I believe it is because of formatting in Excel 2013 and not allowing the file to be uploaded. The fix that seems to be working was to read the data only - as I provided as a follow-up.  ",
      "PostedDate": "2015-03-24T06:56:36.417-07:00",
      "Id": -2147483648
    }
  ]
}