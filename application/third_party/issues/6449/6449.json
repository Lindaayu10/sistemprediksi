{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "Try setting the style instead of this one. Style is the thing Excel cares about when formatting the cell on the worksheet. This method is to be used for more accurate formula calculations using the PHPExcel calculation engine.",
    "ClosedDate": "2008-06-24T09:47:11.867-07:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "$ssn='09999999';\n$objPHPExcel->getActiveSheet()->SetCellValueExplicit('P1', $ssn, PHPExcel_Cell_DataType::TYPE_STRING);\nÂ \nI would expect this to have a text type cell at P1 with the value 09999999 in it.  Instead it gives a numeric cell with '9999999'.",
    "LastUpdatedDate": "2013-05-16T05:43:32.713-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "PHPExcel",
    "ReportedDate": "2008-06-23T19:40:28.693-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "SetCellValueExplicit",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 6449
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Aha!  I overlooked the fact I could force my own format input with a string.  I added:\r\n$objPHPExcel->getActiveSheet()->getStyle('P1')->getNumberFormat()->setFormatCode('000000000');\r\n\r\nThis did the trick nicely.",
      "PostedDate": "2008-06-28T08:53:18.993-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-02-21T19:05:11.66-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-05-16T05:43:32.713-07:00",
      "Id": -2147483648
    }
  ]
}