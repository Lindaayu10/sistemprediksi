{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "PHPExcel",
      "DisplayName": "PHPExcel"
    },
    "ClosedComment": "Fixed in SVN",
    "ClosedDate": "2009-08-20T02:29:53.76-07:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "If using the code:\n \n$cellIterator = $row->getCellIterator();\nforeach ($cellIterator as $key => $cell) {\n \n... and onlyExistingCells is set (the default) and the last cell doesn't exist, the foreach returns $cell == null, and $key == empty column + 1\n \nThe attached patch fixes the behaviour, and appears to regression-test to the same results, factoring out what appear to be timestamps in the output.\n \nIt also makes the code generally look a lot simpler!  One \"flaw\" is that it makes valid() possibly change the position state.  But then, pre-patch current() did that too, which is equally ugly :)",
    "LastUpdatedDate": "2013-05-16T05:42:29.39-07:00",
    "PlannedForRelease": "PHPExcel 1.7.1 Production",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "PHPExcel",
    "ReportedDate": "2009-08-19T23:15:24.947-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "CellIterator returns null Cell if onlyExistingCells is set and key() is in use",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 10485
  },
  "FileAttachments": [
    {
      "FileId": 3291,
      "FileName": "CellIterator.diff",
      "DownloadUrl": ".\\3291"
    }
  ],
  "Comments": [
    {
      "Message": "One more point...  valid() should obviously always be called before key() or current(), but relying on current() to be called before key() is a bit more dodgy.  The patch improves on this by guaranteeing consistency if key() happens to be called before current().\r\n\r\nIn the pre-patch code, calling key() before current() might give the wrong key.",
      "PostedDate": "2009-08-19T23:27:10.917-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2009-08-20T02:29:14.967-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2009-08-20T02:29:41.36-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2009-08-20T02:29:53.76-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-02-21T19:03:45.337-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-05-16T05:42:29.39-07:00",
      "Id": -2147483648
    }
  ]
}