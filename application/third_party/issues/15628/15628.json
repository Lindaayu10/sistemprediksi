{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": null,
    "CommentCount": 0,
    "Custom": null,
    "Description": "I've a spreadsheet template that is populated and presented to a user to download, in this template all rows are set to wrap text if it doesn't fit in the current cell width. How can I have the downloaded spreadsheet automatically adjust the row heights so the user can see everything instead of the user having to select all the rows, right click and auto adjust?",
    "LastUpdatedDate": "2013-02-21T19:02:27.23-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "PHPExcel",
    "ReportedDate": "2011-04-01T04:11:31.64-07:00",
    "Status": {
      "Name": "Proposed",
      "Id": 1
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Automatic Row Height adjustment",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 2,
    "Id": 15628
  },
  "FileAttachments": [
    {
      "FileId": 5771,
      "FileName": "BenchmarkDebug.xlsx",
      "DownloadUrl": ".\\5771"
    }
  ],
  "Comments": [
    {
      "Message": "Hello chrislynch8,\r\nI'm curious about this problem as well. Can you put the code that you used to facilitate the download and a sample excel file that should work and shows how it fails?",
      "PostedDate": "2011-04-14T13:43:16.837-07:00",
      "Id": -2147483648
    },
    {
      "Message": "Hi, \r\n\r\nI have the same problem. I have the lastest version : 1.7.6.\r\nHere is the script to generate the .xslx file (sorry about the lenght)\r\nAnd in attachment the .xslx file template :\r\n\r\n<?php\r\nSESSION_START();\r\nif (isset($_SESSION['authentification']) && $_SESSION['authentification'] == \"vrai\")\r\n{\r\n  include 'Classes/PHPExcel.php';\r\n  include 'Classes/PHPExcel/Writer/Excel2007.php';\r\n\r\n  $dsn = '';\r\n  $mylogin = '';\r\n  $mypwd = '';\r\n  $link  = odbc_connect($dsn, $mylogin, $mypwd);\r\n\r\n  // LES FONCTIONS :\r\n\r\n  // Fonction qui cherche un mot dans une chaine et qui renvoi toute la sous-chaine contenant le mot\r\n\r\n  FUNCTION chercheEtEcrit($chaineATrouver, $cellule, $sheet)\r\n  {\r\n    $tableauChaine = array();\r\n    $tableauChaine2 = array();\r\n    $tableauChaine3 = array();\r\n\r\n    for($i=4; $i<=func_num_args(); $i++)      // Gestion des paramètres indéfinis (le nombre de paramètre commence à 1)\r\n    {\r\n      $accesOuPasAcces = func_get_arg(4-1);     // On retient la première valeur des paramêtres indéfinis celle-ci pouvant\r\n                                                // servir de booléen de vérif pour déterminer si on est en train d'analyser\r\n                                                // une chaine qui concerne les accés\r\n\r\n      $chaineAExplorer = func_get_arg($i-1);  // Le paramètre courant (le tableau des arguments commence à 0)\r\n\r\n      $regex = '#'.$chaineATrouver.'#i';\r\n\r\n      $tableauChaine = explode(\"~\", $chaineAExplorer);                      // On crée un tableau avec les séparateurs \"~\"\r\n\r\n      if($accesOuPasAcces != \"access\")                                      // Si ->PAS<- accés routiers\r\n      {\r\n        foreach($tableauChaine as $valeurCourante)                          // Pour chaque case du tableau\r\n        {\r\n          //$tableauChaine2 = explode(\",\", $valeurCourante);                  // On crée un tableau avec les séparateurs \",\"\r\n          //$tableauChaine3 = array_merge($tableauChaine2, $tableauChaine3);  // On ajoute chaque tableau créé dans un tableau final\r\n\r\n          $tableauChaine2 = preg_split(\"#,[^0-9]#\", $valeurCourante);        // Le séparateur du tableau est le caractère: \",\"non suivi d'un chiffre\r\n          $tableauChaine3 = array_merge($tableauChaine2, $tableauChaine3);   // afin de ne pas prendre un nombre à virgule pour un séparateur\r\n        }\r\n\r\n        $tableauChaine = $tableauChaine3;\r\n        $tableauChaine2 = array();\r\n        $tableauChaine3 = array();\r\n\r\n        foreach($tableauChaine as $valeurCourante)                            // Pour chaque case du tableau\r\n        {\r\n          $tableauChaine2 = explode(\" - \", $valeurCourante);                  // On crée un tableau avec les séparateurs \" - \"\r\n          $tableauChaine3 = array_merge($tableauChaine2, $tableauChaine3);    // On ajoute chaque tableau créé dans un tableau final\r\n        }\r\n      }\r\n\r\n      $tableauChaine3 = ($accesOuPasAcces!=\"access\")?$tableauChaine3:$tableauChaine; // Si ->PAS<- accés routiers $tableauChaine3 concerve sa valeur\r\n                                                                                     // si accés routier on prend $tableauChaine (qui n'a pas été\r\n                                                                                     // modifié) comme valeur de $tableauChaine3\r\n\r\n      foreach($tableauChaine3 as $valeurCourante)                           // On boucle sur le tableau final à la recherche de la regex\r\n      {\r\n       if(preg_match($regex, $valeurCourante))\r\n       {\r\n        $valeurCourante = preg_replace(\"#\\[\\@logo33\\]( *: *)?|\\[\\@logo34\\]( *: *)?|\\[\\@logo35\\]( *: *)?|\\[\\@logo36\\]( *: *)?|\\[\\@logo37\\]( *: *)?#\",'',$valeurCourante);\r\n        $valeurCourante = iconv(\"ISO-8859-15//TRANSLIT\",\"UTF-8\",$valeurCourante);\r\n        $sheet->setCellValue($cellule, $valeurCourante);\r\n       }\r\n      }\r\n    }\r\n  }\r\n\r\n  // Fonction de redimentionnement propotionnel des photo en fonction de la dimention d'une cellule\r\n\r\n  FUNCTION imageResizing($objDrawing,$quoi)\r\n  {\r\n    $largeurCellule =  245;\r\n    $hauteurCellule =  ($quoi == 'photo')?145:80; // si photo : si plan\r\n    $largeurPhoto = $objDrawing->getWidth();\r\n    $hauteurPhoto = $objDrawing->getHeight();\r\n\r\n    $i = 1;\r\n    while(($largeurPhoto >= $largeurCellule) or ($hauteurPhoto >= $hauteurCellule))\r\n    {\r\n      $diviseur = \"1.0$i\";\r\n      $largeurPhoto = $largeurPhoto / $diviseur;\r\n      $hauteurPhoto = $hauteurPhoto / $diviseur;\r\n      $i++;\r\n    }\r\n    $objDrawing->setWidth($largeurPhoto);\r\n    $objDrawing->setHeight($hauteurPhoto);\r\n  }\r\n\r\n  // Fonction d'insertion de la photo dans une offre\r\n\r\n  FUNCTION insererPhotoOffre($offre, $rangOffre, $tColonnes, &$workbook)\r\n  {\r\n    if(isset($_POST[\"selectionPhoto$offre\"])&& !empty($_POST[\"selectionPhoto$offre\"])) // Si il y a une photo à afficher\r\n    {\r\n      $adressePhoto = $_POST[\"selectionPhoto$offre\"];\r\n      $adressePhoto = preg_replace(\"#VD#\",\"ID\",$adressePhoto);\r\n\r\n      $objDrawing = new PHPExcel_Worksheet_Drawing();\r\n\r\n      $objDrawing->setName(\"photoOffre$offre\");\r\n      $objDrawing->setDescription(\"photoOffre$offre\");\r\n      $objDrawing->setPath($adressePhoto);\r\n\r\n      imageResizing($objDrawing,'photo');\r\n\r\n      $lettreColonne = $tColonnes[$rangOffre-1];\r\n\r\n      $objDrawing->setCoordinates($lettreColonne.'6');\r\n\r\n      $objDrawing->setWorksheet($workbook->getActiveSheet());\r\n    }\r\n  }\r\n\r\n  FUNCTION renseignerOffre($offre, $rangOffre, $tColonnes, $link, $sheet)\r\n  {\r\n    $sql = \"...\";\r\n\r\n    $sqlLots = \"...\";\r\n\r\n    $lettreColonne = $tColonnes[$rangOffre-1];\r\n\r\n    $nbEtages = 0;\r\n    $tNumeroEtage = array();\r\n    $coutBureaux = 0;\r\n\r\n    // Résultats sql liés à l'offre\r\n\r\n    $resultat = odbc_exec($link, $sql);\r\n\r\n    if($resultat && odbc_num_rows($resultat) != 0)\r\n    {\r\n    \twhile ($row = odbc_fetch_array($resultat))\r\n    \t{\r\n        $offreId            = $row[offre_id];\r\n        $typeBien           = $row[Type_de_Bien];\r\n        $nomBien            = $row[Nom_du_bien];\r\n        $noRue              = $row[NoRue];\r\n        $rue                = $row[Rue];\r\n        $codePostal         = $row[CP];\r\n        $ville              = $row[ville];\r\n        $surfaceTotale      = $row[Surface_totale];\r\n        $surfaceDiv         = $row[surface_div];\r\n        $dateDispo          = $row[dispo];\r\n        $anneeConstruction  = $row[annee_construction];\r\n        $construction       = $row[construction];\r\n        $dpeLettre          = $row[dpeLettre];\r\n        $dpe                = $row[dpe];\r\n        $erp                = $row[ERP];\r\n        $igh                = $row[IGH];\r\n        $independant        = $row[Independant];\r\n        $etatImmeuble       = $row[etat_immeuble];\r\n        $txBureaux          = $row[tx_bureaux];\r\n        $impotFoncier       = $row[impot_foncier];\r\n        $depotGarantie      = $row[depot_garantie];\r\n        $accrocheTitre      = $row[accroche_titre];\r\n        $AgencementImmeuble = $row[AgencementImmeuble];\r\n      \t$AmenagementAdr     = $row[AmenagementAdr];\r\n      \t$AmenagementOffre   = $row[AmenagementOffre];\r\n      \t$Access             = $row[Acess];\r\n      }\r\n\r\n      // Résultats sql liés aux lots de loffre\r\n\r\n      $resultatLots = odbc_exec($link, $sqlLots);\r\n\r\n      if($resultatLots && odbc_num_rows($resultatLots) != 0)\r\n      {\r\n    \t  while ($row = odbc_fetch_array($resultatLots))\r\n    \t  {\r\n          $idOffre          = $row[offreId];\r\n          $lotId            = $row[lot_id];\r\n          $etage            = $row[Etage];\r\n          $etageOrdre       = $row[EtageOrdre];\r\n          $typeBienId       = $row[TypeBienId];\r\n          $libelleTypeBien  = $row[LibelleTypeBien];\r\n          $surfaceLot       = $row[Surface];\r\n          $location         = $row[Location];\r\n          $vente            = $row[Vente];\r\n          $loyer            = $row[loyer];\r\n          $charge           = $row[charge];\r\n          $prix             = $row[prix];\r\n          $prixCharge       = $row[prixCharge];\r\n          $dateDispo        = $row[dateDispo];\r\n          $stadeComm        = $row[StadeComm];\r\n          $nBParking        = $row[NbParking];\r\n          $bail             = $row[Bail];\r\n          $fiscalLoc        = $row[Fiscal_Loc];\r\n          $fiscalVente      = $row[Fiscal_vente];\r\n          $coutParking      = $row[Parking];\r\n          $parkingNb        = $row[ParkingNB];\r\n\r\n          // Comptage du nombre d'étages et addition des surfaces des lots (si bureaux)\r\n          if($row[TypeBienId] == 1)\r\n          {\r\n            // Comptage des étages\r\n            if(!in_array($row[Etage], $tNumeroEtage)) // Si le numero de l'étage n'est pas déjà enregistré\r\n            {\r\n              $nbEtages++;\r\n            }\r\n            $tNumeroEtage[] = $row[Etage];\r\n\r\n            // Calcul du total des loyers bureaux (coût bureau)\r\n            $coutBureaux += $loyer;\r\n          }\r\n        }\r\n      }\r\n\r\n      $chaineTotaleLot = \"1: \".$idOffre.\" | 2: \".$lotId.\" | 3: \".$etage.\" | 4: \".$etageOrdre.\" | 5: \".$typeBienId.\" | 6: \".$libelleTypeBien.\" | 7: \".$surface.\" | 8: \".$location.\" | 9: \".$vente.\" | 10: \".$loyer.\" | 11: \".$charge.\" | 12 \".$prix\r\n      .\" | 13: \".$prixCharge.\" | 14: \".$dateDispo.\" | 15: \".$stadeComm.\" | 16: \".$nBParking.\" | 17: \".$bail.\" | 18: \".$fiscalLoc.\" | 19: \".$fiscalVente.\" | 20: \".$parking.\" | 21: \".$parkingNb;\r\n      $chaineTotaleLot = iconv(\"ISO-8859-15//TRANSLIT\",\"UTF-8\",$chaineTotaleLot);\r\n\r\n\r\n      $chaineTotale = \"offreId: $offreId, Amenagement Adresse:  $AmenagementAdr, Amenagement Offre : $AmenagementOffre, Access : $Access, Agencement Immeuble : $AgencementImmeuble\";\r\n      $chaineTotale = iconv(\"ISO-8859-15//TRANSLIT\",\"UTF-8\",$chaineTotale);\r\n      //$sheet->setCellValue($lettreColonne.'30', $chaineTotale); // Debug\r\n      // Moteur de recherche\r\n\r\n      // Pour les accés\r\n      chercheEtEcrit(\"\\[\\@logo33\\]\",      $lettreColonne.'10' ,$sheet, \"access\", $Access );  // info sur accès routier\r\n      chercheEtEcrit(\"\\[\\@logo36\\]|métro\",$lettreColonne.'11' ,$sheet, \"access\", $Access );  // On passe \"acces\" à la fonction pour lui signaler\r\n      chercheEtEcrit(\"\\[\\@logo37\\]|rer\",  $lettreColonne.'12' ,$sheet, \"access\", $Access );  // qu'on analyse les accés et ainsi ne pas gérer les\r\n      chercheEtEcrit(\"\\[\\@logo35\\]|bus\",  $lettreColonne.'15' ,$sheet, \"access\", $Access ); // séparateurs : \",\" (la chaine \"access\" sera analysée par\r\n      chercheEtEcrit(\"sncf| train \",      $lettreColonne.'13' ,$sheet, \"access\", $Access ); // la fonction mais ça n'aura aucune conséquence puisque\r\n      chercheEtEcrit(\"vélib\",             $lettreColonne.'16' ,$sheet, \"access\", $Access ); // ce n'est pas un mot que l'on recherche\r\n      chercheEtEcrit(\"tramway\",           $lettreColonne.'14' ,$sheet, \"access\", $Access );\r\n\r\n      // Pour les aménagements (Offre/Adresse/Immeuble/Construction)\r\n      chercheEtEcrit(\"parkings?\",                           $lettreColonne.'30' ,$sheet, $AmenagementAdr, $AmenagementOffre, $AgencementImmeuble);\r\n      chercheEtEcrit(\"climatisation\",                       $lettreColonne.'41' ,$sheet, $AmenagementAdr, $AmenagementOffre, $AgencementImmeuble);\r\n      chercheEtEcrit(\"chauffage|chaudiere\",                 $lettreColonne.'42' ,$sheet, $AmenagementAdr, $AmenagementOffre, $AgencementImmeuble);\r\n      chercheEtEcrit(\"ascenseurs\",                          $lettreColonne.'43' ,$sheet, $AmenagementAdr, $AmenagementOffre, $AgencementImmeuble );   // monte-charge\r\n      chercheEtEcrit(\"monte\",                               $lettreColonne.'44' ,$sheet, $AmenagementAdr, $AmenagementOffre, $AgencementImmeuble );   // monte-charge\r\n      chercheEtEcrit(\"électrogène|electrogene\",             $lettreColonne.'45' ,$sheet, $AmenagementAdr, $AmenagementOffre, $AgencementImmeuble );\r\n      chercheEtEcrit(\"sécurité|securite|gtc|gtb|controle d'acces\", $lettreColonne.'46' ,$sheet, $AmenagementAdr, $AmenagementOffre, $AgencementImmeuble );\r\n      chercheEtEcrit(\"hall\",                                $lettreColonne.'47' ,$sheet, $AmenagementAdr, $AmenagementOffre, $AgencementImmeuble );\r\n      chercheEtEcrit(\"surveillance|video(?!phones?)\",       $lettreColonne.'48' ,$sheet, $AmenagementAdr, $AmenagementOffre, $AgencementImmeuble );\r\n      chercheEtEcrit(\" rie \",                               $lettreColonne.'50' ,$sheet, $AmenagementAdr, $AmenagementOffre, $AgencementImmeuble );\r\n      chercheEtEcrit(\"cafétéria|cafeteria\",                 $lettreColonne.'51' ,$sheet, $AmenagementAdr, $AmenagementOffre, $AgencementImmeuble );\r\n      chercheEtEcrit(\"resto club|restoclub|restaurant club\",$lettreColonne.'52' ,$sheet, $AmenagementAdr, $AmenagementOffre, $AgencementImmeuble );\r\n      chercheEtEcrit(\"fitness\",                             $lettreColonne.'53' ,$sheet, $AmenagementAdr, $AmenagementOffre, $AgencementImmeuble );\r\n      chercheEtEcrit(\"auditorium\",                          $lettreColonne.'54' ,$sheet, $AmenagementAdr, $AmenagementOffre, $AgencementImmeuble );\r\n      chercheEtEcrit(\"concièregerie|concieregerie|gardien\", $lettreColonne.'55' ,$sheet, $AmenagementAdr, $AmenagementOffre, $AgencementImmeuble, $construction );\r\n      chercheEtEcrit(\"creche|crêche\",                       $lettreColonne.'56' ,$sheet, $AmenagementAdr, $AmenagementOffre, $AgencementImmeuble );\r\n      chercheEtEcrit(\"hotesse|hôtesse|accueil\",             $lettreColonne.'57' ,$sheet, $AmenagementAdr, $AmenagementOffre, $AgencementImmeuble, $construction);\r\n      chercheEtEcrit(\"capacité|capacite\",                   $lettreColonne.'35' ,$sheet, $AmenagementAdr, $AmenagementOffre, $AgencementImmeuble, $construction );\r\n      chercheEtEcrit(\"hauteur libre\",                       $lettreColonne.'36' ,$sheet, $AmenagementAdr, $AmenagementOffre, $AgencementImmeuble, $construction  );\r\n      chercheEtEcrit(\"profondeur plateau\",                  $lettreColonne.'37' ,$sheet, $AmenagementAdr, $AmenagementOffre, $AgencementImmeuble, $construction  );\r\n      chercheEtEcrit(\"trame fenetre|trame fenêtre\",         $lettreColonne.'38' ,$sheet, $AmenagementAdr, $AmenagementOffre, $AgencementImmeuble, $construction  );\r\n      chercheEtEcrit(\" plénum \",                            $lettreColonne.'39' ,$sheet, $AmenagementAdr, $AmenagementOffre, $AgencementImmeuble, $construction  );\r\n      chercheEtEcrit(\"plafond\",                             $lettreColonne.'40' ,$sheet, $AmenagementAdr, $AmenagementOffre, $AgencementImmeuble, $construction  );\r\n\r\n      // Saisie directe des données\r\n\r\n      $sheet->setCellValue($lettreColonne.'3', $offre);\r\n\r\n      $nomImmeuble = iconv(\"ISO-8859-15//TRANSLIT\",\"UTF-8\",\"$nomBien\");\r\n      $sheet->setCellValue($lettreColonne.'4', $nomImmeuble);\r\n\r\n      //$nomImmeubleAdresse = iconv(\"ISO-8859-15//TRANSLIT\",\"UTF-8\",\"$nomBien\\n$noRue $rue $codePostal $ville\");\r\n//      $sheet->setCellValue($lettreColonne.'41', $nomImmeubleAdresse);\r\n//      $sheet->setCellValue($lettreColonne.'73', $nomImmeubleAdresse);\r\n\r\n      $adresse = iconv(\"ISO-8859-15//TRANSLIT\",\"UTF-8\",\"$noRue $rue $codePostal $ville\");\r\n      $sheet->setCellValue($lettreColonne.'5', $adresse);\r\n\r\n      $surfaceTotale = number_format($surfaceTotale,0,',',' ');\r\n      $surfaceTotale = ($surfaceTotale!=NULL || $surfaceTotale!= 0)?$surfaceTotale.' m²':''; // Vérification de la présence d'une surface\r\n      //$surfaceTotale = iconv(\"ISO-8859-15//TRANSLIT\",\"UTF-8\", $surfaceTotale);\r\n      $sheet->setCellValue($lettreColonne.'7', $surfaceTotale);\r\n\r\n      $dateDispo = iconv(\"ISO-8859-15//TRANSLIT\",\"UTF-8\", $dateDispo);\r\n      $sheet->setCellValue($lettreColonne.'28', $dateDispo);\r\n\r\n      $anneeConstruction = iconv(\"ISO-8859-15//TRANSLIT\",\"UTF-8\", $anneeConstruction);\r\n      $sheet->setCellValue($lettreColonne.'29', $anneeConstruction);\r\n\r\n      //$construction = iconv(\"ISO-8859-15//TRANSLIT\",\"UTF-8\", $construction);\r\n      //$sheet->setCellValue($lettreColonne.'26', $construction);\r\n\r\n      $dpeOuDpeLettre = ($dpeLettre!=NULL)?$dpeLettre:$dpe;                 // Vérification de la présence d'un dpe sous forme de lettre ou de valeur\r\n      $dpeOuDpeLettre = iconv(\"ISO-8859-15//TRANSLIT\",\"UTF-8\", $dpeOuDpeLettre);\r\n      $sheet->setCellValue($lettreColonne.'19', $dpeOuDpeLettre);\r\n\r\n      $erp = ($erp==1)?'Oui':'Non';                                          // Vérification de la valeur de l'ERP\r\n      $erp = iconv(\"ISO-8859-15//TRANSLIT\",\"UTF-8\", $erp);\r\n      $sheet->setCellValue($lettreColonne.'21', $erp);\r\n\r\n      $igh = ($igh==1)?'Oui':'Non';                                          // Vérification de la valeur de l'IGH\r\n      $igh = iconv(\"ISO-8859-15//TRANSLIT\",\"UTF-8\", $igh);\r\n      $sheet->setCellValue($lettreColonne.'20', $igh);\r\n\r\n      $independant = ($independant==1)?'Oui':'Non';                          // Vérification de la valeur de indépendant\r\n      $independant = iconv(\"ISO-8859-15//TRANSLIT\",\"UTF-8\", $independant);\r\n      $sheet->setCellValue($lettreColonne.'27', $independant);\r\n\r\n      $etatImmeuble = iconv(\"ISO-8859-15//TRANSLIT\",\"UTF-8\", $etatImmeuble);\r\n      $sheet->setCellValue($lettreColonne.'26', $etatImmeuble);\r\n\r\n      $surfaceDiv = iconv(\"ISO-8859-15//TRANSLIT\",\"UTF-8\", $surfaceDiv);\r\n      $sheet->setCellValue($lettreColonne.'30', $surfaceDiv);\r\n\r\n      $txBureaux = ($txBureaux==NULL)?'':$txBureaux.' €/m²/an';\r\n      $sheet->setCellValue($lettreColonne.'65', $txBureaux);\r\n\r\n      $impotFoncier = ($impotFoncier==NULL)?'':$impotFoncier.' €';\r\n      $sheet->setCellValue($lettreColonne.'64', $impotFoncier);\r\n\r\n      //  A voir !  dans quelle ligne mettre depot de garantie  $depotGarantie = iconv(\"ISO-8859-15//TRANSLIT\",\"UTF-8\", $depotGarantie);\r\n      //                                                        $sheet->setCellValue($lettreColonne.'71', $depotGarantie);\r\n\r\n      $accrocheTitre = iconv(\"ISO-8859-15//TRANSLIT\",\"UTF-8\", $accrocheTitre);\r\n      $sheet->setCellValue($lettreColonne.'68', $accrocheTitre);\r\n\r\n      // Données provenant des lots\r\n\r\n      $charge = ($charge==NULL)?'':$charge.' HT/m²/an';\r\n      $sheet->setCellValue($lettreColonne.'62', $charge);             // Correspond à la ligne : \"charges hors fiscalité\"\r\n\r\n      $bail = iconv(\"ISO-8859-15//TRANSLIT\",\"UTF-8\", $bail);\r\n      $sheet->setCellValue($lettreColonne.'59', $bail);\r\n\r\n      //$coutBureaux = number_format($coutBureaux,0,',',' ');         // Désactivation provisoire du cout bureau\r\n      //$coutBureaux = ($coutBureaux == NULL)?'':$coutBureaux.' €';   // On met à la place un champ libre \"Cout poste de travail\"\r\n      //$sheet->setCellValue($lettreColonne.'60', $coutBureaux);\r\n\r\n      $nbEtages = ($nbEtages!=0)?$nbEtages:'';                        // Vérification de la présence d'un nombre d'étage différent de 0\r\n      $nbEtages = iconv(\"ISO-8859-15//TRANSLIT\",\"UTF-8\", $nbEtages);\r\n      $sheet->setCellValue($lettreColonne.'31', $nbEtages);\r\n\r\n      $parkingNb = iconv(\"ISO-8859-15//TRANSLIT\",\"UTF-8\", $parkingNb);\r\n      $sheet->setCellValue($lettreColonne.'32', $parkingNb);\r\n\r\n      $coutParking = iconv(\"ISO-8859-15//TRANSLIT\",\"UTF-8\", $coutParking);\r\n      $sheet->setCellValue($lettreColonne.'63', $coutParking);\r\n    }\r\n  }\r\n\r\n  // INITIALISATION DES VARIABLES ET TABLEAUX\r\n  $titreBenchmark = stripslashes($_SESSION['titreBenchmark']);\r\n\r\n  $tColonnes = array('C','E','G','I','K');\r\n\r\n  $tStructureFichier = array(\"surface\"              =>  7,\r\n                          \"moyensTransport\"         =>  8,\r\n                          \"distanceTrans\"           =>  9,\r\n                          \"accesRoutier\"            =>  10,\r\n                          \"metro\"                   =>  11,\r\n                          \"rer\"                     =>  12,\r\n                          \"sncf\"                    =>  13,\r\n                          \"tramway\"                 =>  14,\r\n                          \"bus\"                     =>  15,\r\n                          \"velib\"                   =>  16,\r\n                          \"navette\"                 =>  17,\r\n                          \"qualifEnvironnement\"     =>  18,\r\n                          \"dpe\"                     =>  19,\r\n                          \"igh\"                     =>  20,\r\n                          \"erp\"                     =>  21,\r\n                          \"codeTravail\"             =>  22,\r\n                          \"labels\"                  =>  23,\r\n                          \"certifs\"                 =>  24,\r\n                          \"descripImmeuble\"         =>  25,\r\n                          \"etat\"                    =>  26,\r\n                          \"independant\"             =>  27,\r\n                          \"dispo\"                   =>  28,\r\n                          \"dateConctruction\"        =>  29,\r\n                          \"taillePlateaux\"          =>  30,\r\n                          \"nbEtages\"                =>  31,\r\n                          \"nbParkings\"              =>  32,\r\n                          \"ratioParkings\"           =>  33,\r\n                          \"prestations\"             =>  34,\r\n                          \"capacite\"                =>  35,\r\n                          \"hauteurLibre\"            =>  36,\r\n                          \"profondeurPlateau\"       =>  37,\r\n                          \"trameFenetre\"            =>  38,\r\n                          \"hauteurPlenum\"           =>  39,\r\n                          \"systemeFauxPlafond\"      =>  40,\r\n                          \"systemeClim\"             =>  41,\r\n                          \"systemeSourceChauffage\"  =>  42,\r\n                          \"ascenseurs\"              =>  43,\r\n                          \"monteCharge\"             =>  44,\r\n                          \"groupeElectro\"           =>  45,\r\n                          \"gtbGtc\"                  =>  46,\r\n                          \"hall\"                    =>  47,\r\n                          \"videoSurveillance\"       =>  48,\r\n                          \"services\"                =>  49,\r\n                          \"rie\"                     =>  50,\r\n                          \"cafeteria\"               =>  51,\r\n                          \"restoClub\"               =>  52,\r\n                          \"fitness\"                 =>  53,\r\n                          \"auditorium\"              =>  54,\r\n                          \"concieregerie\"           =>  55,\r\n                          \"creche\"                  =>  56,\r\n                          \"hotesse\"                 =>  57,\r\n                          \"condFin\"                 =>  58,\r\n                          \"bail\"                    =>  59,\r\n                          \"coutPosteTravail\"        =>  60,\r\n                          \"coutRie\"                 =>  61,\r\n                          \"chargesHF\"               =>  62,\r\n                          \"parking\"                 =>  63,\r\n                          \"fiscalite\"               =>  64,\r\n                          \"taxeFoncier\"             =>  65,\r\n                          \"coutGlobalHF\"            =>  66);\r\n\r\n  // CREATION OBJET PHPEXCEL\r\n  $objReader = new PHPExcel_Reader_Excel2007();\r\n  $workbook = $objReader->load(\"modeleBenchmarkV2.xlsx\");\r\n  $sheet = $workbook->getActiveSheet();\r\n\r\n  // SAISIE DE TITRE\r\n  $sheet->setCellValue('A1', '       '.$titreBenchmark);\r\n\r\n  // CALCUL ET SAISIE DE LA DATE\r\n  $date = date(\"d/m/Y\", time());\r\n  $sheet->setCellValue('A3', 'Date : '.$date);\r\n\r\n  // LE SCRIPT\r\n  if(isset($_SESSION['offre1']) or !empty( $_SESSION['offre1']))\r\n  {\r\n    $offre1 = $_SESSION['offre1'];\r\n    insererPhotoOffre($offre1, 1, $tColonnes, $workbook);\r\n    renseignerOffre($offre1, 1, $tColonnes, $link, $sheet);\r\n  }\r\n\r\n  if(isset($_SESSION['offre2']) or !empty( $_SESSION['offre2']))\r\n  {\r\n    $offre2 = $_SESSION['offre2'];\r\n    insererPhotoOffre($offre2, 2, $tColonnes, $workbook);\r\n    renseignerOffre($offre2, 2, $tColonnes, $link, $sheet);\r\n  }\r\n\r\n  if(isset($_SESSION['offre3']) or !empty( $_SESSION['offre3']))\r\n  {\r\n    $offre3 = $_SESSION['offre3'];\r\n    insererPhotoOffre($offre3, 3, $tColonnes, $workbook);\r\n    renseignerOffre($offre3, 3, $tColonnes, $link, $sheet);\r\n  }\r\n\r\n  if(isset($_SESSION['offre4']) or !empty( $_SESSION['offre4']))\r\n  {\r\n    $offre4 = $_SESSION['offre4'];\r\n    insererPhotoOffre($offre4, 4, $tColonnes, $workbook);\r\n    renseignerOffre($offre4, 4, $tColonnes, $link, $sheet);\r\n  }\r\n\r\n  if(isset($_SESSION['offre5']) or !empty( $_SESSION['offre5']))\r\n  {\r\n    $offre5 = $_SESSION['offre5'];\r\n    insererPhotoOffre($offre5, 5, $tColonnes, $workbook);\r\n    renseignerOffre($offre5, 5, $tColonnes, $link, $sheet);\r\n  }\r\n\r\n  // Suppression de la rubrique Cahier des charges utilisateur\r\n\r\n  if($_SESSION['typeBenchmark'] == \"proprietaire\") // Si le benchmark est de type propriétaire\r\n  {\r\n     $sheet->removeRow(69, 1);                     // On supprime la ligne de la rubrique Cahier des charges utilisateur\r\n  }\r\n\r\n  // Saisie des coefficients :\r\n\r\n  foreach($tStructureFichier as $cleCourrante => $valeurCourrante)\r\n  {\r\n    if($_POST[$cleCourrante])\r\n    {\r\n      $sheet->setCellValue('L'.$valeurCourrante, $_POST[$cleCourrante]);\r\n    }\r\n  }\r\n\r\n  // Supression des lignes non cochées\r\n\r\n  // On fait un tri décroissant des valeur du tableau afin de supprimer les lignes à partir du bas (pour éviter les décalages)\r\n  arsort($tStructureFichier);\r\n\r\n  foreach($tStructureFichier as $cleCourrante => $valeurCourrante)\r\n  {\r\n    if(!$_POST[$cleCourrante])\r\n    {\r\n      $sheet->removeRow($valeurCourrante, 1);\r\n    }\r\n  }\r\n\r\n  header('Content-Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');\r\n  header('Content-Disposition: attachment;filename=\"testBenchmark.xlsx\"');\r\n  header('Cache-Control: max-age=0');\r\n\r\n  $writer = PHPExcel_IOFactory::createWriter($workbook, 'Excel2007');\r\n  $writer->save('php://output');\r\n}\r\n\r\n",
      "PostedDate": "2011-07-25T06:49:12.36-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2011-07-25T06:55:33.9-07:00",
      "Id": -2147483648
    },
    {
      "Message": "Sorry:\r\nThe .xslx file template : \r\n\r\nThanks a lot for your help,",
      "PostedDate": "2011-07-25T06:55:35.877-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2011-07-25T09:23:20.11-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2011-07-25T09:50:51.87-07:00",
      "Id": -2147483648
    },
    {
      "Message": "The right template file : \r\n\r\nThank's ",
      "PostedDate": "2011-07-25T09:50:54.243-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2011-11-21T04:31:19.013-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-02-21T19:02:27.23-08:00",
      "Id": -2147483648
    }
  ]
}