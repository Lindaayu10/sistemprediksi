{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "All",
      "DisplayName": "All"
    },
    "ClosedComment": "",
    "ClosedDate": null,
    "CommentCount": 0,
    "Custom": null,
    "Description": "From thread (by fishel):\nhttp://phpexcel.codeplex.com/Thread/View.aspx?ThreadId=83018\n \n-----\nOn my website there's upload-form for excel-files. First I like to check the file if it really an excel-file(Exel5 or 2007, not CSV). It is not enought just to check the extension like xls or xlsx. Maybe there are some user just have fun to rename images to xls.\n \nFirst attemp was:\n$PHPExcel = PHPExcel_IOFactory::load($filename);\nBut this even load all. It is possible to load images and they have one sheet.\n \nSecond attemp was:\n$PHPReader = PHPExcel_IOFactory::createReaderForFile($filename);\nassName = get_class($PHPReader);\nif (($className != 'PHPExcel_Reader_Excel5') && ($className != 'PHPExcel_Reader_Excel2007') ) {\n    return false;\n}\nBut in this case it is event possible to load DOC files.\n \nSo what is your favorite code for check your excel-files (format)??\n \nGreetings from Berlin\n \nStephan\n \n \n------------\nTest:\n----\n// with a Microsoft Word document\n \n$reader = new PHPExcel_Reader_Excel5;\nvar_dump($reader->canRead('Dok1.doc'));\n \nExpected result:\n----\nbool(false)\n \nActual result:\n----\nbool(true)\n \nEnvironment:\n----\nPHPExcel 1.7.2",
    "LastUpdatedDate": "2013-02-21T19:03:14.667-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "PHPExcel",
    "ReportedDate": "2010-02-04T16:04:23.983-08:00",
    "Status": {
      "Name": "Proposed",
      "Id": 1
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "PHPExcel_Reader_Excel5->canRead() should fail for Microsoft Word (.doc) files. Likewise for Excel2007 and .docx",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 2,
    "Id": 11703
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "http://www.tech-archive.net/Archive/Office/microsoft.public.office.developer.com.add_ins/2007-10/msg00029.html explains the problems with differentiating between the different Office 2007 document formats, and does present a solution... albeit not a particularly efficient one. It should be fairly straightforward to implement in the canRead() method",
      "PostedDate": "2010-02-05T16:44:50.813-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2010-02-10T05:22:26.457-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-02-21T19:03:14.667-08:00",
      "Id": -2147483648
    }
  ]
}