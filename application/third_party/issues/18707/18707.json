{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": null,
    "CommentCount": 0,
    "Custom": null,
    "Description": "I have a template that I created using MSExcel, it includes a company logo and some other trivial formatting.\nI have no problem loading this template via the below process, writing to it and saving it. Works fine.\n    $excel = PHPExcel_IOFactory::load($template);\n    $worksheet = $excel->getActiveSheet();\n    $worksheet->getCell($cellRef)->setValue(\"foobar\");\n    $writer = PHPExcel_IOFactory::createWriter($excel, 'Excel5');\n    $writer->save($filepath);\n    $excel->disconnectWorksheets();\n    unset($excel);\nÂ \nThe problem I have is that I now want to reuse this generated file as a template itself. In other words, I want to append data to it. But when I do this, the logo and original formatting from the initial template is missing. The data is all there so it's nothing is getting overwritten, just the logo and formatting seems to go.\nThe reason I'm appending data to it is that the process is quite resource heavy and I break it up through a series of asynchronous requests that each process a segment of data.",
    "LastUpdatedDate": "2013-02-21T19:01:40.75-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "PHPExcel",
    "ReportedDate": "2012-09-26T17:42:52.97-07:00",
    "Status": {
      "Name": "Proposed",
      "Id": 1
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Using generated excel for template",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 18707
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Are you by any chance using setReadDataOnly(TRUE) when you're reloading the file?",
      "PostedDate": "2012-09-26T23:39:24.787-07:00",
      "Id": -2147483648
    },
    {
      "Message": "No.\r\nBelow is my complete code. I've removed a few lines that have nothing to do with the Excel export so hopefully it makes sense.\r\nSo just to explain quickly. With each asynchronous request, the $page parameter is incremented and therefore the next set of records from the database are retrieved. The first time this is run ($initialising is TRUE), the \"template.xls\" file is copied to another file (\"foobar.xls\") which is used as the template for each subsequent request. The data is appended to this \"foobar.xls\" on each request. \r\n\r\n<?php\r\nrequire_once(sfConfig::get('sf_plugins_dir').'/PHPExcel-1.7.7/Classes/PHPExcel.php');\r\n\r\n$page         = $_REQUEST['page'];\r\n$filename     = 'foobar.xls';\r\n$dirpath      = '//path_to_files';\r\n$filepath     = $dirpath . DIRECTORY_SEPARTOR . $filename;\r\n$initialising = $page == 1;\r\n$limitPerPage = 100;\r\n\r\nif ($initialising) {\r\n    $template = $dirpath.'/template.xls';\r\n\r\n    if (!copy($template, $filepath)) {\r\n        throw new Exception(sprintf('Could not copy %s to %s', $template, $filepath));\r\n    }\r\n}\r\n\r\n$cellStyle = array(\r\n    'borders' => array(\r\n        'outline' => array(\r\n            'style' => PHPExcel_Style_Border::BORDER_THIN,\r\n            'color' => array('argb' => '00000000'),\r\n        )\r\n    ),\r\n);\r\n\r\n$excel = PHPExcel_IOFactory::load($filepath);\r\n$worksheet = $excel->getActiveSheet();\r\n\r\n$row = 1 + (($page-1) * $limitPerPage);\r\n\r\n$items = ...; // This is a database query where the records retrieved are determined by the row number\r\n\r\nforeach ($items as $item) {\r\n    foreach ($columns as $column => $property) {\r\n        $getter = 'get'.camelize($property);\r\n        $value = (string) $item->$getter();\r\n\r\n        $cellRef = $column.$row;\r\n        $worksheet->getCell($cellRef)->setValue($value);\r\n        $worksheet->getStyle($cellRef)->applyFromArray($cellStyle);\r\n    }\r\n    $row++;\r\n}\r\n\r\n$writer = PHPExcel_IOFactory::createWriter($excel, 'Excel5');\r\n$writer->save($filepath);\r\n$excel->disconnectWorksheets();\r\nunset($excel);",
      "PostedDate": "2012-09-27T00:25:44.227-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-02-21T19:01:40.75-08:00",
      "Id": -2147483648
    }
  ]
}