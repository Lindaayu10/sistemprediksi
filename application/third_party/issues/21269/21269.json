{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": null,
    "CommentCount": 0,
    "Custom": null,
    "Description": "firstly Im sorry for my english and bad explanation.I'm using somethings from this site to convert table html to excel file . \nhttps://phpexcel.codeplex.com/discussions/275807\n\nI realised when Im open the excel file ,it not include my data that have special char **<** .Example,I have a columns that have data like this , <1004> . I think I have to change something about DOM but I'm really new in this topic.Anyone have a experience about this.Any help will be greatly appreciate.Thanks. \n\n<code>\n\n**TABLE FILE**\n\n    <?php\n    include_once(dirname(__FILE__) . '/../php/ixcdr.php');\n    session_start();\n    $callhistoryTable .='<html>';\n    $callhistoryTable .='<head>';\n    $callhistoryTable .='<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">';\n    $callhistoryTable .='</head>';\n    $callhistoryTable .='<div class=\"contentlist\">';\n    $callhistoryTable .='<form id=\"history_form\">';\n    $callhistoryTable .='<table style=\"font-size:11px;\" width=\"1050\" border=\"0\" id=\"allhist\" class=\"tablesorter-blue\">';\n    $callhistoryTable .='<thead>';\n    $callhistoryTable .='<tr>';\n    $callhistoryTable .='<th width=\"50\">Call Date</th>';\n    $callhistoryTable .='<th width=\"200\">CallerId</th>';\n    $callhistoryTable .='<th width=\"100\">Origination</th>';\n    $callhistoryTable .='<th width=\"100\">Destination</th>';\n    $callhistoryTable .='<th width=\"100\">Duration</th>';\n    $callhistoryTable .='<th width=\"200\">Account Code</th>';\n    $callhistoryTable .='</tr>';\n    $callhistoryTable .='</thead>';\n    $callhistoryTable .='<tbody>';\n                    \n                    $userid = $_POST['searchnum'];\n                    $fromdate = $_POST['fromdate'];\n                    $todate = $_POST['todate'];\n    \n                    $getCdrList = getAllCdr($userid, $fromdate, $todate);\n                    if (count($getCdrList) > 0) {\n                        for ($i = 0; $i < count($getCdrList); $i ++) {\n                            $getCdrListRecord = $getCdrList[$i];\n    $callhistoryTable .='<tr>';\n    $callhistoryTable .='<td style=\"font-weight: bold;\">'.$getCdrListRecord->get_CallDate().'</td>';\n    $callhistoryTable .='<td style=\"font-weight: bold;\">'.$getCdrListRecord->get_Clid().'</td>';\n    $callhistoryTable .='<td style=\"font-weight: bold;\">'.$getCdrListRecord->get_Src().'</td>';\n    $callhistoryTable .='<td style=\"font-weight: bold;\">'.$getCdrListRecord->get_Dst().'</td>';\n    $callhistoryTable .='<td style=\"font-weight: bold;\">'.$getCdrListRecord->get_Duration().'</td>';\n    $callhistoryTable .='<td>'.$getCdrListRecord->get_AccountCode().'</td>';\n    $callhistoryTable .='</tr>';\n                        }\n                    } else {\n    $callhistoryTable .='<tr>';\n    $callhistoryTable .='<td colspan=\"6\">No cdr to display</td>';\n    $callhistoryTable .='</tr>';\n                    }\n    \n                    echo $callhistoryTable;\n                    ?>\n                </tbody>\n            </table>\n            <table width=\"1000px\" style=\"margin: 10px 30px 15px;\">\n                <tr><td>\n                        <div id=\"pager\" class=\"pager\">\n                            <form>\n                                <a href=\"/Blackbox/ippbx/load/exportxls.php?var=tableConvertxls\" target=\"_blank\" title=\"Export table to Excel\"><img src=\"img/32x32/file_extension_xls.png\" alt=\"Export table to Excel\" hspace=\"3\" /></a>\n                            </form>\n                        </div>\n                    </td></tr>\n            </table>\n        </form>\n    </div>\n    <html>\n    <?php\n    $_SESSION['tableConvertxls'] = $callhistoryTable;\n    exit;\n    \n    ?>\n\n**CONVERT FILE**\n\n    <?php\n    session_start();\n    ini_set(\"memory_limit\", \"-1\");\n    ini_set(\"set_time_limit\", \"0\");\n    set_time_limit(0);\n    \n    if (!isset($_GET['var'])) {\n        echo \"<br />No Table Variable Present, nothing to Export.\";\n        exit;\n    } else {\n        $tablevar = $_GET['var'];\n    }\n    if (!isset($_SESSION[$tablevar]) OR $_SESSION[$tablevar] == '') {\n        echo \"<br />Empty HTML Table, nothing to Export.\";\n        exit;\n    } else {\n        $htmltable = $_SESSION[$tablevar];  //table data as html format\n    }\n    if (strlen($htmltable) == strlen(strip_tags($htmltable))) {  //if data_table format not as expected\n        echo \"<br />Invalid HTML Table after Stripping Tags, nothing to Export.\";\n        exit;\n    }\n    $htmltable = strip_tags($htmltable, \"<table><thead><tr><th></th></tr></thead><tbody><tr><td></td></tr></tbody>\");\n    $htmltable = str_replace(\"<br />\", \"\\n\", $htmltable);\n    $htmltable = str_replace(\"<br/>\", \"\\n\", $htmltable);\n    $htmltable = str_replace(\"<br>\", \"\\n\", $htmltable);\n    $htmltable = str_replace(\"&nbsp;\", \" \", $htmltable);\n    $htmltable = str_replace(\"\\n\\n\", \"\\n\", $htmltable);\n    \n    //\n    //  Extract HTML table contents to array\n    //\n    $dom = new domDocument;\n    //$dom->loadHTML($htmltable);\n    //$dom->loadHTML(mb_convert_encoding($htmltable, 'HTML-ENTITIES', 'UTF-8'));\n    $dom->loadHTML('<meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">'.$htmltable);\n    if (!$dom) {\n        echo \"<br />Invalid HTML DOM, nothing to Export.\";\n        exit;\n    }\n    $dom->preserveWhiteSpace = false;             // remove redundant whitespace\n    $tables = $dom->getElementsByTagName('table');\n    \n    if (!is_object($tables)) {\n        echo \"<br />Invalid HTML Table DOM, nothing to Export.\";\n        exit;\n    }\n    if ($debug) {\n        fwrite($handle, \"\\nTable Count: \" . $tables->length);\n    }\n    $tbcnt = $tables->length - 1;                 // count minus 1 for 0 indexed loop over tables\n    if ($tbcnt > $limit) {\n        $tbcnt = $limit;\n    }\n    //\n    //\n    // Create new PHPExcel object with default attributes\n    //\n    require_once ('/../classes/PHPExcel.php');\n    $objPHPExcel = new PHPExcel();\n    $objPHPExcel->getDefaultStyle()->getFont()->setName('Arial');\n    $objPHPExcel->getDefaultStyle()->getFont()->setSize(9);\n    $tm = date(Ymd);\n    $name = \"historyrecord\";\n    $tfn = $name . \"_\" . $tm . \".xlsx\";\n    //$fname = \"AuditLog/\".$tfn;\n    $fname = $tfn;\n    $objPHPExcel->getProperties()->setCreator($_SESSION['IX_USERNAME'])\n            ->setLastModifiedBy($_SESSION['IX_USERNAME'])\n            ->setTitle(\"Automated Export\")\n            ->setSubject(\"Automated Report Generation\")\n            ->setDescription(\"Automated report generation.\")\n            ->setKeywords(\"Exported File\")\n            ->setCompany($usercompany)\n            ->setCategory(\"Export\");\n    //\n    // Loop over tables in DOM to create an array, each table becomes a worksheet\n    //\n    for ($z = 0; $z <= $tbcnt; $z++) {\n        $maxcols = 0;\n        $totrows = 0;\n        $headrows = array();\n        $bodyrows = array();\n        $r = 0;\n        $h = 0;\n        $rows = $tables->item($z)->getElementsByTagName('tr');\n        $totrows = $rows->length;\n        if ($debug) {\n            fwrite($handle, \"\\nTotal Rows: \" . $totrows);\n        }\n        foreach ($rows as $row) {\n            $ths = $row->getElementsByTagName('th');\n            if (is_object($ths)) {\n                if ($ths->length > 0) {\n                    $headrows[$h]['colcnt'] = $ths->length;\n                    if ($ths->length > $maxcols) {\n                        $maxcols = $ths->length;\n                    }\n                    $nodes = $ths->length - 1;\n                    for ($x = 0; $x <= $nodes; $x++) {\n                        $thishdg = $ths->item($x)->nodeValue;\n                        $headrows[$h]['th'][] = $thishdg;\n                        $headrows[$h]['bold'][] = findBoldText(innerHTML($ths->item($x)));\n                        if ($ths->item($x)->hasAttribute('style')) {\n                            $style = $ths->item($x)->getAttribute('style');\n                            $stylecolor = findStyleColor($style);\n                            if ($stylecolor == '') {\n                                $headrows[$h]['color'][] = findSpanColor(innerHTML($ths->item($x)));\n                            } else {\n                                $headrows[$h]['color'][] = $stylecolor;\n                            }\n                        } else {\n                            $headrows[$h]['color'][] = findSpanColor(innerHTML($ths->item($x)));\n                        }\n                        if ($ths->item($x)->hasAttribute('colspan')) {\n                            $headrows[$h]['colspan'][] = $ths->item($x)->getAttribute('colspan');\n                        } else {\n                            $headrows[$h]['colspan'][] = 1;\n                        }\n                        if ($ths->item($x)->hasAttribute('align')) {\n                            $headrows[$h]['align'][] = $ths->item($x)->getAttribute('align');\n                        } else {\n                            $headrows[$h]['align'][] = 'left';\n                        }\n                        if ($ths->item($x)->hasAttribute('valign')) {\n                            $headrows[$h]['valign'][] = $ths->item($x)->getAttribute('valign');\n                        } else {\n                            $headrows[$h]['valign'][] = 'top';\n                        }\n                        if ($ths->item($x)->hasAttribute('bgcolor')) {\n                            $headrows[$h]['bgcolor'][] = str_replace(\"#\", \"\", $ths->item($x)->getAttribute('bgcolor'));\n                        } else {\n                            $headrows[$h]['bgcolor'][] = 'FFFFFF';\n                        }\n                    }\n                    $h++;\n                }\n            }\n        }\n        foreach ($rows as $row) {\n            $tds = $row->getElementsByTagName('td');\n            if (is_object($tds)) {\n                if ($tds->length > 0) {\n                    $bodyrows[$r]['colcnt'] = $tds->length;\n                    if ($tds->length > $maxcols) {\n                        $maxcols = $tds->length;\n                    }\n                    $nodes = $tds->length - 1;\n                    for ($x = 0; $x <= $nodes; $x++) {",
    "LastUpdatedDate": "2014-09-02T07:32:17.393-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Unassigned",
      "Severity": 0,
      "Id": 0
    },
    "ProjectName": "PHPExcel",
    "ReportedDate": "2014-09-02T07:32:17.393-07:00",
    "Status": {
      "Name": "Proposed",
      "Id": 1
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "PHPExcel can't read special char",
    "Type": {
      "Name": "Unassigned",
      "Id": 5
    },
    "VoteCount": 1,
    "Id": 21269
  },
  "FileAttachments": [],
  "Comments": []
}