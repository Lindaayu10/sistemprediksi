{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": null,
    "CommentCount": 0,
    "Custom": null,
    "Description": "Notice in Excel 2007, how far down the scrollbar allows you to go.  Why is 512MB of RAM exhusted for a sheet like this and how can you fix?  Tested against SVN, PHPExcel 1.7.2, and PHPExcel 1.7.3 with PHP 5.3.",
    "LastUpdatedDate": "2013-02-21T19:02:56.377-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "PHPExcel",
    "ReportedDate": "2010-05-27T13:39:15.383-07:00",
    "Status": {
      "Name": "Proposed",
      "Id": 1
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Mostly blank sheet causes memory exhaust",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 13368
  },
  "FileAttachments": [
    {
      "FileId": 4480,
      "FileName": "categories.xls",
      "DownloadUrl": ".\\4480"
    }
  ],
  "Comments": [
    {
      "Message": "setting $objReader->setReadDataOnly(true); seems to help, but I also need cell properties",
      "PostedDate": "2010-05-27T14:36:58.68-07:00",
      "Id": -2147483648
    },
    {
      "Message": "It might appear mostly blank, but this worksheet spans A1:L65528 (786,336 cells in all). It doesn't matter that the content is blank, each is still created as an individual cell in PHPExcel.\r\nIf you didn't want these blank cells created, you could always write a Read Filter to prevent PHPExcel from loading values beyond H9",
      "PostedDate": "2010-05-27T15:21:41.33-07:00",
      "Id": -2147483648
    },
    {
      "Message": "Alternatively, delete the excess rows and columns within Excel",
      "PostedDate": "2010-05-27T15:22:44.147-07:00",
      "Id": -2147483648
    },
    {
      "Message": "Thanks again, Mark.  I tried deleting the excess rows and columns with no result.  Copying the relevant cells to another worksheet worked correctly, but I don't know if the input is going to be the former or the later.  PHP Spreadsheet Excel works quickly on it as well so I wasn't sure if the same speed would be possible with PHPExcel.  Still looking for possible insight into this.",
      "PostedDate": "2010-05-27T17:10:09.977-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-02-21T19:02:56.377-08:00",
      "Id": -2147483648
    }
  ]
}