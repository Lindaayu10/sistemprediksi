{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "PHPExcel_Reader_Excel2007",
      "DisplayName": "PHPExcel_Reader_Excel2007"
    },
    "ClosedComment": "Fixed in SVN",
    "ClosedDate": "2008-10-02T23:37:35.84-07:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "Condition for bug to arise using PHPExcel_Reader_Excel2007:\n \n1. Cell in spreadsheet has data type string\n2. Cell value looks like number, e.g. '123' or '0200'\n3. Cell has a (redundant) date number format\n \nTest (use attachment):\n----\n$reader = new PHPExcel_Reader_Excel2007();\n$PHPExcel = $reader->load('2007-read.xlsx');\n \n$ws = $PHPExcel->getActiveSheet();\nvar_dump($ws->getCell('A1')->getDataType());\nvar_dump($ws->getCell('A1')->getValue());\n \n \nExpected result:\n----\nstring(1) \"s\"\nstring(4) \"0200\"\n \n \nActual result:\n----\nstring(1) \"n\"\nint(-2147483648)\n \n \nEnvironment:\n----\nPHPExcel: Latest source from SVN (1.6.3+)",
    "LastUpdatedDate": "2013-05-16T05:43:14.44-07:00",
    "PlannedForRelease": "PHPExcel 1.6.4 Production",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "PHPExcel",
    "ReportedDate": "2008-10-01T14:15:03.127-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "PHPExcel_Reader_Excel2007: Error reading cell with data type string, date number format, and numeric-like cell value",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 7714
  },
  "FileAttachments": [
    {
      "FileId": 2144,
      "FileName": "2007-read.xlsx",
      "DownloadUrl": ".\\2144"
    },
    {
      "FileId": 2146,
      "FileName": "2007-write.xlsx",
      "DownloadUrl": ".\\2146"
    }
  ],
  "Comments": [
    {
      "Message": "Maarten, thanks for looking at this, but are you sure this is not an issue? I'm now attaching file 2007-write.xlsx which is the result of a plain read/write of 2007-read.xlsx. Notice that a data type conversion has taken place. This is unexpected because plain read/write should be the identity-operation.\r\n---\r\nI'd say that PHPExcel should only attempt to interpret the cell as a date for numeric data type. Not for string data type like in the example. What are your thoughts?\r\n\r\n",
      "PostedDate": "2008-10-02T06:24:34.66-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2008-10-02T06:24:35.41-07:00",
      "Id": -2147483648
    },
    {
      "Message": "This is by design, based on data type recognition for dates.\r\n\r\n** Closed by maartenba 10/2/2008 5:47 AM",
      "PostedDate": "2008-10-02T12:54:54.657-07:00",
      "Id": -2147483648
    },
    {
      "Message": "Re-opening issue due to my comment. Please re-close if I'm mistaken :)",
      "PostedDate": "2008-10-02T12:54:54.89-07:00",
      "Id": -2147483648
    },
    {
      "Message": "Have done some more investigation, seems like a simple bugfix :-) Some sleep did help finding this.",
      "PostedDate": "2008-10-02T23:36:25.857-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2008-10-02T23:37:03.56-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2008-10-02T23:37:18.183-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2008-10-02T23:37:35.84-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-02-21T19:04:45.943-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-05-16T05:43:14.44-07:00",
      "Id": -2147483648
    }
  ]
}