{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "PHPExcel Release 1.7.8",
    "ClosedDate": "2012-10-12T13:31:11.737-07:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "PHPExcel_CachedObjectStorage_SQLite3::cacheMethodIsAvailable() should class_exists('SQLite3', false)\ncheck for class with use_autoload disabled, not to trigger an autoloader for non existing class",
    "LastUpdatedDate": "2013-05-16T05:41:29.26-07:00",
    "PlannedForRelease": "PHPExcel 1.7.8 Production",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "PHPExcel",
    "ReportedDate": "2012-09-05T22:48:35.97-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "PHPExcel_CachedObjectStorage_SQLite3::cacheMethodIsAvailable() uses class_exists - autoloader throws error",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 18597
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "A little more detail please - what are you trying to do here?",
      "PostedDate": "2012-09-05T23:34:58.71-07:00",
      "Id": -2147483648
    },
    {
      "Message": "as i understand PHPExcel_CachedObjectStorage_SQLite3::cacheMethodIsAvailable() method should check if i can use this caching method, if it returns true, i could set PHPExcel_Settings to use SQLite3 for caching, if not i should use another caching method as sqlite3 is not enabled, example:\r\n\r\nif (PHPExcel_CachedObjectStorage_SQLite3::cacheMethodIsAvailable()) {\r\n\t\t\t\tPHPExcel_Settings::setCacheStorageMethod(PHPExcel_CachedObjectStorageFactory::cache_to_sqlite3, $settings);\r\n\t\t\t} elseif (PHPExcel_CachedObjectStorage_DiscISAM::cacheMethodIsAvailable()) {\r\n\t\t\t\tPHPExcel_Settings::setCacheStorageMethod(PHPExcel_CachedObjectStorageFactory::cache_to_discISAM, $settings);\r\n\t\t\t}\r\n\r\nbut as i stated, this static method looks for SQLite3 class to determine if this caching method is available, and as the second parameter of class_exists is true by default, frameworks autoloader gets triggered and it tries to find and include SQlite3 class which does not exists. \r\n\r\nSo in short instead of silent and gracefull fallback i get an error that SQlite3 class could not be loaded.",
      "PostedDate": "2012-09-05T23:59:49.25-07:00",
      "Id": -2147483648
    },
    {
      "Message": "Now I get what you're saying: I wasn't aware of the second argument to class_exists() or its affect on autoloaders.",
      "PostedDate": "2012-09-06T14:26:34.83-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2012-09-06T15:44:10.563-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2012-10-12T13:31:11.737-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-02-21T19:01:42.637-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-05-16T05:41:29.26-07:00",
      "Id": -2147483648
    }
  ]
}