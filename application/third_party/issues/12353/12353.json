{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "PHPExcel_Writer_Excel5",
      "DisplayName": "PHPExcel_Writer_Excel5"
    },
    "ClosedComment": "Speed and memory improvements in version 1.7.5 should improve this situation, while use of cell caching can further help memory usage. While we endeavour to keep the code as fast and memory efficient as possible, there are limits to what can be achieved in pure PHP.",
    "ClosedDate": "2011-01-02T06:54:36.387-08:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "I'm trying to export datasets with up to two-thousand rows, up to a hundred or so columns, but usually around twenty; and as many as twenty worksheets as xls or xlsx files. One  or two worksheet files with about a dozen columns and a few dozen rows work fine, but anything much larger than that and the memory usage climbs exponentially during the save and crashes before php has time to give an error message. Excel2007 writer will finish, but the file is apparently corrupted.  In php.ini I have ti set to take two gigs of ram, but it never gets close to that.",
    "LastUpdatedDate": "2013-05-16T05:42:03.73-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "High",
      "Severity": 150,
      "Id": 3
    },
    "ProjectName": "PHPExcel",
    "ReportedDate": "2010-03-29T11:05:53.173-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Apparent Out Of Memory in Excel5 writer",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 12353
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Current estimate is an average of about 1k/cell (dependent on the cell value), so a worst case for your 2,000 row, 100 column, 20 worksheet workbook is about 4,000,000 cells - 4GB.\r\n\r\nChanges, already implemented in the SVN code, such as the \"lazy loader\" (only loading in those PHPExcel classes that are actually required) also reduce the memory footprint of PHPExcel itself.\r\nChanges in test at the moment enable a cell caching feature that can reduce the overall memory footprint of a workbook significantly, though at a cost in overall speed. Initial results show that memory usage can be more than halved using this method. Testing is still ongoing with this change, but we're hopeful that we'll be able to incorporate it into the SVN code soon, with a view for a production release in early May unless we encounter any serious problems during test.\r\n\r\nThis change should allow your 4 million cell workbook to run within 2GB of memory.\r\n",
      "PostedDate": "2010-04-15T15:55:11.353-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2010-04-16T00:34:05.423-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2010-09-01T00:41:48.467-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2011-01-02T06:54:36.387-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-02-21T19:03:05.467-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-05-16T05:42:03.73-07:00",
      "Id": -2147483648
    }
  ]
}