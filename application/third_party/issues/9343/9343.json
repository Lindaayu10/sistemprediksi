{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "PHPExcel_Writer_Excel2007",
      "DisplayName": "PHPExcel_Writer_Excel2007"
    },
    "ClosedComment": "Fixed in SVN",
    "ClosedDate": "2009-02-24T12:19:24.263-08:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "Hi, \n \nThe following code will make Microsoft Excel 2007 crash:\n<?php\nset_include_path(get_include_path() . PATH_SEPARATOR . '../functies/');\ninclude 'PHPExcel.php';\ninclude 'PHPExcel/IOFactory.php';\n \n$report = new PHPExcel();\n \n$report->getActiveSheet()->getProtection()->setSheet(true);\n$report->getSecurity()->setLockWindows(true);\n$report->getSecurity()->setLockStructure(true);\n$report->getSecurity()->setWorkbookPassword(\"test\");\n \n$report->setActiveSheetIndex(0);\n \n$report->getActiveSheet()->getStyle('B3')->getProtection()->setLocked(\n    PHPExcel_Style_Protection::PROTECTION_UNPROTECTED\n);\n \n$objValidation = $report->getActiveSheet()->getCell('B3')->getDataValidation();\n$objValidation->setType( PHPExcel_Cell_DataValidation::TYPE_WHOLE );\n$objValidation->setErrorStyle( PHPExcel_Cell_DataValidation::STYLE_STOP );\n$objValidation->setAllowBlank(true);\n$objValidation->setShowInputMessage(true);\n$objValidation->setShowErrorMessage(true);\n$objValidation->setErrorTitle('Fout bij ingeven');\n$objValidation->setError('Uw invoer is niet geldig.');\n$objValidation->setPromptTitle('Toegestane invoer');\n$objValidation->setPrompt('Enkel cijfers tussen 0 en 10 zijn toegelaten.');\n$objValidation->setFormula1(0);\n$objValidation->setFormula2(10);\n$report->getActiveSheet()->getCell('B3')->setDataValidation($objValidation);\n \nheader('Content-Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');\nheader('Content-Disposition: attachment;filename=\"myfile.xlsx\"');\nheader('Cache-Control: max-age=0');\n \n$objWriter = PHPExcel_IOFactory::createWriter($report, 'Excel2007');\n$objWriter->save('php://output');\n?>\n \nSo what I do is: I create a new protected worksheet, and unprotect cell B3.\nThen I make sure that the input of B3 is validated. (a number between 0 and 10). This makes Excel crash. \n \nDoes anybody has an idea what goes wrong? Is it a bug?",
    "LastUpdatedDate": "2013-05-16T05:42:52.707-07:00",
    "PlannedForRelease": "PHPExcel 1.6.6 Production",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "PHPExcel",
    "ReportedDate": "2009-02-24T10:53:03.58-08:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Data Validation Formula = 0 crashes Excel",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 9343
  },
  "FileAttachments": [
    {
      "FileId": 2778,
      "FileName": "myfile.xlsx",
      "DownloadUrl": ".\\2778"
    }
  ],
  "Comments": [
    {
      "Message": "I am sorry, this supposed to be a discussion, not a bug report. Although, it might be a bug. \r\n\r\nI added the output of the script above.",
      "PostedDate": "2009-02-24T10:55:42.703-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2009-02-24T10:55:43.687-08:00",
      "Id": -2147483648
    },
    {
      "Message": "Looks like one in general needs to supply string values for the formulas to make it work for the 0 case:\r\n\r\n$objValidation->setFormula1('0');\r\n$objValidation->setFormula2('10');\r\n\r\nThis is a type problem. Either we should try to modify the class so int(0) is accepted, or update recommendation in the documentation.\r\n",
      "PostedDate": "2009-02-24T11:46:12.713-08:00",
      "Id": -2147483648
    },
    {
      "Message": "I guess an update in documentation would be OK + a sanity check when setting formula. I'll fix this one.",
      "PostedDate": "2009-02-24T12:12:07.74-08:00",
      "Id": -2147483648
    },
    {
      "Message": "Problem is different: setting formula1 = 0 causes the writer to skip this 0 value and therefore data is not complete. No need for documentation, will fix this bug.",
      "PostedDate": "2009-02-24T12:16:16.83-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2009-02-24T12:16:17.533-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2009-02-24T12:18:39.297-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2009-02-24T12:19:24.263-08:00",
      "Id": -2147483648
    },
    {
      "Message": "I'am trying it, but it can't work. For details this is my work :\r\n$objPHPExcel = new PHPExcel();\r\n$objPHPExcel->getActiveSheet()->setTitle('Grading');\r\n\r\n\t$objPHPExcel->getActiveSheet()->getProtection()->setSheet(true);\r\n\t\t$objPHPExcel->getSecurity()->setLockWindows(true);\r\n$objPHPExcel->getSecurity()->setLockStructure(true);\r\n$objPHPExcel->getSecurity()->setWorkbookPassword(\"test\");\r\n\t$objPHPExcel->setActiveSheetIndex(0);\r\n$objPHPExcel->getActiveSheet()->getStyle(\"$cell\")->getProtection()->setLocked(PHPExcel_Style_Protection::PROTECTION_UNPROTECTED);\r\n\r\n$objValidation = $objPHPExcel->getActiveSheet()->getCell(\"$cell\")->getDataValidation();\r\n$objValidation->setType(PHPExcel_Cell_DataValidation::TYPE_WHOLE);\r\n$objValidation->setErrorStyle(PHPExcel_Cell_DataValidation::STYLE_STOP);\r\n$objValidation->setAllowBlank(true);\r\n$objValidation->setShowInputMessage(true);\r\n$objValidation->setShowErrorMessage(true);\r\n$objValidation->setErrorTitle('Input Error');\r\n$objValidation->setError('Number is not allowed!');\r\n$objValidation->setPromptTitle('Allowed input');\r\n$objValidation->setPrompt('Only numbers between 0 and 100 are allowed');\r\n$objValidation->setFormula1(0);\r\n$objValidation->setFormula2(100);\r\n$objPHPExcel->getActiveSheet()->getCell(\"$cell\")->setDataValidation($objValidation);\r\nheader('Content-Type: application/vnd.ms-excel');\t\r\n\theader('Content-Disposition: attachment;filename=\"'.$fileName.'\"');\r\n\theader('Cache-Control: max-age=0');\r\n\r\n\t//create object writer\r\n\r\n$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');\r\n\t$objWriter->save('php://output');\r\n\r\n\r\nCan anybody help me?\r\n",
      "PostedDate": "2010-04-27T02:55:13.527-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-02-21T19:04:19.023-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-05-16T05:42:52.707-07:00",
      "Id": -2147483648
    }
  ]
}