{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": null,
    "CommentCount": 0,
    "Custom": null,
    "Description": "I've verified this bug with PHPExcel 1.7.8 / 1.7.5 versions. My code uses the getFormattedValue() method to pull the data into PHP.Example: Excel cells contains next values:   D7 -> 0,43;   E7 -> =D7*1,2;   F7 -> =E7*11,2.getFormattedValue() returns:   0,43;   #VALUE!;   #VALUE!;getCalculatedValue() also returns   #VALUE!;getValue() returns  0,43;   D7*1.2;   E7*11.2;Find that excel thow an error for column D : numbers stored as text.and if I fix it in excel, as it propose, to number. then getFormattedValue() work just fine.Attached problem xls file for tests.",
    "LastUpdatedDate": "2013-02-21T19:01:35.197-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "PHPExcel",
    "ReportedDate": "2012-11-13T13:59:45.38-08:00",
    "Status": {
      "Name": "Proposed",
      "Id": 1
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "$cell->getFormattedValue() returns #VALUE!",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 18918
  },
  "FileAttachments": [
    {
      "FileId": 6699,
      "FileName": "5.xls",
      "DownloadUrl": ".\\6699"
    }
  ],
  "Comments": [
    {
      "Message": "I may be able to do this as part of the rewrite of the calculation engine, but it does add an extra level of complexity handling numeric values that wouldn't be recognised as numbers by PHP itself",
      "PostedDate": "2012-11-18T12:34:28.003-08:00",
      "Id": -2147483648
    },
    {
      "Message": "At this point any solution would be just great! If I understand you correctly, what you propose - that is exactly  what i want. And what PHPExcel is really needed. Thx",
      "PostedDate": "2012-11-18T14:03:01.17-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-02-21T19:01:35.197-08:00",
      "Id": -2147483648
    }
  ]
}