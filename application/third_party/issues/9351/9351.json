{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "PHPExcel",
      "DisplayName": "PHPExcel"
    },
    "ClosedComment": "Fixed in SVN",
    "ClosedDate": "2009-02-25T23:37:27.203-08:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "I encountered that in PHPExcel 1.6.5 on Debian Sarge \n \nI got an excel 2007 .xlsx file where some fields has \"0.00\" (without quotas) as their NumberFormat. I used toArray() to fetch the values and always got rounded numbers instead of my real values with decimal places. I tried to debug the problem and thats what I found out: \n \nThe toFormattedString Method in NumberFormat.php Line 344 tries to evaluate the Format. There is a Switch/Case section starting at Line 418.\n \nBecause switch is using loose comparision, I guess my Formatstring \"0.00\" is typecasted to int 0. Thats why 0 compared with self::FORMAT_NUMBER results true. Therefore return sprintf('%1.0f', $value);  is used instead of return sprintf('%1.2f', $value);    \n \nI'm using a workaround with to strict if (===) comparisons for the two numberformats (FORMAT_NUMBE, FORMAT_NUMBE_00) for now.\n \nKind Regards, \n \n   Dpuppy",
    "LastUpdatedDate": "2013-05-16T05:42:52.56-07:00",
    "PlannedForRelease": "PHPExcel 1.6.6 Production",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "PHPExcel",
    "ReportedDate": "2009-02-25T10:06:36.827-08:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Excel Numberformat 0.00 results in non internal decimal places values in toArray() Method.",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 9351
  },
  "FileAttachments": [],
  "Comments": []
}