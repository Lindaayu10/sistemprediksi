{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": "2010-09-07T00:59:06.203-07:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "I've been having some issues with summing a column which contains [h]:mm:ss cells. I have searched the discussions and issue tracker and found a function (testFormula) which outputs debug info which i believe may have uncovered a possible bug.\n \nI have the following code;\n \n$objPHPExcel->getActiveSheet()->setCellValue('A1', '00:10:01');\n$objPHPExcel->getActiveSheet()->getStyle('A1')->getNumberFormat()->setFormatCode('[h]:mm:ss');\n$objPHPExcel->getActiveSheet()->setCellValue('A2', '05:00:01');\n$objPHPExcel->getActiveSheet()->getStyle('A2')->getNumberFormat()->setFormatCode('[h]:mm:ss');\n$objPHPExcel->getActiveSheet()->setCellValue('A3', '=SUM(A1:A2)');\n$objPHPExcel->getActiveSheet()->getStyle('A3')->getNumberFormat()->setFormatCode('[h]:mm:ss');\nPHPExcel_Calculation::getInstance()->writeDebugLog = true;\n$this->testFormula($objPHPExcel->getActiveSheet(),'A3');\n \nWhich outputs the following;\n \nA3 Value is =SUM(A1:A2)\nA3 Expected Value is \nA3 Calculated Value is 0\n \nEvaluation Log:\nArray\n(\n    [0] => Worksheet!A3 -> Evaluating Cell A1 in current worksheet\n    [1] => Worksheet!A3 -> Evaluation Result for cell Worksheet!A1 is a string with a value of 00:10:01\n    [2] => Worksheet!A3 -> Evaluating Cell A2 in current worksheet\n    [3] => Worksheet!A3 -> Evaluation Result for cell Worksheet!A2 is a string with a value of 05:00:01\n    [4] => Worksheet!A3 -> Evaluating Range Worksheet!A1:Worksheet!A2\n    [5] => Worksheet!A3 -> Evaluating Function SUM() with 1 argument\n    [6] => Worksheet!A3 -> Evaluating SUM( { 00:10:01; 05:00:01 } )\n    [7] => Worksheet!A3 -> Evaluation Result for SUM() function call is an integer number with a value of 0\n)\n \nI may be doing something wrong however i'm suspicious that the cells data type is being detected as strings.\n \nThanks in advance.\nJustin.",
    "LastUpdatedDate": "2013-05-16T05:41:52.543-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "PHPExcel",
    "ReportedDate": "2010-09-06T22:01:33.64-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Formula not working on [h]:mm:ss columns",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 14199
  },
  "FileAttachments": [
    {
      "FileId": 4827,
      "FileName": "SampleData_01-09-2010.xls",
      "DownloadUrl": ".\\4827"
    }
  ],
  "Comments": [
    {
      "Message": "I forgot to mention i'm using the latest release 1.7.4.",
      "PostedDate": "2010-09-06T22:31:03.123-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2010-09-07T00:59:06.203-07:00",
      "Id": -2147483648
    },
    {
      "Message": "This is not a bug.\r\nYou are setting the value in your cells as a string, not as a date/timestamp (making the format code irrelevant). And the sum of these strings is 0... the evaluation log actually tells you this: Evaluation Result for cell Worksheet!A1 is a string with a value of 00:10:01\r\n\r\nIf you want to have $objPHPExcel->getActiveSheet()->setCellValue('A1', '00:10:01'); automatically convert your string to a date/timestamp, then you'll need to use the Advanced Value Binder (see /Tests/29advancedvaluebinder.php for an example of how to use this). Otherwise, you will need to convert your '00:10:01' string to a date/timestamp manually using the date/time conversion functions.",
      "PostedDate": "2010-09-07T00:59:14.33-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-02-21T19:02:46.197-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-05-16T05:41:52.543-07:00",
      "Id": -2147483648
    }
  ]
}