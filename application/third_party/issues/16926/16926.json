{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "Calculation_Engine",
      "DisplayName": "Calculation_Engine"
    },
    "ClosedComment": "Fixed in version 1.8.0",
    "ClosedDate": "2014-03-04T03:22:10.763-08:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "A cell with the following formula \"=12*2495\" resolves to \"16560\" instead of \"29940\".\n \n[Update]\nIf the file was loaded by itself, the calculation is correct.  If the file was loaded along with many other files, the calculation fails.\n \n[Update]\nFound the problem.  If the cache as disabled, the problem goes away.  I think the bug is that the cache is static.  When I traced through the calculation, it found the calculated result in the cache on the first time when it shouldn't have.  The erroneous value came from a previously cached value.  The fix might be to add the filename to the cache and not rely on just the worksheet title and cellID.  I'll try this solution and report back what I find.\n \n[Update]\nOk, that worked.  Since the filename was not included inthe PHPExcel class (I think), I added a set/get function to store and retrieve the filename.  So when loading, the filename can be saved.  Then in the Calculation class, I changed all references to the calculation cache to index the filename appended to the sheet title (instead of just the sheet title).  The calculations then worked fine.\n \nHope the explanation is clear.  If not, let me know.",
    "LastUpdatedDate": "2014-03-04T03:22:10.763-08:00",
    "PlannedForRelease": "PHPExcel 1.7.9 Production",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "PHPExcel",
    "ReportedDate": "2011-11-19T10:34:15.36-08:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Fixed"
    },
    "Summary": "PHPExcel_Cell::getCalculatedValue() fails on simple calculation",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 16926
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "The problem is that the calc engine is a singleton, so the cache will be common across all files that are loaded within the executing script.\r\nRather than storing the filename as part of the cache, I've reworked this into a multiton pattern, so that a separate calc engine (with a separate cache) is created for each workbook file that is loaded",
      "PostedDate": "2011-11-25T02:28:25.17-08:00",
      "Id": -2147483648
    },
    {
      "Message": "Please try with the latest SVN code to see if the multiton approach works (or if there's still any potential errors in my implementation)",
      "PostedDate": "2011-11-25T02:29:28.57-08:00",
      "Id": -2147483648
    },
    {
      "Message": "Refactored Calculation Engine as a Multiton to ensure that independent calculation caches are maintained for each loaded workbook, and are cleared when the workbook is unset",
      "PostedDate": "2013-02-15T08:02:26.533-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-02-21T19:02:09.937-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-05-16T05:41:39.12-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-05-16T05:41:39.233-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-06-14T00:36:25.723-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2014-03-04T03:22:10.763-08:00",
      "Id": -2147483648
    }
  ]
}