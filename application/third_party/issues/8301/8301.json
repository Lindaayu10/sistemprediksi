{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "PHPExcel",
      "DisplayName": "PHPExcel"
    },
    "ClosedComment": "Fixed in SVN",
    "ClosedDate": "2008-11-28T02:20:04.367-08:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "Hi Maarten,\n \nUsing PHPExcel 1.6.4, when setting a cell value such as the following:\n$objPHPExcel->getActiveSheet()->setCellValue('A1', \"=IF(C1=0,0,B1/C1*100)\");\n \nthe script silently aborts while executing:\n$objWriter->save($filename);\n \nI am providing a simple script to reproduce the problem at the end of this ticket.\n \nThe program fails in the calculate() function in Calculation.php at the following code:\n----------------------------------------\n$temporaryCalculationFunction = @create_function ( '$pThat, $pCell', \"return $formula;\" );\nif ($temporaryCalculationFunction === FALSE) {\n    $returnValue = '#N/A';\n} else {\n    $returnValue = @call_user_func_array ( $temporaryCalculationFunction, array (&$this, &$pCell ) );       \n}\n----------------------------------------\n \nIn this case, we never return from @call_user_func_array(), and the script aborts a little later. It does not matter if the =IF function test condition evaluates to true or false. The script fails in either case.\n \nCircumventions:\n1) call: \"$objWriter->setPreCalculateFormulas(false);\" to avoid calculating formulas before saving the xlsx file to disk. This correctly saves the formula, and Excel 2007 then handles it correctly.\n \n2) Use: \"=IF(C1=0,,B1/C1*100)\" as the formula instead (but that limits you to a 0 default). Note that in this case, in the calculate() function, @create_function() returns FALSE, and we never call @call_user_func_array().\n \nThat's as far as I was able to chase it down. I'm not sure where or how @create_function and @call_user_func_array() are defined.\n \nBest regards,\n                    Dennis\n \nTest script:\n-------------------------------------------\n<?php\n \n/** PHPExcel */\nrequire 'PHPExcel.php';\n \n//** PHPExcel_IOFactory\nrequire 'PHPExcel/IOFactory.php';\n \n// Create new PHPExcel object\necho date('H:i:s') . \" Create new PHPExcel object\\n\";\n$objPHPExcel = new PHPExcel();\n \n$objPHPExcel->setActiveSheetIndex(0);\n \n// Set =IF formula in sheet\n $objPHPExcel->getActiveSheet()->setCellValue('A1', \"=IF(C1=0,0,B1/C1*100)\");\n// $objPHPExcel->getActiveSheet()->setCellValue('A1', \"=IF(C1=0,,B1/C1*100)\");\n$objPHPExcel->getActiveSheet()->setCellValue('B1', 2);\n$objPHPExcel->getActiveSheet()->setCellValue('C1', 0);\n \n// Save Excel 2007 file\necho date('H:i:s') . \" Write to Excel2007 format\\n\";\n$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');\n// $objWriter->setPreCalculateFormulas(false);\necho date('H:i:s') . \" Created createWriter object and now saving\\n\";\n$filename =  \"xxx.xlsx\";\n$objWriter->save($filename);\necho date('H:i:s') . \" Done writing $filename.\\r\\n\";\n--------------------------------------",
    "LastUpdatedDate": "2013-05-16T05:43:04.18-07:00",
    "PlannedForRelease": "PHPExcel 1.6.5 Production",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "PHPExcel",
    "ReportedDate": "2008-11-26T15:11:06.29-08:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "=IF formula causes fatal error during $objWriter->save() in Excel2007 format",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 8301
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Actually, this is not the problem. If you run my test case with C1 set to a non-zero value, the script still dies in the same place in what appears to be the same way. So something else must be going on.\r\n\r\nAnd, yes, I can set precalculate to false, and will. But I'm surprised that you don't consider this a bug, since \"=IF(C1=0,,)\" is the way Microsoft recommends handling cases where a divide-by-zero might happen when computing percentages or ratios. At a minimum, it would be very helpful to mention in the section of your documentation on setting formulas in cells, that this type of =IF() function is not correctly handled (i.e., not handled the way Excel handles it), and that precalculation should be turned off.\r\n\r\nThanks,\r\n           Dennis\r\n",
      "PostedDate": "2008-11-27T17:37:50.937-08:00",
      "Id": -2147483648
    },
    {
      "Message": "Problem is C1== 0. This causes a division by zero error in PHP. Try setting precalculation to false or specify a non-zero value in cell C1\r\n\r\n** Closed by maartenba 11/27/2008 5:56 AM",
      "PostedDate": "2008-11-28T02:07:42.773-08:00",
      "Id": -2147483648
    },
    {
      "Message": "Reopened",
      "PostedDate": "2008-11-28T02:07:43.087-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2008-11-28T02:07:59.337-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2008-11-28T02:18:09.523-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2008-11-28T02:20:04.367-08:00",
      "Id": -2147483648
    },
    {
      "Message": "Thanks Maarten. Works great now.\r\n\r\nDennis\r\n",
      "PostedDate": "2008-12-01T08:45:37.31-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-02-21T19:04:33.757-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-05-16T05:43:04.18-07:00",
      "Id": -2147483648
    }
  ]
}