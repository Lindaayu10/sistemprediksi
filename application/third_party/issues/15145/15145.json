{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "Calculation_Engine",
      "DisplayName": "Calculation_Engine"
    },
    "ClosedComment": "Fixed in version 1.8.0",
    "ClosedDate": "2014-03-04T03:21:50.2-08:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "Reading a number of files in succession can give wrong results because the reader may return results from the calculation cache from a previous file.\nÂ \nFix is for function load($file) in each reader to always call PHPExcel_Calculation::getInstance()->clearCalculationCache().",
    "LastUpdatedDate": "2014-03-04T03:21:50.2-08:00",
    "PlannedForRelease": "PHPExcel 1.7.9 Production",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Medium",
      "Severity": 100,
      "Id": 2
    },
    "ProjectName": "PHPExcel",
    "ReportedDate": "2011-01-24T18:00:54.793-08:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Fixed"
    },
    "Summary": "Reader load() should clear calculation cache",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 15145
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "Slightly heavy on performance and memory if the Calculation engine isn't being used, because it will always instantiate the class if it hasn't yet been instantiated... even if it isn't needed. I've added a PHPExcel_Calculation::flushInstance() method that only clears the cache if the Calculation engine has been instantiated.\r\n\r\nRather than executing from the loader though, it may be cleaner to break from the mechanic of treating the calculation engine as a singleton, but attaching an instance to each PHPExcel object (only if required) while still retaining the ability to use the calculation engine without needing to instantiate a workbook. I'm still thinking about that one.",
      "PostedDate": "2011-01-25T15:08:15.637-08:00",
      "Id": -2147483648
    },
    {
      "Message": "Getting rid of the calculation singleton sounds like a good move as it will make it possible to have two sheets open at once, solve the caching problem, and probably make it easier to work out what the internals of the code is doing (I'm probably a bit slow, but it took me ages to work out that a singleton calc cache was causing the 'duplicate data' when opening two spreadsheets in quick succession)",
      "PostedDate": "2011-01-27T01:39:28.02-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-02-04T07:54:42.15-08:00",
      "Id": -2147483648
    },
    {
      "Message": "Implemented (pending furthe rtesting) in the calcEngine branch on github",
      "PostedDate": "2013-02-15T07:51:43.217-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-02-21T19:02:35.17-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-05-16T05:41:46.983-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-05-16T05:41:47.083-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-06-14T00:36:25.96-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2014-03-04T03:21:50.2-08:00",
      "Id": -2147483648
    }
  ]
}