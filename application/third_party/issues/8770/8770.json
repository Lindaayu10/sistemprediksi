{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "PHPExcel",
      "DisplayName": "PHPExcel"
    },
    "ClosedComment": "Fixed in SVN",
    "ClosedDate": "2009-01-20T03:55:12.017-08:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "Implement a set of methods that will retrieve rows and columns iteratively within the current worksheet\ne.g. getNextRow and getNextColumn, resetRowIterator, resetColumnIterator, getFirstRow, getLastRow, getFirstColumn, getLastColumn",
    "LastUpdatedDate": "2013-05-16T05:43:00.877-07:00",
    "PlannedForRelease": "PHPExcel 1.6.6 Production",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "PHPExcel",
    "ReportedDate": "2008-12-30T14:28:16.27-08:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Implement worksheet, row and cell iterators",
    "Type": {
      "Name": "Feature",
      "Id": 1
    },
    "VoteCount": 1,
    "Id": 8770
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "I am thinking of $sheet->getRowIterator(), returning a RowIterator instance with first(), next(), last() methods + $rowIterator->getColumnIterator(), returning a ColumnIterator instance with first(), next() and last() methods. How about this?",
      "PostedDate": "2008-12-30T22:49:36.167-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2009-01-20T03:38:14.187-08:00",
      "Id": -2147483648
    },
    {
      "Message": "Added some documentation for this:\r\n\r\n\r\nLooping cells using iterators\r\nThe easiest way to loop cells is by using iterators. Using iterators, one can use foreach to loop worksheets, rows and cells.\r\n\r\nBelow is an example where we read all the values in a worksheet and display them in a table.\r\n\r\n<?php\r\n$objReader = PHPExcel_IOFactory::createReader('Excel2007');\r\n$objReader->setReadDataOnly(true);\r\n\r\n$objPHPExcel = $objReader->load(\"test.xlsx\");\r\n$objWorksheet = $objPHPExcel->getActiveSheet();\r\n\r\necho '<table>' . \"\\n\";\r\nforeach ($objWorksheet->getRowIterator() as $row) {\r\n  echo '<tr>' . \"\\n\";\r\n\t\t\r\n  $cellIterator = $row->getCellIterator();\r\n  $cellIterator->setIterateOnlyExistingCells(false); // This loops all cells,\r\n                                                     // even if it is not set.\r\n                                                     // By default, only cells\r\n                                                     // that are set will be\r\n                                                     // iterated.\r\n  foreach ($cellIterator as $cell) {\r\n    echo '<td>' . $cell->getValue() . '</td>' . \"\\n\";\r\n  }\r\n  \r\n  echo '</tr>' . \"\\n\";\r\n}\r\necho '</table>' . \"\\n\";\r\n?>",
      "PostedDate": "2009-01-20T03:55:00.05-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2009-01-20T03:55:00.75-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2009-01-20T03:55:12.017-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-02-21T19:04:29.75-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-05-16T05:43:00.877-07:00",
      "Id": -2147483648
    }
  ]
}