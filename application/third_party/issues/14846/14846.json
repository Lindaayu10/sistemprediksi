{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": null,
    "CommentCount": 0,
    "Custom": null,
    "Description": "PHPExcel version 1.7.4,\nPHPExcel/Worksheet.php line 391 - 404. function _checkSheetTitle($pValue)\n \nWhen setting the title of more then 31 characters a PHP Fatal error occurs (an errormessage is thrown).\nWhy not prevent this error by returning $pValue 'substringed' to 30 or 31 characters?\nAnd while we are at it... \nwhy not 'string_replace' and return the title without  the $_invalidCharacters.\n \nKeep up the good work!",
    "LastUpdatedDate": "2013-02-21T19:02:39.77-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "PHPExcel",
    "ReportedDate": "2010-12-08T09:12:48.617-08:00",
    "Status": {
      "Name": "Proposed",
      "Id": 1
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "getActiveSheet()->setTitle() limits to 31 characters",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 2,
    "Id": 14846
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "simple \"brute\" fix:\nin file PHPExcel/Worksheet.php\r\n\r\nreplace\nthrow new Exception('Maximum 31 characters allowed in sheet title.');\nwith\n$pValue = substr($pValue, 0, 31);",
      "PostedDate": "2012-11-14T08:57:12.243-08:00",
      "Id": -2147483648
    },
    {
      "Message": "Simple fix when setting a worksheet title is wrap it in a try/catch block and catch the exception",
      "PostedDate": "2012-11-25T04:46:07.643-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-02-21T19:02:39.77-08:00",
      "Id": -2147483648
    }
  ]
}