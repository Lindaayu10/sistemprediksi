{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "",
    "ClosedDate": null,
    "CommentCount": 0,
    "Custom": null,
    "Description": "I have an excel template that uses a text box and found that when reading the template in, manipulating the data, and spitting the excel file back out, the text box wasn't being rendered.  After diving into the code, I found that PHPExcel assumes all drawings to be images, which isn't the case.  I came up with the following solution - which currently just stores the raw XML of the text box.  Later on, I will try to update this so it parses the XML, but for now, I needed a quick solution that would read in the text box from the template, and then spit it back out.\nHere are the changes:\n \nIn the Excel2007 reader:\nafter the block of code that begins with: \n\t\t\t\t\t\t\t\t\t\t\tif ($oneCellAnchor->pic->blipFill) {\n \nI added:\n \n\t\t\t\t\t\t\t\t\t\t\telseif ($oneCellAnchor->sp) { \n                                       \n\t\t\t\t\t\t\t\t\t\t\t\t$xfrm = $oneCellAnchor->sp->spPr->children(\"http://schemas.openxmlformats.org/drawingml/2006/main\")->xfrm;\n\t\t\t\t\t\t\t\t\t\t\t\t$outerShdw = $oneCellAnchor->sp->spPr->children(\"http://schemas.openxmlformats.org/drawingml/2006/main\")->effectLst->outerShdw;\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t$objDrawing = new PHPExcel_Worksheet_Drawing;\n\t\t\t\t\t\t\t\t\t\t\t\t$objDrawing->setDrawingType('sp');\n\t\t\t\t\t\t\t\t\t\t\t\t$objDrawing->setName((string) self::array_item($oneCellAnchor->sp->nvSpPr->cNvPr->attributes(), \"name\"));\n\t\t\t\t\t\t\t\t\t\t\t\t$objDrawing->setDescription((string) self::array_item($oneCellAnchor->sp->nvSpPr->cNvPr->attributes(), \"descr\"));\n \n\t\t\t\t\t\t\t\t\t\t\t\t$objDrawing->setCoordinates(PHPExcel_Cell::stringFromColumnIndex($oneCellAnchor->from->col) . ($oneCellAnchor->from->row + 1));\n\t\t\t\t\t\t\t\t\t\t\t\t$objDrawing->setOffsetX(PHPExcel_Shared_Drawing::EMUToPixels($oneCellAnchor->from->colOff));\n\t\t\t\t\t\t\t\t\t\t\t\t$objDrawing->setOffsetY(PHPExcel_Shared_Drawing::EMUToPixels($oneCellAnchor->from->rowOff));\n\t\t\t\t\t\t\t\t\t\t\t\t$objDrawing->setResizeProportional(false);\n\t\t\t\t\t\t\t\t\t\t\t\t$objDrawing->setWidth(PHPExcel_Shared_Drawing::EMUToPixels(self::array_item($oneCellAnchor->ext->attributes(), \"cx\")));\n\t\t\t\t\t\t\t\t\t\t\t\t$objDrawing->setHeight(PHPExcel_Shared_Drawing::EMUToPixels(self::array_item($oneCellAnchor->ext->attributes(), \"cy\")));\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\tif ($xfrm) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t$objDrawing->setRotation(PHPExcel_Shared_Drawing::angleToDegrees(self::array_item($xfrm->attributes(), \"rot\")));\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\tif ($outerShdw) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t$shadow = $objDrawing->getShadow();\n\t\t\t\t\t\t\t\t\t\t\t\t\t$shadow->setVisible(true);\n\t\t\t\t\t\t\t\t\t\t\t\t\t$shadow->setBlurRadius(PHPExcel_Shared_Drawing::EMUTopixels(self::array_item($outerShdw->attributes(), \"blurRad\")));\n\t\t\t\t\t\t\t\t\t\t\t\t\t$shadow->setDistance(PHPExcel_Shared_Drawing::EMUTopixels(self::array_item($outerShdw->attributes(), \"dist\")));\n\t\t\t\t\t\t\t\t\t\t\t\t\t$shadow->setDirection(PHPExcel_Shared_Drawing::angleToDegrees(self::array_item($outerShdw->attributes(), \"dir\")));\n\t\t\t\t\t\t\t\t\t\t\t\t\t$shadow->setAlignment((string) self::array_item($outerShdw->attributes(), \"algn\"));\n\t\t\t\t\t\t\t\t\t\t\t\t\t$shadow->getColor()->setRGB(self::array_item($outerShdw->srgbClr->attributes(), \"val\"));\n\t\t\t\t\t\t\t\t\t\t\t\t\t$shadow->setAlpha(self::array_item($outerShdw->srgbClr->alpha->attributes(), \"val\") / 1000);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\tif ($oneCellAnchor->sp->txBody) {\n\t\t\t\t\t\t\t\t\t\t\t\t   $objDrawing->setTxBodyRaw($oneCellAnchor->sp->txBody->asXML());\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t$objDrawing->setWorksheet($docSheet);\n \n  \t\t\t\t\t\t\t\t\t      }\n \n \nIn the BaseDrawing.php class I added the following to the constructor:\n \n    \t$this->_txBodyRaw\t\t\t\t= ''; \n    \t$this->_drawingType      = 'pic'; \n \n \nand added the following functions:\n    /**\n     * Get txBodyRaw\n     *\n     * @return string\n     */\n    public function getTxBodyRaw() {\n    \treturn $this->_txBodyRaw;\n    }\n    \n    /**\n     * Set txBody\n     *\n     * @param \tstring $pValue\n     * @throws \tException\n     */\n    public function setTxBodyRaw($pValue = null) {\n   \t\t$this->_txBodyRaw = $pValue;\n    }\n    \n    /**\n     * Get drawingType\n     *\n     * @return string\n     */\n    public function getDrawingType() {\n    \treturn $this->_drawingType;\n    }\n    \n    /**\n     * Set drawingType \n     * \n     * @param \tstring $pValue\n     * @throws \tException\n     */\n    public function setDrawingType($pValue = null) {\n   \t\t$this->_drawingType = $pValue;\n    }\n \n \nIn the writer's drawing class in the _writeDrawing function I added this to the beginning:\n      if ($pDrawing->getDrawingType() == 'sp') { \n         \n   \t\tif ($pRelationId >= 0) {\n   \t\t\t// xdr:oneCellAnchor\n   \t\t\t$objWriter->startElement('xdr:oneCellAnchor');\n   \t\t\t\t// Image location\n   \t\t\t\t$aCoordinates \t\t= PHPExcel_Cell::coordinateFromString($pDrawing->getCoordinates());\n   \t\t\t\t$aCoordinates[0] \t= PHPExcel_Cell::columnIndexFromString($aCoordinates[0]);\n   \t\t\t\t\t\n   \t\t\t\t// xdr:from\n   \t\t\t\t$objWriter->startElement('xdr:from');\n   \t\t\t\t\t$objWriter->writeElement('xdr:col', $aCoordinates[0] - 1);\n   \t\t\t\t\t$objWriter->writeElement('xdr:colOff', PHPExcel_Shared_Drawing::pixelsToEMU($pDrawing->getOffsetX()));\n   \t\t\t\t\t$objWriter->writeElement('xdr:row', $aCoordinates[1] - 1);\n   \t\t\t\t\t$objWriter->writeElement('xdr:rowOff', PHPExcel_Shared_Drawing::pixelsToEMU($pDrawing->getOffsetY()));\n   \t\t\t\t$objWriter->endElement();\n   \t\t\t\t\t\n   \t\t\t\t// xdr:ext\n   \t\t\t\t$objWriter->startElement('xdr:ext');\n   \t\t\t\t\t$objWriter->writeAttribute('cx', PHPExcel_Shared_Drawing::pixelsToEMU($pDrawing->getWidth()));\n   \t\t\t\t\t$objWriter->writeAttribute('cy', PHPExcel_Shared_Drawing::pixelsToEMU($pDrawing->getHeight()));\n   \t\t\t\t$objWriter->endElement();\n   \n   \t\t\t\t// xdr:sp\n   \t\t\t\t$objWriter->startElement('xdr:sp');\n   \t\t\t\t\n  \t\t\t\t\t   $objWriter->writeAttribute('macro', ''); \n  \t\t\t\t\t   $objWriter->writeAttribute('textlink', ''); \n  \t\t\t\t\t   \n   \t\t\t\t\t// xdr:nvSpPr\n   \t\t\t\t\t$objWriter->startElement('xdr:nvSpPr');\n   \t\t\t\t\t\n   \t\t\t\t\t\t// xdr:cNvPr\n   \t\t\t\t\t\t$objWriter->startElement('xdr:cNvPr');\n   \t\t\t\t\t\t$objWriter->writeAttribute('id', $pRelationId);\n   \t\t\t\t\t\t$objWriter->writeAttribute('name', $pDrawing->getName());\n   \t\t\t\t\t\t$objWriter->writeAttribute('descr', $pDrawing->getDescription());\n   \t\t\t\t\t\t$objWriter->endElement();\n   \t\t\t\t\t\t\n   \t\t\t\t\t\t// xdr:cNvPicPr\n   \t\t\t\t\t\t$objWriter->startElement('xdr:cNvSpPr');\n  \t\t\t\t\t\t\t$objWriter->writeAttribute('txBox', '1');\n   \t\t\t\t\t\t$objWriter->endElement();\n   \t\t\t\t\t\n   \t\t\t\t\t$objWriter->endElement();\n \n   \t\t\t\t\t\t\n   \t\t\t\t\t// xdr:spPr\n   \t\t\t\t\t$objWriter->startElement('xdr:spPr');\n   \t\t\t\t\t\t\n   \t\t\t\t\t\t// a:xfrm\n   \t\t\t\t\t\t$objWriter->startElement('a:xfrm');\n   \t\t\t\t\t\t$objWriter->writeAttribute('rot', PHPExcel_Shared_Drawing::degreesToAngle($pDrawing->getRotation()));\n   \t\t\t\t\t\t$objWriter->endElement();\n   \n   \t\t\t\t\t\t// a:prstGeom\n   \t\t\t\t\t\t$objWriter->startElement('a:prstGeom');\n   \t\t\t\t\t\t$objWriter->writeAttribute('prst', 'rect');\n   \t\t\t\t\t\t\t\n   \t\t\t\t\t\t\t// a:avLst\n   \t\t\t\t\t\t\t$objWriter->writeElement('a:avLst', null);\n   \n   \t\t\t\t\t\t$objWriter->endElement();\n   \t\t\t\t\t\t\t\n   \t\t\t\t\t\t// a:solidFill\n   \t\t\t\t\t\t$objWriter->startElement('a:solidFill');\n   \n   \t\t\t\t\t\t\t// a:srgbClr\n   \t\t\t\t\t\t\t$objWriter->startElement('a:srgbClr');\n   \t\t\t\t\t\t\t$objWriter->writeAttribute('val', 'FFFFFF');\n   \n   /* SHADE\n   \t\t\t\t\t\t\t\t// a:shade\n   \t\t\t\t\t\t\t\t$objWriter->startElement('a:shade');\n   \t\t\t\t\t\t\t\t$objWriter->writeAttribute('val', '85000');\n   \t\t\t\t\t\t\t\t$objWriter->endElement();\n   */\n   \t\t\t\t\t\t\t\t\n   \t\t\t\t\t\t\t$objWriter->endElement();\n   \t\t\t\t\t\t\t\n   \t\t\t\t\t\t$objWriter->endElement();\n   /*\n   \t\t\t\t\t\t// a:ln\n   \t\t\t\t\t\t$objWriter->startElement('a:ln');\n   \t\t\t\t\t\t$objWriter->writeAttribute('w', '88900');\n   \t\t\t\t\t\t$objWriter->writeAttribute('cap', 'sq');\n   \n   \t\t\t\t\t\t\t// a:solidFill\n   \t\t\t\t\t\t\t$objWriter->startElement('a:solidFill');\n   \t\n   \t\t\t\t\t\t\t\t// a:srgbClr\n   \t\t\t\t\t\t\t\t$objWriter->startElement('a:srgbClr');\n   \t\t\t\t\t\t\t\t$objWriter->writeAttribute('val', 'FFFFFF');\n   \t\t\t\t\t\t\t\t$objWriter->endElement();\n   \t\t\t\t\t\t\t\t\n   \t\t\t\t\t\t\t$objWriter->endElement();\n   \t\t\t\t\t\t\t\t\n   \t\t\t\t\t\t\t// a:miter\n   \t\t\t\t\t\t\t$objWriter->startElement('a:miter');\n   \t\t\t\t\t\t\t$objWriter->writeAttribute('lim', '800000');\n   \t\t\t\t\t\t\t$objWriter->endElement();\n   \t\t\t\t\t\t\t\n   \t\t\t\t\t\t$objWriter->endElement();\n   */\n   \n   \t\t\t\t\t\tif ($pDrawing->getShadow()->getVisible()) {\n   \t\t\t\t\t\t\t// a:effectLst\n   \t\t\t\t\t\t\t$objWriter->startElement('a:effectLst');\n   \t\n   \t\t\t\t\t\t\t\t// a:outerShdw\n   \t\t\t\t\t\t\t\t$objWriter->startElement('a:outerShdw');\n   \t\t\t\t\t\t\t\t$objWriter->writeAttribute('blurRad', \t\tPHPExcel_Shared_Drawing::pixelsToEMU($pDrawing->getShadow()->getBlurRadius()));\n   \t\t\t\t\t\t\t\t$objWriter->writeAttribute('dist',\t\t\tPHPExcel_Shared_Drawing::pixelsToEMU($pDrawing->getShadow()->getDistance()));\n   \t\t\t\t\t\t\t\t$objWriter->writeAttribute('dir',\t\t\tPHPExcel_Shared_Drawing::degreesToAngle($pDrawing->getShadow()->getDirection()));\n   \t\t\t\t\t\t\t\t$objWriter->writeAttribute('algn',\t\t\t$pDrawing->getShadow()->getAlignment());\n   \t\t\t\t\t\t\t\t$objWriter->writeAttribute('rotWithShape', \t'0');\n   \t\t\t\t\t\t\t\t\n   \t\t\t\t\t\t\t\t\t// a:srgbClr\n   \t\t\t\t\t\t\t\t\t$objWriter->startElement('a:srgbClr');\n   \t\t\t\t\t\t\t\t\t$objWriter->writeAttribute('val',\t\t$pDrawing->getShadow()->getColor()->getRGB());\n   \t\t\n   \t\t\t\t\t\t\t\t\t\t// a:alpha\n   \t\t\t\t\t\t\t\t\t\t$objWriter->startElement('a:alpha');\n   \t\t\t\t\t\t\t\t\t\t$objWriter->writeAttribute('val', \t$pDrawing->getShadow()->getAlpha() * 1000);\n   \t\t\t\t\t\t\t\t\t\t$objWriter->endElement();\n   \t\t\t\t\t\t\t\t\t\t\n   \t\t\t\t\t\t\t\t\t$objWriter->endElement();\n   \t\t\n   \t\t\t\t\t\t\t\t$objWriter->endElement();\n   \t\t\t\t\t\t\t\t\n   \t\t\t\t\t\t\t$objWriter->endElement();\n   \t\t\t\t\t\t}\t\t\t\t\t\n   \n   \t\t\t\t\t\t// a:scene3d\n   \t\t\t\t\t\t$objWriter->startElement('a:scene3d');\n   \n   \t\t\t\t\t\t\t// a:camera\n   \t\t\t\t\t\t\t$objWriter->startElement('a:camera');\n   \t\t\t\t\t\t\t$objWriter->writeAttribute('prst', 'orthographicFront');\n   \t\t\t\t\t\t\t$objWriter->endElement();\n   \t\t\t\t\t\t\t\t\n   \t\t\t\t\t\t\t// a:lightRig\n   \t\t\t\t\t\t\t$objWriter->startElement('a:lightRig');\n   \t\t\t\t\t\t\t$objWriter->writeAttribute('rig', 'twoPt');\n   \t\t\t\t\t\t\t$objWriter->writeAttribute('dir', 't');\n   \t\n   \t\t\t\t\t\t\t\t// a:rot\n   \t\t\t\t\t\t\t\t$objWriter->startElement('a:rot');\n   \t\t\t\t\t\t\t\t$objWriter->writeAttribute('lat', '0');\n   \t\t\t\t\t\t\t\t$objWriter->writeAttribute('lon', '0');\n   \t\t\t\t\t\t\t\t$objWriter->writeAttribute('rev', '0');\n   \t\t\t\t\t\t\t\t$objWriter->endElement();\n   \t\t\t\t\t\t\t\t\t\n   \t\t\t\t\t\t\t$objWriter->endElement();\n   \t\n   \t\t\t\t\t\t$objWriter->endElement();\n   /*\t\t\t\t\t\t\t\n   \t\t\t\t\t\t// a:sp3d\n   \t\t\t\t\t\t$objWriter->startElement('a:sp3d');\n   \n   \t\t\t\t\t\t\t// a:bevelT\n   \t\t\t\t\t\t\t$objWriter->startElement('a:bevelT');\n   \t\t\t\t\t\t\t$objWriter->writeAttribute('w', '25400');\n   \t\t\t\t\t\t\t$objWriter->writeAttribute('h', '19050');\n   \t\t\t\t\t\t\t$objWriter->endElement();\n   \n   \t\t\t\t\t\t\t// a:contourClr\n   \t\t\t\t\t\t\t$objWriter->startElement('a:contourClr');\n   \n   \t\t\t\t\t\t\t\t// a:srgbClr\n   \t\t\t\t\t\t\t\t$objWriter->startElement('a:srgbClr');\n   \t\t\t\t\t\t\t\t$objWriter->writeAttribute('val', 'FFFFFF');\t\t\t\t\t\t\t\t\t\n   \t\t\t\t\t\t\t\t$objWriter->endElement();\n   \t\t\t\t\t\t\t\t\n   \t\t\t\t\t\t\t$objWriter->endElement();\n   \t\t\t\t\t\t\t\n   \t\t\t\t\t\t$objWriter->endElement();\n   */\n   \t\t\t\t\t$objWriter->endElement();\t\n \n   \t\t\t\t\t\n   \t\t\t\t\t$objWriter->writeRaw($pDrawing->getTxBodyRaw());\n \n   \t\t\t\t\n   \t\t\t\t$objWriter->endElement();\n   \t\t\t\t\t\n   \t\t\t\t// xdr:clientData\n   \t\t\t\t$objWriter->writeElement('xdr:clientData', null);\n   \n   \t\t\t$objWriter->endElement();\n   \t\t} else {\n   \t\t\tthrow new Exception(\"Invalid parameters passed.\");\n   \t\t}\n \n         return;\n \n      }\n \nin ContentTypes.php, I changed\n\t\t\t\tif ($this->getParentWriter()->getDrawingHashTable()->getByIndex($i) instanceof PHPExcel_Worksheet_Drawing) \nto \n\t\t\t\tif ($this->getParentWriter()->getDrawingHashTable()->getByIndex($i) instanceof PHPExcel_Worksheet_Drawing && $this->getParentWriter()->getDrawingHashTable()->getByIndex($i)->getDrawingType()=='pic') \n \nin two places (// Add media content-type and // Add worksheet relationship content types\n \n \nand in rels.php I changed\n\t\t\t\tif ($iterator->current() instanceof PHPExcel_Worksheet_Drawing) {\nto\n\t\t\t\tif ($iterator->current() instanceof PHPExcel_Worksheet_Drawing && $iterator->current()->getDrawingType()=='pic') { \n \n \n \nI hope that isn't too confusing to anyone!",
    "LastUpdatedDate": "2013-02-21T19:05:11.133-08:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "PHPExcel",
    "ReportedDate": "2008-06-27T07:23:34.233-07:00",
    "Status": {
      "Name": "Proposed",
      "Id": 1
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Using TextBoxes in Excel",
    "Type": {
      "Name": "Feature",
      "Id": 1
    },
    "VoteCount": 1,
    "Id": 6516
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "what it use in index file ",
      "PostedDate": "2011-08-18T01:08:25.88-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-02-21T19:05:11.133-08:00",
      "Id": -2147483648
    }
  ]
}