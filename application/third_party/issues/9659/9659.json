{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "PHPExcel",
      "DisplayName": "PHPExcel"
    },
    "ClosedComment": "Fixed in SVN",
    "ClosedDate": "2009-08-02T22:40:31.357-07:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "Example:\n \n=#REF!+#REF!\n \nThis is a useless formula, nevertheless valid, and it evaluates to #REF!\n \nWhen a template contains such as formula, PHPExcel_Writer_Excel2007 generates a corrupt xlsx file unless precalculation has been disabled.\n \nTest:\n----\n$reader = PHPExcel_IOFactory::createReader('Excel2007');\n$excel = $reader->load('read.xlsx');\n \n$sheet = $excel->getActiveSheet();\n \nvar_dump($sheet->getCell('A1')->getCalculatedValue());\n \n$writer = PHPExcel_IOFactory::createWriter($excel, 'Excel2007');\n$writer->save('write.xlsx');\n \nExpected result:\n----\nstring(5) \"#REF!\"\n \nActual result:\n----\nstring(12) \"=#REF!+#REF!\"\n[leading to corrupt Excel file]\n \nEnvironment:\n----\nPHPExcel 1.6.6 and latest source code",
    "LastUpdatedDate": "2013-05-16T05:42:47.82-07:00",
    "PlannedForRelease": "PHPExcel 1.7.0 Production",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "PHPExcel",
    "ReportedDate": "2009-04-02T00:18:47.467-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "getCalculatedValue() not working with some formulas involving error types",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 9659
  },
  "FileAttachments": [
    {
      "FileId": 2913,
      "FileName": "read.xlsx",
      "DownloadUrl": ".\\2913"
    },
    {
      "FileId": 2914,
      "FileName": "write.xlsx",
      "DownloadUrl": ".\\2914"
    }
  ],
  "Comments": [
    {
      "Message": "The major rewrite of the calculation engine that I'm currently working on will eliminate this particular situation, with errors being filtered back up through the engine without being treated as strings, but as genuine errors.... at least as regards standard Excel operators (+,-,*,/,^ and &). The logic that I have already traps for this.... It will probably require some additional work in the function handling to prevent =LOG(#REF!); so I'll look at handling that within the calculator as well, rathe rthan within the individual functions.",
      "PostedDate": "2009-04-02T00:33:15.937-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2009-04-02T00:34:06-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2009-08-02T03:48:43.237-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2009-08-02T22:39:58.523-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2009-08-02T22:40:31.357-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-02-21T19:04:12.35-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-05-16T05:42:47.82-07:00",
      "Id": -2147483648
    }
  ]
}