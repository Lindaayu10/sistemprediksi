<?php

//
// Alternative 2:
//
// Similar to Alternative 1. The properties of PHPExcel_Style are implemented with a collection of other classes, generally
// dubbed PHPExcel_Style_SubStyle. Alternative 2 is to create those property objects on the fly.
//
// Result: Reduction in memory consumption
//
// Consequences:
//
//   1. All places where PHPExcel_Style::$_font, $_numberformat, $_fill or any of the other properties are accessed code
//      must be aware that not all styles may have an entry
//      in $_styles.
//
//		PHPExcel_Style::__construct
//		--> Assignement only.
//
//		*	1. Delete the lines $this->_fill = new PHPExcel_Style_SubStyle(); It creates a default that may also be
//			   created on the fly later.
//
//		PHPExcel_Worksheet::getXXX() (XXX being Font, NumberFormat, etc.)
//		--> Public function.
//
//			1. Return the stored object or return the default object.
//
//			2. Implement code to make sure a change in any of the properties of the returned PHPExcel_Style_SubStyle object results
//			   in actually assigning the result to the property in the PHPExcel_Style object. This includes code that ensures
//				integrity if the caller calls getXXX() twice.
//
// Code below displays the impact of items marked * only for memory consumption demonstration purposes.
//

class PHPExcel_Style_SubStyle {							// This is a generalization for PHPExcel_Style_Fill, NumberFormat, etc.
    public static $cntObjects = 0;						// This for tracking purposes

    private $_property;									// This could be any of the properties of these classes.

	function __construct() {
		PHPExcel_Style_SubStyle::$cntObjects++;
		$this->_property = 0;
	}

    public function getProperty() {
    	return $this->_property;
    }
    
    public function setProperty($value) {
    	$this->_property = $value;
    }

	public function __clone() {
		self::$cntObjects++;

		$vars = get_object_vars($this);
		foreach ($vars as $key => $value) {
			if (is_object($value)) {
				$this->$key = clone $value;
			} else {
				$this->$key = $value;
			}
		}
	}
}

class PHPExcel_Style {
    public static $cntObjects = 0;						// This for tracking purposes

	private $_font;
	private $_fill;
	private $_borders;
	private $_alignment;
	private $_numberFormat;
	private $_protection;

	public function __construct() {
		PHPExcel_Style::$cntObjects++;
//		$this->_font			= new PHPExcel_Style_SubStyle();
//		$this->_fill			= new PHPExcel_Style_SubStyle();
//		$this->_borders			= new PHPExcel_Style_SubStyle();
//		$this->_alignment		= new PHPExcel_Style_SubStyle();
//		$this->_numberFormat	= new PHPExcel_Style_SubStyle();
//		$this->_protection		= new PHPExcel_Style_SubStyle();
	}

	public function __clone() {
		self::$cntObjects++;

		$vars = get_object_vars($this);
		foreach ($vars as $key => $value) {
			if (is_object($value)) {
				$this->$key = clone $value;
			} else {
				$this->$key = $value;
			}
		}
	}
	
	
}

class PHPExcel_Worksheet {

	private $_styles = array();

	public function __construct() {
   		$this->_styles['default'] 	= new PHPExcel_Style();
	}
	
    public function getDefaultStyle() {
    	return $this->_styles['default'];
    }
    
    public function getStyle($pCellCoordinate = 'A1')
    {
		// Check if we already have style information for this cell.
		// If not, create a new style.
		if (isset($this->_styles[$pCellCoordinate])) {
			return $this->_styles[$pCellCoordinate];
		} else {
			$newStyle = clone $this->getDefaultStyle();
			$this->_styles[$pCellCoordinate] = $newStyle;
			return $newStyle;
		}    
    }

	public function __clone() {
		$vars = get_object_vars($this);
		foreach ($vars as $key => $value) {
			if (is_object($value)) {
				$this->$key = clone $value;
			} else {
				$this->$key = $value;
			}
		}
	}
}

echo "Memory usage: ".memory_get_usage()."\n";

$activeWorksheet = new PHPExcel_Worksheet();

for($column = 'A'; $column <= 'K'; $column++) {
	for($row = 1; $row <= 500; $row++) {
		$style = $activeWorksheet->getStyle("$column$row");
	}
}

echo "Memory usage: ".memory_get_usage()."\n";

echo "To the caller it appeared we just stored in memory (but we actually didn't):\n";
echo "PHPExcel_Style objects: ".PHPExcel_Style::$cntObjects."\n";
echo "PHPExcel_Style_SubStyle objects: ".PHPExcel_Style_SubStyle::$cntObjects."\n";


?>
