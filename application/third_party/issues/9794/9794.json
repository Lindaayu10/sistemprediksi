{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "PHPExcel",
      "DisplayName": "PHPExcel"
    },
    "ClosedComment": "Fixed in SVN",
    "ClosedDate": "2009-04-22T15:27:03.157-07:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "From thread (problem 2):\nhttp://phpexcel.codeplex.com/Thread/View.aspx?ThreadId=53617\n \nTest:\n----\n$reader = new PHPExcel_Reader_Excel2007();\n$PHPExcel = $reader->load('padded.xlsx');\n \n$writer = new PHPExcel_Writer_PDF($PHPExcel);\n$writer->save('padded.pdf');\n \n$writer = new PHPExcel_Writer_HTML($PHPExcel);\n$writer->save('padded.html');\n \nExpected result:\n----\nHTML and PDF looks like input\n \nActual result:\n----\nNumbers that were formatted to a fixed number of decimals (other than 2 decimals) have lost formatting\n \nScreen shots:\n----\npadded.xlsx\nhttp://img524.imageshack.us/img524/9972/paddedxlsx.png\n \npadded.pdf\nhttp://img21.imageshack.us/img21/4564/paddedpdf.png\n \npadded.html\nhttp://img21.imageshack.us/img21/9663/paddedhtml.png\n \nEnvironment:\n----\nPHPExcel 1.6.6 (and latest source code)",
    "LastUpdatedDate": "2013-05-16T05:42:44.67-07:00",
    "PlannedForRelease": "PHPExcel 1.7.0 Production",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "PHPExcel",
    "ReportedDate": "2009-04-17T22:47:14.793-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Support arbitrary fixed number of decimals in PHPExcel_Style_NumberFormat::toFormattedString()",
    "Type": {
      "Name": "Feature",
      "Id": 1
    },
    "VoteCount": 1,
    "Id": 9794
  },
  "FileAttachments": [
    {
      "FileId": 2990,
      "FileName": "padded.xlsx",
      "DownloadUrl": ".\\2990"
    },
    {
      "FileId": 2991,
      "FileName": "padded.pdf",
      "DownloadUrl": ".\\2991"
    },
    {
      "FileId": 2992,
      "FileName": "padded.html",
      "DownloadUrl": ".\\2992"
    }
  ],
  "Comments": [
    {
      "Message": "There is recent fork of SourceForge PHP-ExcelReader called php-excel-reader at Google Code:\r\nhttp://code.google.com/p/php-excel-reader/\r\n\r\nIf you look into that package, there is a function _format_value($format,$num,$f) which is more sophisticated than the original. A quick test shows that it handles the above cases. Perhaps we can incorporate some of the code? I have not looked much into this.\r\n",
      "PostedDate": "2009-04-17T23:17:31.027-07:00",
      "Id": -2147483648
    },
    {
      "Message": "Erik, can you look into this?",
      "PostedDate": "2009-04-18T01:35:14.59-07:00",
      "Id": -2147483648
    },
    {
      "Message": "Ok, will try to submit patch. Hope to get it done within 4-5 days.",
      "PostedDate": "2009-04-18T05:31:39.833-07:00",
      "Id": -2147483648
    },
    {
      "Message": "Sounds great! Perhaps converting the pattern to a sprintf() compatible string would do the trick?",
      "PostedDate": "2009-04-20T01:56:37.1-07:00",
      "Id": -2147483648
    },
    {
      "Message": "Implemented by converting the pattern to a sprintf() compatible string. Borrowed some snippets from php-excel-reader at Google Code.\r\n\r\nThere is room for improvement later, but the direction is set where the formatted string is resolved programatically rather than by look-ups. The mentioned cases are fixed by the changes made here.\r\n",
      "PostedDate": "2009-04-22T15:12:16.64-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2009-04-22T15:26:47.39-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2009-04-22T15:27:03.157-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-02-21T19:04:07.82-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-05-16T05:42:44.67-07:00",
      "Id": -2147483648
    }
  ]
}