{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "PHPExcel",
      "DisplayName": "PHPExcel"
    },
    "ClosedComment": "",
    "ClosedDate": "2010-05-11T00:59:12.027-07:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "From Microsoft Office Online\nhttp://office.microsoft.com/en-us/excel/HP012165031033.aspx\n \nA comma that follows a digit placeholder scales the number by 1,000. For example, if the format is #.0,, and you type 12,200,000 in the cell, the number 12.200.0  is displayed.\n \n----\nPHPExcel does not recognize this feature of number formats. This affects output by PHPExcel_Writer_HTML\n \nTest\n----\n$excel = PHPExcel_IOFactory::load('thousands-scale.xlsx');\n \n$writer = PHPExcel_IOFactory::createWriter($excel, 'HTML');\n$writer->save('write.html');\n \nExpected output:\n----\nHTML output looks like the opened Excel file\n \nActual output:\n----\nNumbers are not scaled. We see:\nUSD 90000000.5 MM\ninstead of\nUSD 90.5 MM\n \nEnvironment\n----\nPHPExcel 1.7.2",
    "LastUpdatedDate": "2017-11-27T22:26:11.503-08:00",
    "PlannedForRelease": "PHPExcel 1.7.3 Production",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "PHPExcel",
    "ReportedDate": "2010-03-16T21:01:33.103-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Thousands scale (1000^n) support in PHPExcel_Style_NumberFormat::toFormattedString",
    "Type": {
      "Name": "Feature",
      "Id": 1
    },
    "VoteCount": 1,
    "Id": 12096
  },
  "FileAttachments": [
    {
      "FileId": 3979,
      "FileName": "thousands-scale.xlsx",
      "DownloadUrl": ".\\3979"
    },
    {
      "FileId": 3980,
      "FileName": "write.html",
      "DownloadUrl": ".\\3980"
    },
    {
      "FileId": 3982,
      "FileName": "wi-12096.patch",
      "DownloadUrl": ".\\3982"
    }
  ],
  "Comments": []
}