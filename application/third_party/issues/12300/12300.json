{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "PHPExcel",
      "DisplayName": "PHPExcel"
    },
    "ClosedComment": "",
    "ClosedDate": "2010-05-11T00:59:12.027-07:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "This is what I'm seeing in version 1.7.1 of PHPExcel:\nIf I use \n$sheet->getColumnDimension('A')->setAutoSize(true);\nand the greatest width in any cell of A is one that has been number formatted, the width is being calculated to the original number and not the formatted number. \n \n1st Example:\n$sheet->getColumnDimension('A')->setAutoSize(true);\n$sheet->getStyle('A1')->getNumberFormat()->setFormatCode(PHPExcel_Style_NumberFormat::FORMAT_CURRENCY_USD_SIMPLE);\nThe dollar symbol ($) prefixed to the number is not being calculated into the width\n \n2nd Example:\n$sheet->getColumnDimension('A')->setAutoSize(true);\n$sheet->setCellValueByColumnAndRow(0, 1, 9);\n$sheet->getStyle('A1')->getNumberFormat()->setFormatCode('0000');\nThe width is set for the original number 9, (unformatted) and is too small to display '0009'. Problem is very noticeable with this type of number formatting.\n \nSample file attached.",
    "LastUpdatedDate": "2017-11-27T22:26:12.073-08:00",
    "PlannedForRelease": "PHPExcel 1.7.3 Production",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "PHPExcel",
    "ReportedDate": "2010-03-26T11:53:25.417-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "getColumnDimension()->setAutoSize() incorrect on cells with Number Formatting",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 12300
  },
  "FileAttachments": [
    {
      "FileId": 4062,
      "FileName": "nf_sample.php",
      "DownloadUrl": ".\\4062"
    },
    {
      "FileId": 4067,
      "FileName": "wi-12300.patch",
      "DownloadUrl": ".\\4067"
    }
  ],
  "Comments": [
    {
      "Message": "1st example:\r\nActually, it does take into account the dollar symbol ($)\r\n\r\n2nd example:\r\nYou are right, it didn't take into account the format '0000'. Now fixed.\r\n\r\nGenerally, you may try to export to HTML using PHPExcel and inspect the output. The output will reveal whether PHPExcel is able to format the particular number correctly. In 2nd example HTML output showed 9 instead of 0009. Now it shows 0009 as it should.\r\n\r\nDownload latest source code tomorrow:\r\nhttp://phpexcel.codeplex.com/SourceControl/list/changesets",
      "PostedDate": "2010-03-26T20:52:17.667-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2010-03-26T20:52:20.48-07:00",
      "Id": -2147483648
    },
    {
      "Message": "Thank you!",
      "PostedDate": "2010-03-29T05:24:30.647-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2010-05-11T00:59:12.027-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-02-21T19:03:05.663-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-05-16T05:42:03.917-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2017-11-27T22:26:12.073-08:00",
      "Id": -2147483648
    }
  ]
}