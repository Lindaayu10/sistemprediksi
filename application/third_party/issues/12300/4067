Index: Classes/PHPExcel/Style/NumberFormat.php
===================================================================
--- Classes/PHPExcel/Style/NumberFormat.php	(revision 1399)
+++ Classes/PHPExcel/Style/NumberFormat.php	(working copy)
@@ -634,10 +634,7 @@
 					$format = preg_replace('/#,+/', '#', $format);
 				}
 
-				// TEMPORARY - Convert # to 0
-				$format = preg_replace('/\\#/', '0', $format);
-
-				if (preg_match('/0?.*\?\/\?/', $format, $m)) {
+				if (preg_match('/#?.*\?\/\?/', $format, $m)) {
 					//echo 'Format mask is fractional '.$format.' <br />';
 					if ($value != (int)$value) {
 						$sign = ($value < 0) ? '-' : '';
@@ -667,12 +664,19 @@
 					// scale number
 					$value = $value / $scale;
 
-					$number_regex = "/(\d+)(\.?)(\d*)/";
+					// Strip #
+					$format = preg_replace('/\\#/', '', $format);
+
+					$number_regex = "/(0+)(\.?)(0*)/";
 					$matches = array();
 					if (preg_match($number_regex, $format, $matches)) {
 						$left = $matches[1];
 						$dec = $matches[2];
 						$right = $matches[3];
+
+						// minimun width of formatted number (including dot)
+						$minWidth = strlen($left) + strlen($dec) + strlen($right);
+
 						if ($useThousands) {
 							$value = number_format(
 								$value
@@ -682,9 +686,10 @@
 							);
 
 						} else {
-							$sprintf_pattern = "%1." . strlen($right) . "f";
+							$sprintf_pattern = "%0$minWidth." . strlen($right) . "f";
 							$value = sprintf($sprintf_pattern, $value);
 						}
+
 						$value = preg_replace($number_regex, $value, $format);
 					}
 				}
