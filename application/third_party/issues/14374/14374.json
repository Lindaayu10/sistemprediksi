{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "PHPExcel_Reader_Excel5",
      "DisplayName": "PHPExcel_Reader_Excel5"
    },
    "ClosedComment": "Fixed in SVN",
    "ClosedDate": "2010-10-12T11:54:33.63-07:00",
    "CommentCount": 0,
    "Custom": null,
    "Description": "Hello,\n \nI have one XLS file with 100.000 rows and 8 Columns, i  want to parse it step by step, but in Excel5 they try to load whole file  at once,\n \nXLSX , CSV works fine , is this bug in Excel5 ?\n \n \n \nHere my code sample :\n \nclass MyReadFilter implements PHPExcel_Reader_IReadFilter {   public function readCell($column, $row, $worksheetName = '') {         // Read row 0 - 50         if ($row >= 0 && $row <=50)             return true;     else       return false;     } }             \n \n  $filter = new MyReadFilter();   $objReader = PHPExcel_IOFactory::createReader('Excel5');   $objReader->setReadFilter($filter);\n \n \n \nPS: I have noticed that if you open ODS files, they have this problem too",
    "LastUpdatedDate": "2013-05-16T05:41:51.25-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "PHPExcel",
    "ReportedDate": "2010-10-04T14:16:05.613-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "BUG : Excel5 and setReadFilter ?",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 14374
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "The problem should have been fixed for ODS files... The filtering was only implemented recently in the SVN code.\r\n\r\nHowever, it should be working for the Excel5 Reader, but I can confirm that it isn't.",
      "PostedDate": "2010-10-04T14:18:57.57-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2010-10-04T14:19:45.45-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2010-10-04T14:20:05.293-07:00",
      "Id": -2147483648
    },
    {
      "Message": "It looks as though shared styles are causing the problem. I've made a minor change to my current development code for shared formulae where I'd identified an error, but unless I set setReadDataOnly(true), the Reader still creates all the cells in the worksheet. Will investigate further.",
      "PostedDate": "2010-10-04T16:28:09.31-07:00",
      "Id": -2147483648
    },
    {
      "Message": "No problem with shared styles. My test routine was actually creating the cells that should have been excluded by the filter while it was dumping out the test result",
      "PostedDate": "2010-10-06T06:11:41.55-07:00",
      "Id": -2147483648
    },
    {
      "Message": "Hello , is working but has another bug.\r\n\r\nI have test it , and found out that it only works if you set filter like \r\nlike  (it needs about 54 MB memory) : \r\nif ($row >= 0 && $row < 500)\r\n\r\nbut if you will skip first 500 row, and will read next 500 rows you will get 500 rows what are containing empty string\r\nlike (needs \"only\" 39 MB) :\r\nif ($row >= 500 && $row < 1000)\r\n\r\nIs there maybe another bug with memory too ? Cause empty rows takes MORE memory as filled rows ?",
      "PostedDate": "2010-10-06T09:51:21.807-07:00",
      "Id": -2147483648
    },
    {
      "Message": "Does your worksheet have empty rows? Open the workbook in Excel and hit CTRL-END to go to the bottom of the worksheet. PHPExcel will not load any rows below that point, or columns to the right of that point. However, it will still load any cells (assuming that they match your filter) up to that point, even if the cells contain no data, though they should take marginally less memory than a row containing cells with data.\r\n\r\nYour first 500 rows took 54MB of memory, the next set of 500 mainly empty rows took 39MB... so the empty cells look as though they are using less memory (as is expected).",
      "PostedDate": "2010-10-06T14:22:36.887-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2010-10-12T11:54:33.63-07:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-02-21T19:02:43.09-08:00",
      "Id": -2147483648
    },
    {
      "Message": "",
      "PostedDate": "2013-05-16T05:41:51.25-07:00",
      "Id": -2147483648
    }
  ]
}