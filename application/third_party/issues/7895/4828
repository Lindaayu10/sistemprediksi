<?php
/**
 * PHPExcel
 *
 * Copyright (C) 2006 - 2010 PHPExcel
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
 *
 * @category   PHPExcel
 * @package    PHPExcel
 * @copyright  Copyright (c) 2006 - 2010 PHPExcel (http://www.codeplex.com/PHPExcel)
 * @license    http://www.gnu.org/licenses/old-licenses/lgpl-2.1.txt	LGPL
 * @version    ##VERSION##, ##DATE##
 */

/** Error reporting */
error_reporting(E_ALL);

date_default_timezone_set('Europe/London');

/** PHPExcel */
require_once '../PHPExcel/Classes/PHPExcel.php';

// Create new PHPExcel object
echo date('H:i:s') . " Create new PHPExcel object<br />";
$objPHPExcel = new PHPExcel();

// Set properties
echo date('H:i:s') . " Set properties<br />";
$objPHPExcel->getProperties()->setCreator("Maarten Balliauw")
							 ->setLastModifiedBy("Franck LEFEVRE")
							 ->setTitle("Office 97/2000 XLS Test Document")
							 ->setSubject("Office 97/2000 XLS Test Document")
							 ->setDescription("Test document for Office 97/2000 XLS, generated using PHP classes.")
							 ->setKeywords("office 97/2000 php")
							 ->setCategory("Test result file");


// Add some data, we will use some formulas here
echo date('H:i:s') . " Add some data<br />";

// Initialisation

$objPHPExcel->getActiveSheet()->setCellValue('A1', 'Initial Value:');

$objPHPExcel->getActiveSheet()->setCellValue('B1', '23');
$objPHPExcel->getActiveSheet()->setCellValue('B2', '=B1+B1');
$objPHPExcel->addNamedRange( new PHPExcel_NamedRange('myFoo', $objPHPExcel->getActiveSheet(), 'B1') );

$objPHPExcel->setActiveSheetIndex(0);

$objPHPExcel->createSheet();
$objPHPExcel->setActiveSheetIndex(1);
$objPHPExcel->getActiveSheet()->setTitle('Another \'quote\'\' sheet');
$objPHPExcel->getActiveSheet()->setCellValue('A1', '45');

$objPHPExcel->createSheet();
$objPHPExcel->setActiveSheetIndex(2);
$objPHPExcel->getActiveSheet()->setTitle('Sheet3');
$objPHPExcel->getActiveSheet()->setCellValue('A1', '56');

$objPHPExcel->setActiveSheetIndex(0);

// TESTS

$objPHPExcel->getActiveSheet()->setCellValue('A3', 'Unary plus:');
$objPHPExcel->getActiveSheet()->getStyle('A3')->getFill()->setFillType(PHPExcel_Style_Fill::FILL_SOLID)->getStartColor()->setARGB(PHPExcel_Style_Color::COLOR_DARKGREEN);
$objPHPExcel->getActiveSheet()->setCellValue('B3', '=+B1');

$objPHPExcel->getActiveSheet()->setCellValue('A4', 'Percent:');
$objPHPExcel->getActiveSheet()->getStyle('A4')->getFill()->setFillType(PHPExcel_Style_Fill::FILL_SOLID)->getStartColor()->setARGB(PHPExcel_Style_Color::COLOR_DARKGREEN);
$objPHPExcel->getActiveSheet()->setCellValue('B4', '=100%');
$objPHPExcel->getActiveSheet()->setCellValue('C4', '=75%');
$objPHPExcel->getActiveSheet()->setCellValue('D4', '=50%');
$objPHPExcel->getActiveSheet()->setCellValue('E4', '=25%');
$objPHPExcel->getActiveSheet()->setCellValue('F4', '=0%');

$objPHPExcel->getActiveSheet()->setCellValue('A5', 'Power:');
$objPHPExcel->getActiveSheet()->getStyle('A5')->getFill()->setFillType(PHPExcel_Style_Fill::FILL_SOLID)->getStartColor()->setARGB(PHPExcel_Style_Color::COLOR_DARKGREEN);
$objPHPExcel->getActiveSheet()->setCellValue('B5', '=2^8');

$objPHPExcel->getActiveSheet()->setCellValue('A6', 'Concatenation operator :');
$objPHPExcel->getActiveSheet()->getStyle('A6')->getFill()->setFillType(PHPExcel_Style_Fill::FILL_SOLID)->getStartColor()->setARGB(PHPExcel_Style_Color::COLOR_DARKGREEN);
$objPHPExcel->getActiveSheet()->setCellValue('B6', '="Hello"&"World"');

$objPHPExcel->getActiveSheet()->setCellValue('A7', 'Intersection operator:');
#$objPHPExcel->getActiveSheet()->setCellValue('B7', '=B1 B1');
#$objPHPExcel->getActiveSheet()->setCellValue('C7', '?????');

$objPHPExcel->getActiveSheet()->setCellValue('A8', 'Range list operator:');
#$objPHPExcel->getActiveSheet()->setCellValue('B8', '=A1,A2');

$objPHPExcel->getActiveSheet()->setCellValue('A9', 'Omitted argument in function:');
#$objPHPExcel->getActiveSheet()->setCellValue('B9', '=SUM(1,,3)');

$objPHPExcel->getActiveSheet()->setCellValue('A10', 'String constant containing double quotation mark :');
$objPHPExcel->getActiveSheet()->getStyle('A10')->getFill()->setFillType(PHPExcel_Style_Fill::FILL_SOLID)->getStartColor()->setARGB(PHPExcel_Style_Color::COLOR_DARKGREEN);
$objPHPExcel->getActiveSheet()->setCellValue('B10', '="buy ""fresh"" fish"');
$objPHPExcel->getActiveSheet()->setCellValue('C10', '="buy ""fresh"');
$objPHPExcel->getActiveSheet()->setCellValue('D10', '="buy """');

$objPHPExcel->getActiveSheet()->setCellValue('A11', 'Error constant :');
$objPHPExcel->getActiveSheet()->getStyle('A11')->getFill()->setFillType(PHPExcel_Style_Fill::FILL_SOLID)->getStartColor()->setARGB(PHPExcel_Style_Color::COLOR_DARKGREEN);
$objPHPExcel->getActiveSheet()->setCellValue('B11', '=#NULL!');
$objPHPExcel->getActiveSheet()->setCellValue('C11', '=#DIV/0!');
$objPHPExcel->getActiveSheet()->setCellValue('D11', '=#VALUE!');
$objPHPExcel->getActiveSheet()->setCellValue('E11', '=#REF!');
$objPHPExcel->getActiveSheet()->setCellValue('F11', '=#NAME?');
$objPHPExcel->getActiveSheet()->setCellValue('G11', '=#NUM!');
$objPHPExcel->getActiveSheet()->setCellValue('H11', '=#N/A');

$objPHPExcel->getActiveSheet()->setCellValue('A12', 'Boolean constant :');
#$objPHPExcel->getActiveSheet()->setCellValue('B12', '=TRUE');
#$objPHPExcel->getActiveSheet()->setCellValue('C12', '=FALSE');

$objPHPExcel->getActiveSheet()->setCellValue('A13', 'Array constant :');
#$objPHPExcel->getActiveSheet()->setCellValue('B13', '={1,2,3}');

$objPHPExcel->getActiveSheet()->setCellValue('A14', 'Defined names:');
#$objPHPExcel->getActiveSheet()->setCellValue('B14', '=myFoo');

$objPHPExcel->getActiveSheet()->setCellValue('A15', 'Cell range address with absolute references:');
$objPHPExcel->getActiveSheet()->getStyle('A15')->getFill()->setFillType(PHPExcel_Style_Fill::FILL_SOLID)->getStartColor()->setARGB(PHPExcel_Style_Color::COLOR_DARKGREEN);
$objPHPExcel->getActiveSheet()->setCellValue('B15', '=SUM($B$1:$B$2)');

$objPHPExcel->getActiveSheet()->setCellValue('A16', 'Sheet name containing single quotation mark:');
$objPHPExcel->getActiveSheet()->getStyle('A16')->getFill()->setFillType(PHPExcel_Style_Fill::FILL_SOLID)->getStartColor()->setARGB(PHPExcel_Style_Color::COLOR_RED);
#$objPHPExcel->getActiveSheet()->setCellValue('B16', '=Another \'quote\'\' sheet!A1');
$objPHPExcel->getActiveSheet()->setCellValue('C16', '=\'Sheet3\'!A1');

$objPHPExcel->getActiveSheet()->setCellValue('A17', '3d reference involving sheet range:');
#$objPHPExcel->getActiveSheet()->setCellValue('B17', '=SUM(Formulas:Sheet2!A1)');

$objPHPExcel->getActiveSheet()->setCellValue('A18', '3d area involving sheet range:');
#$objPHPExcel->getActiveSheet()->setCellValue('B18', '=SUM(Formulas:Sheet2!A1:B2)');

$objPHPExcel->getActiveSheet()->setCellValue('A19', 'Whitespace in formulas:');
$objPHPExcel->getActiveSheet()->getStyle('A19')->getFill()->setFillType(PHPExcel_Style_Fill::FILL_SOLID)->getStartColor()->setARGB(PHPExcel_Style_Color::COLOR_DARKGREEN);
$objPHPExcel->getActiveSheet()->setCellValue('B19', '="Hello'.chr(10).'World"');

// Rename sheet
echo date('H:i:s') . " Rename sheet<br />";
$objPHPExcel->getActiveSheet()->setTitle('Formulas');

// Set active sheet index to the first sheet, so Excel opens this as the first sheet
$objPHPExcel->setActiveSheetIndex(0);
$objPHPExcel->getActiveSheet()->getColumnDimension('A')->setAutoSize(true);
$objPHPExcel->getActiveSheet()->getColumnDimension('B')->setAutoSize(true);
$objPHPExcel->getActiveSheet()->getColumnDimension('C')->setWidth(12);
$objPHPExcel->getActiveSheet()->getColumnDimension('D')->setWidth(12);
$objPHPExcel->getActiveSheet()->getColumnDimension('E')->setWidth(12);
$objPHPExcel->getActiveSheet()->getColumnDimension('F')->setWidth(12);
$objPHPExcel->getActiveSheet()->getColumnDimension('G')->setWidth(12);
$objPHPExcel->getActiveSheet()->getColumnDimension('H')->setWidth(12);


// Save Excel5 file
echo date('H:i:s') . " Write to Excel5 format<br />";
$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
$objWriter->save(str_replace('.php', '.xls', __FILE__));

// Echo memory peak usage
echo date('H:i:s') . " Peak memory usage: " . (memory_get_peak_usage(true) / 1024 / 1024) . " MB<br />";

// Echo done
echo date('H:i:s') . " Done writing files.<br />";
?>